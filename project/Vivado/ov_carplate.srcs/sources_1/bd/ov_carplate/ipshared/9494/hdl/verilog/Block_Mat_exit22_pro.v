// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_Mat_exit22_pro (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        xleft_s,
        xright_s,
        ytop_s,
        ydown_s,
        xleft_out_din,
        xleft_out_full_n,
        xleft_out_write,
        xleft_out1_din,
        xleft_out1_full_n,
        xleft_out1_write,
        xright_out_din,
        xright_out_full_n,
        xright_out_write,
        xright_out2_din,
        xright_out2_full_n,
        xright_out2_write,
        ytop_out_din,
        ytop_out_full_n,
        ytop_out_write,
        ytop_out3_din,
        ytop_out3_full_n,
        ytop_out3_write,
        ydown_out_din,
        ydown_out_full_n,
        ydown_out_write,
        ydown_out4_din,
        ydown_out4_full_n,
        ydown_out4_write,
        rgb_img_rows_V_out_din,
        rgb_img_rows_V_out_full_n,
        rgb_img_rows_V_out_write,
        rgb_img_cols_V_out_din,
        rgb_img_cols_V_out_full_n,
        rgb_img_cols_V_out_write,
        plate_rows_V_out_din,
        plate_rows_V_out_full_n,
        plate_rows_V_out_write,
        plate_cols_V_out_din,
        plate_cols_V_out_full_n,
        plate_cols_V_out_write,
        standard_plate_rows_V_out_din,
        standard_plate_rows_V_out_full_n,
        standard_plate_rows_V_out_write,
        standard_plate_cols_V_out_din,
        standard_plate_cols_V_out_full_n,
        standard_plate_cols_V_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] xleft_s;
input  [31:0] xright_s;
input  [31:0] ytop_s;
input  [31:0] ydown_s;
output  [31:0] xleft_out_din;
input   xleft_out_full_n;
output   xleft_out_write;
output  [31:0] xleft_out1_din;
input   xleft_out1_full_n;
output   xleft_out1_write;
output  [31:0] xright_out_din;
input   xright_out_full_n;
output   xright_out_write;
output  [31:0] xright_out2_din;
input   xright_out2_full_n;
output   xright_out2_write;
output  [31:0] ytop_out_din;
input   ytop_out_full_n;
output   ytop_out_write;
output  [31:0] ytop_out3_din;
input   ytop_out3_full_n;
output   ytop_out3_write;
output  [31:0] ydown_out_din;
input   ydown_out_full_n;
output   ydown_out_write;
output  [31:0] ydown_out4_din;
input   ydown_out4_full_n;
output   ydown_out4_write;
output  [10:0] rgb_img_rows_V_out_din;
input   rgb_img_rows_V_out_full_n;
output   rgb_img_rows_V_out_write;
output  [11:0] rgb_img_cols_V_out_din;
input   rgb_img_cols_V_out_full_n;
output   rgb_img_cols_V_out_write;
output  [31:0] plate_rows_V_out_din;
input   plate_rows_V_out_full_n;
output   plate_rows_V_out_write;
output  [31:0] plate_cols_V_out_din;
input   plate_cols_V_out_full_n;
output   plate_cols_V_out_write;
output  [6:0] standard_plate_rows_V_out_din;
input   standard_plate_rows_V_out_full_n;
output   standard_plate_rows_V_out_write;
output  [8:0] standard_plate_cols_V_out_din;
input   standard_plate_cols_V_out_full_n;
output   standard_plate_cols_V_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg xleft_out_write;
reg xleft_out1_write;
reg xright_out_write;
reg xright_out2_write;
reg ytop_out_write;
reg ytop_out3_write;
reg ydown_out_write;
reg ydown_out4_write;
reg rgb_img_rows_V_out_write;
reg rgb_img_cols_V_out_write;
reg plate_rows_V_out_write;
reg plate_cols_V_out_write;
reg standard_plate_rows_V_out_write;
reg standard_plate_cols_V_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    xleft_out_blk_n;
reg    xleft_out1_blk_n;
reg    xright_out_blk_n;
reg    xright_out2_blk_n;
reg    ytop_out_blk_n;
reg    ytop_out3_blk_n;
reg    ydown_out_blk_n;
reg    ydown_out4_blk_n;
reg    rgb_img_rows_V_out_blk_n;
reg    rgb_img_cols_V_out_blk_n;
reg    plate_rows_V_out_blk_n;
reg    plate_cols_V_out_blk_n;
reg    standard_plate_rows_V_out_blk_n;
reg    standard_plate_cols_V_out_blk_n;
reg    ap_block_state1;
wire   [31:0] sub_ln23_fu_356_p2;
wire   [31:0] sub_ln24_fu_369_p2;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        plate_cols_V_out_blk_n = plate_cols_V_out_full_n;
    end else begin
        plate_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        plate_cols_V_out_write = 1'b1;
    end else begin
        plate_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        plate_rows_V_out_blk_n = plate_rows_V_out_full_n;
    end else begin
        plate_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        plate_rows_V_out_write = 1'b1;
    end else begin
        plate_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rgb_img_cols_V_out_blk_n = rgb_img_cols_V_out_full_n;
    end else begin
        rgb_img_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rgb_img_cols_V_out_write = 1'b1;
    end else begin
        rgb_img_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rgb_img_rows_V_out_blk_n = rgb_img_rows_V_out_full_n;
    end else begin
        rgb_img_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rgb_img_rows_V_out_write = 1'b1;
    end else begin
        rgb_img_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        standard_plate_cols_V_out_blk_n = standard_plate_cols_V_out_full_n;
    end else begin
        standard_plate_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        standard_plate_cols_V_out_write = 1'b1;
    end else begin
        standard_plate_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        standard_plate_rows_V_out_blk_n = standard_plate_rows_V_out_full_n;
    end else begin
        standard_plate_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        standard_plate_rows_V_out_write = 1'b1;
    end else begin
        standard_plate_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xleft_out1_blk_n = xleft_out1_full_n;
    end else begin
        xleft_out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xleft_out1_write = 1'b1;
    end else begin
        xleft_out1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xleft_out_blk_n = xleft_out_full_n;
    end else begin
        xleft_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xleft_out_write = 1'b1;
    end else begin
        xleft_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xright_out2_blk_n = xright_out2_full_n;
    end else begin
        xright_out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xright_out2_write = 1'b1;
    end else begin
        xright_out2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xright_out_blk_n = xright_out_full_n;
    end else begin
        xright_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        xright_out_write = 1'b1;
    end else begin
        xright_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ydown_out4_blk_n = ydown_out4_full_n;
    end else begin
        ydown_out4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ydown_out4_write = 1'b1;
    end else begin
        ydown_out4_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ydown_out_blk_n = ydown_out_full_n;
    end else begin
        ydown_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ydown_out_write = 1'b1;
    end else begin
        ydown_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ytop_out3_blk_n = ytop_out3_full_n;
    end else begin
        ytop_out3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ytop_out3_write = 1'b1;
    end else begin
        ytop_out3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ytop_out_blk_n = ytop_out_full_n;
    end else begin
        ytop_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ytop_out_write = 1'b1;
    end else begin
        ytop_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((standard_plate_cols_V_out_full_n == 1'b0) | (standard_plate_rows_V_out_full_n == 1'b0) | (plate_cols_V_out_full_n == 1'b0) | (plate_rows_V_out_full_n == 1'b0) | (rgb_img_cols_V_out_full_n == 1'b0) | (rgb_img_rows_V_out_full_n == 1'b0) | (ydown_out4_full_n == 1'b0) | (real_start == 1'b0) | (ydown_out_full_n == 1'b0) | (ytop_out3_full_n == 1'b0) | (ytop_out_full_n == 1'b0) | (xright_out2_full_n == 1'b0) | (xright_out_full_n == 1'b0) | (xleft_out1_full_n == 1'b0) | (xleft_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign plate_cols_V_out_din = (sub_ln23_fu_356_p2 + xright_s);

assign plate_rows_V_out_din = (sub_ln24_fu_369_p2 + ydown_s);

assign rgb_img_cols_V_out_din = 12'd1280;

assign rgb_img_rows_V_out_din = 11'd720;

assign standard_plate_cols_V_out_din = 9'd240;

assign standard_plate_rows_V_out_din = 7'd60;

assign start_out = real_start;

assign sub_ln23_fu_356_p2 = (32'd1 - xleft_s);

assign sub_ln24_fu_369_p2 = (32'd1 - ytop_s);

assign xleft_out1_din = xleft_s;

assign xleft_out_din = xleft_s;

assign xright_out2_din = xright_s;

assign xright_out_din = xright_s;

assign ydown_out4_din = ydown_s;

assign ydown_out_din = ydown_s;

assign ytop_out3_din = ytop_s;

assign ytop_out_din = ytop_s;

endmodule //Block_Mat_exit22_pro
