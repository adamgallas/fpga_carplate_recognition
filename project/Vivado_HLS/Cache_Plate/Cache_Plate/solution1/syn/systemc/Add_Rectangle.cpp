// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Add_Rectangle.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Add_Rectangle::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Add_Rectangle::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Add_Rectangle::ap_ST_fsm_state1 = "1";
const sc_lv<4> Add_Rectangle::ap_ST_fsm_state2 = "10";
const sc_lv<4> Add_Rectangle::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Add_Rectangle::ap_ST_fsm_state5 = "1000";
const bool Add_Rectangle::ap_const_boolean_1 = true;
const sc_lv<32> Add_Rectangle::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Add_Rectangle::ap_const_lv32_2 = "10";
const bool Add_Rectangle::ap_const_boolean_0 = false;
const sc_lv<1> Add_Rectangle::ap_const_lv1_0 = "0";
const sc_lv<32> Add_Rectangle::ap_const_lv32_1 = "1";
const sc_lv<1> Add_Rectangle::ap_const_lv1_1 = "1";
const sc_lv<10> Add_Rectangle::ap_const_lv10_0 = "0000000000";
const sc_lv<32> Add_Rectangle::ap_const_lv32_3 = "11";
const sc_lv<11> Add_Rectangle::ap_const_lv11_0 = "00000000000";
const sc_lv<32> Add_Rectangle::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<10> Add_Rectangle::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> Add_Rectangle::ap_const_lv10_1 = "1";
const sc_lv<11> Add_Rectangle::ap_const_lv11_500 = "10100000000";
const sc_lv<11> Add_Rectangle::ap_const_lv11_1 = "1";
const sc_lv<8> Add_Rectangle::ap_const_lv8_0 = "00000000";
const sc_lv<8> Add_Rectangle::ap_const_lv8_FF = "11111111";

Add_Rectangle::Add_Rectangle(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln94_1_fu_287_p2);
    sensitive << ( ytop_dout );

    SC_METHOD(thread_add_ln94_2_fu_293_p2);
    sensitive << ( ydown_dout );

    SC_METHOD(thread_add_ln94_3_fu_299_p2);
    sensitive << ( ydown_dout );

    SC_METHOD(thread_add_ln94_4_fu_305_p2);
    sensitive << ( xleft_dout );

    SC_METHOD(thread_add_ln94_5_fu_311_p2);
    sensitive << ( xleft_dout );

    SC_METHOD(thread_add_ln94_6_fu_317_p2);
    sensitive << ( xright_dout );

    SC_METHOD(thread_add_ln94_7_fu_323_p2);
    sensitive << ( xright_dout );

    SC_METHOD(thread_add_ln94_fu_281_p2);
    sensitive << ( ytop_dout );

    SC_METHOD(thread_and_ln94_1_fu_447_p2);
    sensitive << ( or_ln94_4_reg_658 );
    sensitive << ( icmp_ln94_9_fu_442_p2 );

    SC_METHOD(thread_and_ln94_2_fu_452_p2);
    sensitive << ( and_ln94_1_fu_447_p2 );
    sensitive << ( icmp_ln94_8_fu_437_p2 );

    SC_METHOD(thread_and_ln94_3_fu_518_p2);
    sensitive << ( and_ln94_reg_652 );
    sensitive << ( or_ln94_9_fu_512_p2 );

    SC_METHOD(thread_and_ln94_fu_385_p2);
    sensitive << ( icmp_ln94_6_fu_375_p2 );
    sensitive << ( icmp_ln94_7_fu_380_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln89_fu_425_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_dst_data_stream_0_V_blk_n);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( src_data_stream_0_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( or_ln94_11_reg_679 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( select_ln94_fu_534_p3 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_1_V_blk_n);
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( src_data_stream_1_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( or_ln94_11_reg_679 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( select_ln94_2_fu_549_p3 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_2_V_blk_n);
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( src_data_stream_2_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( or_ln94_11_reg_679 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( select_ln94_4_fu_564_p3 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_339_p2);
    sensitive << ( i_0_i_reg_259 );

    SC_METHOD(thread_icmp_ln86_fu_333_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_reg_259 );

    SC_METHOD(thread_icmp_ln89_fu_425_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_0_i_reg_270 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln94_10_fu_458_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln94_4_reg_623 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_11_fu_463_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xleft_read_reg_579 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_12_fu_468_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln94_5_reg_628 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_13_fu_485_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln94_6_reg_633 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_14_fu_490_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xright_read_reg_585 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_15_fu_495_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln94_7_reg_638 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_1_fu_350_p2);
    sensitive << ( ytop_read_reg_591 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_2_fu_355_p2);
    sensitive << ( add_ln94_1_reg_608 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_3_fu_360_p2);
    sensitive << ( add_ln94_2_reg_613 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_4_fu_365_p2);
    sensitive << ( ydown_read_reg_597 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_5_fu_370_p2);
    sensitive << ( add_ln94_3_reg_618 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_6_fu_375_p2);
    sensitive << ( ytop_read_reg_591 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_7_fu_380_p2);
    sensitive << ( ydown_read_reg_597 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_icmp_ln94_8_fu_437_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xleft_read_reg_579 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_9_fu_442_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( xright_read_reg_585 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln89_fu_421_p1 );

    SC_METHOD(thread_icmp_ln94_fu_345_p2);
    sensitive << ( add_ln94_reg_603 );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln86_fu_329_p1 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_fu_431_p2);
    sensitive << ( j_0_i_reg_270 );

    SC_METHOD(thread_or_ln94_10_fu_523_p2);
    sensitive << ( and_ln94_3_fu_518_p2 );
    sensitive << ( and_ln94_2_fu_452_p2 );

    SC_METHOD(thread_or_ln94_11_fu_529_p2);
    sensitive << ( and_ln94_reg_652 );
    sensitive << ( and_ln94_2_fu_452_p2 );

    SC_METHOD(thread_or_ln94_1_fu_397_p2);
    sensitive << ( or_ln94_fu_391_p2 );
    sensitive << ( icmp_ln94_fu_345_p2 );

    SC_METHOD(thread_or_ln94_2_fu_403_p2);
    sensitive << ( icmp_ln94_4_fu_365_p2 );
    sensitive << ( icmp_ln94_3_fu_360_p2 );

    SC_METHOD(thread_or_ln94_3_fu_409_p2);
    sensitive << ( or_ln94_2_fu_403_p2 );
    sensitive << ( icmp_ln94_5_fu_370_p2 );

    SC_METHOD(thread_or_ln94_4_fu_415_p2);
    sensitive << ( or_ln94_3_fu_409_p2 );
    sensitive << ( or_ln94_1_fu_397_p2 );

    SC_METHOD(thread_or_ln94_5_fu_473_p2);
    sensitive << ( icmp_ln94_11_fu_463_p2 );
    sensitive << ( icmp_ln94_12_fu_468_p2 );

    SC_METHOD(thread_or_ln94_6_fu_479_p2);
    sensitive << ( or_ln94_5_fu_473_p2 );
    sensitive << ( icmp_ln94_10_fu_458_p2 );

    SC_METHOD(thread_or_ln94_7_fu_500_p2);
    sensitive << ( icmp_ln94_14_fu_490_p2 );
    sensitive << ( icmp_ln94_15_fu_495_p2 );

    SC_METHOD(thread_or_ln94_8_fu_506_p2);
    sensitive << ( or_ln94_7_fu_500_p2 );
    sensitive << ( icmp_ln94_13_fu_485_p2 );

    SC_METHOD(thread_or_ln94_9_fu_512_p2);
    sensitive << ( or_ln94_6_fu_479_p2 );
    sensitive << ( or_ln94_8_fu_506_p2 );

    SC_METHOD(thread_or_ln94_fu_391_p2);
    sensitive << ( icmp_ln94_1_fu_350_p2 );
    sensitive << ( icmp_ln94_2_fu_355_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln94_2_fu_549_p3);
    sensitive << ( src_data_stream_1_V_dout );
    sensitive << ( or_ln94_10_reg_672 );

    SC_METHOD(thread_select_ln94_4_fu_564_p3);
    sensitive << ( src_data_stream_2_V_dout );
    sensitive << ( or_ln94_10_reg_672 );

    SC_METHOD(thread_select_ln94_fu_534_p3);
    sensitive << ( src_data_stream_0_V_dout );
    sensitive << ( or_ln94_10_reg_672 );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln89_reg_663 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln89_reg_663 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_xleft_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );

    SC_METHOD(thread_xleft_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_xright_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xright_empty_n );

    SC_METHOD(thread_xright_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_ydown_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_ydown_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_ytop_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ytop_empty_n );

    SC_METHOD(thread_ytop_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );

    SC_METHOD(thread_zext_ln86_fu_329_p1);
    sensitive << ( i_0_i_reg_259 );

    SC_METHOD(thread_zext_ln89_fu_421_p1);
    sensitive << ( j_0_i_reg_270 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_empty_n );
    sensitive << ( xright_empty_n );
    sensitive << ( ytop_empty_n );
    sensitive << ( ydown_empty_n );
    sensitive << ( icmp_ln86_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_425_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Add_Rectangle_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, xleft_dout, "(port)xleft_dout");
    sc_trace(mVcdFile, xleft_empty_n, "(port)xleft_empty_n");
    sc_trace(mVcdFile, xleft_read, "(port)xleft_read");
    sc_trace(mVcdFile, xright_dout, "(port)xright_dout");
    sc_trace(mVcdFile, xright_empty_n, "(port)xright_empty_n");
    sc_trace(mVcdFile, xright_read, "(port)xright_read");
    sc_trace(mVcdFile, ytop_dout, "(port)ytop_dout");
    sc_trace(mVcdFile, ytop_empty_n, "(port)ytop_empty_n");
    sc_trace(mVcdFile, ytop_read, "(port)ytop_read");
    sc_trace(mVcdFile, ydown_dout, "(port)ydown_dout");
    sc_trace(mVcdFile, ydown_empty_n, "(port)ydown_empty_n");
    sc_trace(mVcdFile, ydown_read, "(port)ydown_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln89_reg_663, "icmp_ln89_reg_663");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_blk_n, "dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_blk_n, "dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_blk_n, "dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, xleft_blk_n, "xleft_blk_n");
    sc_trace(mVcdFile, xright_blk_n, "xright_blk_n");
    sc_trace(mVcdFile, ytop_blk_n, "ytop_blk_n");
    sc_trace(mVcdFile, ydown_blk_n, "ydown_blk_n");
    sc_trace(mVcdFile, j_0_i_reg_270, "j_0_i_reg_270");
    sc_trace(mVcdFile, xleft_read_reg_579, "xleft_read_reg_579");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, xright_read_reg_585, "xright_read_reg_585");
    sc_trace(mVcdFile, ytop_read_reg_591, "ytop_read_reg_591");
    sc_trace(mVcdFile, ydown_read_reg_597, "ydown_read_reg_597");
    sc_trace(mVcdFile, add_ln94_fu_281_p2, "add_ln94_fu_281_p2");
    sc_trace(mVcdFile, add_ln94_reg_603, "add_ln94_reg_603");
    sc_trace(mVcdFile, add_ln94_1_fu_287_p2, "add_ln94_1_fu_287_p2");
    sc_trace(mVcdFile, add_ln94_1_reg_608, "add_ln94_1_reg_608");
    sc_trace(mVcdFile, add_ln94_2_fu_293_p2, "add_ln94_2_fu_293_p2");
    sc_trace(mVcdFile, add_ln94_2_reg_613, "add_ln94_2_reg_613");
    sc_trace(mVcdFile, add_ln94_3_fu_299_p2, "add_ln94_3_fu_299_p2");
    sc_trace(mVcdFile, add_ln94_3_reg_618, "add_ln94_3_reg_618");
    sc_trace(mVcdFile, add_ln94_4_fu_305_p2, "add_ln94_4_fu_305_p2");
    sc_trace(mVcdFile, add_ln94_4_reg_623, "add_ln94_4_reg_623");
    sc_trace(mVcdFile, add_ln94_5_fu_311_p2, "add_ln94_5_fu_311_p2");
    sc_trace(mVcdFile, add_ln94_5_reg_628, "add_ln94_5_reg_628");
    sc_trace(mVcdFile, add_ln94_6_fu_317_p2, "add_ln94_6_fu_317_p2");
    sc_trace(mVcdFile, add_ln94_6_reg_633, "add_ln94_6_reg_633");
    sc_trace(mVcdFile, add_ln94_7_fu_323_p2, "add_ln94_7_fu_323_p2");
    sc_trace(mVcdFile, add_ln94_7_reg_638, "add_ln94_7_reg_638");
    sc_trace(mVcdFile, icmp_ln86_fu_333_p2, "icmp_ln86_fu_333_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_339_p2, "i_fu_339_p2");
    sc_trace(mVcdFile, i_reg_647, "i_reg_647");
    sc_trace(mVcdFile, and_ln94_fu_385_p2, "and_ln94_fu_385_p2");
    sc_trace(mVcdFile, and_ln94_reg_652, "and_ln94_reg_652");
    sc_trace(mVcdFile, or_ln94_4_fu_415_p2, "or_ln94_4_fu_415_p2");
    sc_trace(mVcdFile, or_ln94_4_reg_658, "or_ln94_4_reg_658");
    sc_trace(mVcdFile, icmp_ln89_fu_425_p2, "icmp_ln89_fu_425_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_431_p2, "j_fu_431_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, or_ln94_10_fu_523_p2, "or_ln94_10_fu_523_p2");
    sc_trace(mVcdFile, or_ln94_10_reg_672, "or_ln94_10_reg_672");
    sc_trace(mVcdFile, or_ln94_11_fu_529_p2, "or_ln94_11_fu_529_p2");
    sc_trace(mVcdFile, or_ln94_11_reg_679, "or_ln94_11_reg_679");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, i_0_i_reg_259, "i_0_i_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, zext_ln86_fu_329_p1, "zext_ln86_fu_329_p1");
    sc_trace(mVcdFile, icmp_ln94_6_fu_375_p2, "icmp_ln94_6_fu_375_p2");
    sc_trace(mVcdFile, icmp_ln94_7_fu_380_p2, "icmp_ln94_7_fu_380_p2");
    sc_trace(mVcdFile, icmp_ln94_1_fu_350_p2, "icmp_ln94_1_fu_350_p2");
    sc_trace(mVcdFile, icmp_ln94_2_fu_355_p2, "icmp_ln94_2_fu_355_p2");
    sc_trace(mVcdFile, or_ln94_fu_391_p2, "or_ln94_fu_391_p2");
    sc_trace(mVcdFile, icmp_ln94_fu_345_p2, "icmp_ln94_fu_345_p2");
    sc_trace(mVcdFile, icmp_ln94_4_fu_365_p2, "icmp_ln94_4_fu_365_p2");
    sc_trace(mVcdFile, icmp_ln94_3_fu_360_p2, "icmp_ln94_3_fu_360_p2");
    sc_trace(mVcdFile, or_ln94_2_fu_403_p2, "or_ln94_2_fu_403_p2");
    sc_trace(mVcdFile, icmp_ln94_5_fu_370_p2, "icmp_ln94_5_fu_370_p2");
    sc_trace(mVcdFile, or_ln94_3_fu_409_p2, "or_ln94_3_fu_409_p2");
    sc_trace(mVcdFile, or_ln94_1_fu_397_p2, "or_ln94_1_fu_397_p2");
    sc_trace(mVcdFile, zext_ln89_fu_421_p1, "zext_ln89_fu_421_p1");
    sc_trace(mVcdFile, icmp_ln94_9_fu_442_p2, "icmp_ln94_9_fu_442_p2");
    sc_trace(mVcdFile, and_ln94_1_fu_447_p2, "and_ln94_1_fu_447_p2");
    sc_trace(mVcdFile, icmp_ln94_8_fu_437_p2, "icmp_ln94_8_fu_437_p2");
    sc_trace(mVcdFile, icmp_ln94_11_fu_463_p2, "icmp_ln94_11_fu_463_p2");
    sc_trace(mVcdFile, icmp_ln94_12_fu_468_p2, "icmp_ln94_12_fu_468_p2");
    sc_trace(mVcdFile, or_ln94_5_fu_473_p2, "or_ln94_5_fu_473_p2");
    sc_trace(mVcdFile, icmp_ln94_10_fu_458_p2, "icmp_ln94_10_fu_458_p2");
    sc_trace(mVcdFile, icmp_ln94_14_fu_490_p2, "icmp_ln94_14_fu_490_p2");
    sc_trace(mVcdFile, icmp_ln94_15_fu_495_p2, "icmp_ln94_15_fu_495_p2");
    sc_trace(mVcdFile, or_ln94_7_fu_500_p2, "or_ln94_7_fu_500_p2");
    sc_trace(mVcdFile, icmp_ln94_13_fu_485_p2, "icmp_ln94_13_fu_485_p2");
    sc_trace(mVcdFile, or_ln94_6_fu_479_p2, "or_ln94_6_fu_479_p2");
    sc_trace(mVcdFile, or_ln94_8_fu_506_p2, "or_ln94_8_fu_506_p2");
    sc_trace(mVcdFile, or_ln94_9_fu_512_p2, "or_ln94_9_fu_512_p2");
    sc_trace(mVcdFile, and_ln94_3_fu_518_p2, "and_ln94_3_fu_518_p2");
    sc_trace(mVcdFile, and_ln94_2_fu_452_p2, "and_ln94_2_fu_452_p2");
    sc_trace(mVcdFile, select_ln94_fu_534_p3, "select_ln94_fu_534_p3");
    sc_trace(mVcdFile, select_ln94_2_fu_549_p3, "select_ln94_2_fu_549_p3");
    sc_trace(mVcdFile, select_ln94_4_fu_564_p3, "select_ln94_4_fu_564_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Add_Rectangle::~Add_Rectangle() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Add_Rectangle::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln86_fu_333_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln86_fu_333_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln86_fu_333_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i_reg_259 = i_reg_647.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        i_0_i_reg_259 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln89_fu_425_p2.read()))) {
        j_0_i_reg_270 = j_fu_431_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln86_fu_333_p2.read()))) {
        j_0_i_reg_270 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        add_ln94_1_reg_608 = add_ln94_1_fu_287_p2.read();
        add_ln94_2_reg_613 = add_ln94_2_fu_293_p2.read();
        add_ln94_3_reg_618 = add_ln94_3_fu_299_p2.read();
        add_ln94_4_reg_623 = add_ln94_4_fu_305_p2.read();
        add_ln94_5_reg_628 = add_ln94_5_fu_311_p2.read();
        add_ln94_6_reg_633 = add_ln94_6_fu_317_p2.read();
        add_ln94_7_reg_638 = add_ln94_7_fu_323_p2.read();
        add_ln94_reg_603 = add_ln94_fu_281_p2.read();
        xleft_read_reg_579 = xleft_dout.read();
        xright_read_reg_585 = xright_dout.read();
        ydown_read_reg_597 = ydown_dout.read();
        ytop_read_reg_591 = ytop_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln86_fu_333_p2.read()))) {
        and_ln94_reg_652 = and_ln94_fu_385_p2.read();
        or_ln94_4_reg_658 = or_ln94_4_fu_415_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_647 = i_fu_339_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln89_reg_663 = icmp_ln89_fu_425_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln89_fu_425_p2.read()))) {
        or_ln94_10_reg_672 = or_ln94_10_fu_523_p2.read();
        or_ln94_11_reg_679 = or_ln94_11_fu_529_p2.read();
    }
}

void Add_Rectangle::thread_add_ln94_1_fu_287_p2() {
    add_ln94_1_fu_287_p2 = (!ytop_dout.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ytop_dout.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Add_Rectangle::thread_add_ln94_2_fu_293_p2() {
    add_ln94_2_fu_293_p2 = (!ydown_dout.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(ydown_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void Add_Rectangle::thread_add_ln94_3_fu_299_p2() {
    add_ln94_3_fu_299_p2 = (!ydown_dout.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ydown_dout.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Add_Rectangle::thread_add_ln94_4_fu_305_p2() {
    add_ln94_4_fu_305_p2 = (!xleft_dout.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(xleft_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void Add_Rectangle::thread_add_ln94_5_fu_311_p2() {
    add_ln94_5_fu_311_p2 = (!xleft_dout.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(xleft_dout.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Add_Rectangle::thread_add_ln94_6_fu_317_p2() {
    add_ln94_6_fu_317_p2 = (!xright_dout.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(xright_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void Add_Rectangle::thread_add_ln94_7_fu_323_p2() {
    add_ln94_7_fu_323_p2 = (!xright_dout.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(xright_dout.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Add_Rectangle::thread_add_ln94_fu_281_p2() {
    add_ln94_fu_281_p2 = (!ytop_dout.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(ytop_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void Add_Rectangle::thread_and_ln94_1_fu_447_p2() {
    and_ln94_1_fu_447_p2 = (icmp_ln94_9_fu_442_p2.read() & or_ln94_4_reg_658.read());
}

void Add_Rectangle::thread_and_ln94_2_fu_452_p2() {
    and_ln94_2_fu_452_p2 = (and_ln94_1_fu_447_p2.read() & icmp_ln94_8_fu_437_p2.read());
}

void Add_Rectangle::thread_and_ln94_3_fu_518_p2() {
    and_ln94_3_fu_518_p2 = (and_ln94_reg_652.read() & or_ln94_9_fu_512_p2.read());
}

void Add_Rectangle::thread_and_ln94_fu_385_p2() {
    and_ln94_fu_385_p2 = (icmp_ln94_6_fu_375_p2.read() & icmp_ln94_7_fu_380_p2.read());
}

void Add_Rectangle::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Add_Rectangle::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Add_Rectangle::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Add_Rectangle::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Add_Rectangle::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Add_Rectangle::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()))));
}

void Add_Rectangle::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()))));
}

void Add_Rectangle::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()))));
}

void Add_Rectangle::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read()));
}

void Add_Rectangle::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Add_Rectangle::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())));
}

void Add_Rectangle::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln89_fu_425_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln86_fu_333_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Add_Rectangle::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Add_Rectangle::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Add_Rectangle::thread_dst_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n.read();
    } else {
        dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = (!or_ln94_11_reg_679.read()[0].is_01())? sc_lv<8>(): ((or_ln94_11_reg_679.read()[0].to_bool())? select_ln94_fu_534_p3.read(): src_data_stream_0_V_dout.read());
}

void Add_Rectangle::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_dst_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n.read();
    } else {
        dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = (!or_ln94_11_reg_679.read()[0].is_01())? sc_lv<8>(): ((or_ln94_11_reg_679.read()[0].to_bool())? select_ln94_2_fu_549_p3.read(): src_data_stream_1_V_dout.read());
}

void Add_Rectangle::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_dst_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n.read();
    } else {
        dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = (!or_ln94_11_reg_679.read()[0].is_01())? sc_lv<8>(): ((or_ln94_11_reg_679.read()[0].to_bool())? select_ln94_4_fu_564_p3.read(): src_data_stream_2_V_dout.read());
}

void Add_Rectangle::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_i_fu_339_p2() {
    i_fu_339_p2 = (!i_0_i_reg_259.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_reg_259.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Add_Rectangle::thread_icmp_ln86_fu_333_p2() {
    icmp_ln86_fu_333_p2 = (!i_0_i_reg_259.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_259.read() == ap_const_lv10_2D0);
}

void Add_Rectangle::thread_icmp_ln89_fu_425_p2() {
    icmp_ln89_fu_425_p2 = (!j_0_i_reg_270.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_270.read() == ap_const_lv11_500);
}

void Add_Rectangle::thread_icmp_ln94_10_fu_458_p2() {
    icmp_ln94_10_fu_458_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !add_ln94_4_reg_623.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == add_ln94_4_reg_623.read());
}

void Add_Rectangle::thread_icmp_ln94_11_fu_463_p2() {
    icmp_ln94_11_fu_463_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !xleft_read_reg_579.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == xleft_read_reg_579.read());
}

void Add_Rectangle::thread_icmp_ln94_12_fu_468_p2() {
    icmp_ln94_12_fu_468_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !add_ln94_5_reg_628.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == add_ln94_5_reg_628.read());
}

void Add_Rectangle::thread_icmp_ln94_13_fu_485_p2() {
    icmp_ln94_13_fu_485_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !add_ln94_6_reg_633.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == add_ln94_6_reg_633.read());
}

void Add_Rectangle::thread_icmp_ln94_14_fu_490_p2() {
    icmp_ln94_14_fu_490_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !xright_read_reg_585.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == xright_read_reg_585.read());
}

void Add_Rectangle::thread_icmp_ln94_15_fu_495_p2() {
    icmp_ln94_15_fu_495_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !add_ln94_7_reg_638.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln89_fu_421_p1.read() == add_ln94_7_reg_638.read());
}

void Add_Rectangle::thread_icmp_ln94_1_fu_350_p2() {
    icmp_ln94_1_fu_350_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !ytop_read_reg_591.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == ytop_read_reg_591.read());
}

void Add_Rectangle::thread_icmp_ln94_2_fu_355_p2() {
    icmp_ln94_2_fu_355_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !add_ln94_1_reg_608.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == add_ln94_1_reg_608.read());
}

void Add_Rectangle::thread_icmp_ln94_3_fu_360_p2() {
    icmp_ln94_3_fu_360_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !add_ln94_2_reg_613.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == add_ln94_2_reg_613.read());
}

void Add_Rectangle::thread_icmp_ln94_4_fu_365_p2() {
    icmp_ln94_4_fu_365_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !ydown_read_reg_597.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == ydown_read_reg_597.read());
}

void Add_Rectangle::thread_icmp_ln94_5_fu_370_p2() {
    icmp_ln94_5_fu_370_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !add_ln94_3_reg_618.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == add_ln94_3_reg_618.read());
}

void Add_Rectangle::thread_icmp_ln94_6_fu_375_p2() {
    icmp_ln94_6_fu_375_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !ytop_read_reg_591.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln86_fu_329_p1.read()) > sc_bigint<32>(ytop_read_reg_591.read()));
}

void Add_Rectangle::thread_icmp_ln94_7_fu_380_p2() {
    icmp_ln94_7_fu_380_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !ydown_read_reg_597.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln86_fu_329_p1.read()) < sc_bigint<32>(ydown_read_reg_597.read()));
}

void Add_Rectangle::thread_icmp_ln94_8_fu_437_p2() {
    icmp_ln94_8_fu_437_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !xleft_read_reg_579.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln89_fu_421_p1.read()) > sc_bigint<32>(xleft_read_reg_579.read()));
}

void Add_Rectangle::thread_icmp_ln94_9_fu_442_p2() {
    icmp_ln94_9_fu_442_p2 = (!zext_ln89_fu_421_p1.read().is_01() || !xright_read_reg_585.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln89_fu_421_p1.read()) < sc_bigint<32>(xright_read_reg_585.read()));
}

void Add_Rectangle::thread_icmp_ln94_fu_345_p2() {
    icmp_ln94_fu_345_p2 = (!zext_ln86_fu_329_p1.read().is_01() || !add_ln94_reg_603.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln86_fu_329_p1.read() == add_ln94_reg_603.read());
}

void Add_Rectangle::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln86_fu_333_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_j_fu_431_p2() {
    j_fu_431_p2 = (!j_0_i_reg_270.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_0_i_reg_270.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Add_Rectangle::thread_or_ln94_10_fu_523_p2() {
    or_ln94_10_fu_523_p2 = (and_ln94_3_fu_518_p2.read() | and_ln94_2_fu_452_p2.read());
}

void Add_Rectangle::thread_or_ln94_11_fu_529_p2() {
    or_ln94_11_fu_529_p2 = (and_ln94_2_fu_452_p2.read() | and_ln94_reg_652.read());
}

void Add_Rectangle::thread_or_ln94_1_fu_397_p2() {
    or_ln94_1_fu_397_p2 = (or_ln94_fu_391_p2.read() | icmp_ln94_fu_345_p2.read());
}

void Add_Rectangle::thread_or_ln94_2_fu_403_p2() {
    or_ln94_2_fu_403_p2 = (icmp_ln94_4_fu_365_p2.read() | icmp_ln94_3_fu_360_p2.read());
}

void Add_Rectangle::thread_or_ln94_3_fu_409_p2() {
    or_ln94_3_fu_409_p2 = (or_ln94_2_fu_403_p2.read() | icmp_ln94_5_fu_370_p2.read());
}

void Add_Rectangle::thread_or_ln94_4_fu_415_p2() {
    or_ln94_4_fu_415_p2 = (or_ln94_3_fu_409_p2.read() | or_ln94_1_fu_397_p2.read());
}

void Add_Rectangle::thread_or_ln94_5_fu_473_p2() {
    or_ln94_5_fu_473_p2 = (icmp_ln94_11_fu_463_p2.read() | icmp_ln94_12_fu_468_p2.read());
}

void Add_Rectangle::thread_or_ln94_6_fu_479_p2() {
    or_ln94_6_fu_479_p2 = (or_ln94_5_fu_473_p2.read() | icmp_ln94_10_fu_458_p2.read());
}

void Add_Rectangle::thread_or_ln94_7_fu_500_p2() {
    or_ln94_7_fu_500_p2 = (icmp_ln94_14_fu_490_p2.read() | icmp_ln94_15_fu_495_p2.read());
}

void Add_Rectangle::thread_or_ln94_8_fu_506_p2() {
    or_ln94_8_fu_506_p2 = (or_ln94_7_fu_500_p2.read() | icmp_ln94_13_fu_485_p2.read());
}

void Add_Rectangle::thread_or_ln94_9_fu_512_p2() {
    or_ln94_9_fu_512_p2 = (or_ln94_6_fu_479_p2.read() | or_ln94_8_fu_506_p2.read());
}

void Add_Rectangle::thread_or_ln94_fu_391_p2() {
    or_ln94_fu_391_p2 = (icmp_ln94_1_fu_350_p2.read() | icmp_ln94_2_fu_355_p2.read());
}

void Add_Rectangle::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Add_Rectangle::thread_select_ln94_2_fu_549_p3() {
    select_ln94_2_fu_549_p3 = (!or_ln94_10_reg_672.read()[0].is_01())? sc_lv<8>(): ((or_ln94_10_reg_672.read()[0].to_bool())? ap_const_lv8_FF: src_data_stream_1_V_dout.read());
}

void Add_Rectangle::thread_select_ln94_4_fu_564_p3() {
    select_ln94_4_fu_564_p3 = (!or_ln94_10_reg_672.read()[0].is_01())? sc_lv<8>(): ((or_ln94_10_reg_672.read()[0].to_bool())? ap_const_lv8_0: src_data_stream_2_V_dout.read());
}

void Add_Rectangle::thread_select_ln94_fu_534_p3() {
    select_ln94_fu_534_p3 = (!or_ln94_10_reg_672.read()[0].is_01())? sc_lv<8>(): ((or_ln94_10_reg_672.read()[0].to_bool())? ap_const_lv8_0: src_data_stream_0_V_dout.read());
}

void Add_Rectangle::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_reg_663.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_start_out() {
    start_out = real_start.read();
}

void Add_Rectangle::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_xleft_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        xleft_blk_n = xleft_empty_n.read();
    } else {
        xleft_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_xleft_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        xleft_read = ap_const_logic_1;
    } else {
        xleft_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_xright_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        xright_blk_n = xright_empty_n.read();
    } else {
        xright_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_xright_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        xright_read = ap_const_logic_1;
    } else {
        xright_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_ydown_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ydown_blk_n = ydown_empty_n.read();
    } else {
        ydown_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_ydown_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        ydown_read = ap_const_logic_1;
    } else {
        ydown_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_ytop_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ytop_blk_n = ytop_empty_n.read();
    } else {
        ytop_blk_n = ap_const_logic_1;
    }
}

void Add_Rectangle::thread_ytop_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
        ytop_read = ap_const_logic_1;
    } else {
        ytop_read = ap_const_logic_0;
    }
}

void Add_Rectangle::thread_zext_ln86_fu_329_p1() {
    zext_ln86_fu_329_p1 = esl_zext<32,10>(i_0_i_reg_259.read());
}

void Add_Rectangle::thread_zext_ln89_fu_421_p1() {
    zext_ln89_fu_421_p1 = esl_zext<32,11>(j_0_i_reg_270.read());
}

void Add_Rectangle::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln86_fu_333_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln89_fu_425_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln89_fu_425_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

