// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state8 = "1000000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state9 = "10000000";
const bool AXIvideo2Mat::ap_const_boolean_1 = true;
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_4 = "100";
const bool AXIvideo2Mat::ap_const_boolean_0 = false;
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_0 = "0";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_3 = "11";
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_2 = "10";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_5 = "101";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_8 = "1000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_F = "1111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_10 = "10000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_17 = "10111";

AXIvideo2Mat::AXIvideo2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_AXI_video_strm_V_data_V_U = new regslice_both<32>("regslice_both_AXI_video_strm_V_data_V_U");
    regslice_both_AXI_video_strm_V_data_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_data_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_data_V_U->data_in(video_src_TDATA);
    regslice_both_AXI_video_strm_V_data_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_data_V_U->ack_in(regslice_both_AXI_video_strm_V_data_V_U_ack_in);
    regslice_both_AXI_video_strm_V_data_V_U->data_out(video_src_TDATA_int);
    regslice_both_AXI_video_strm_V_data_V_U->vld_out(video_src_TVALID_int);
    regslice_both_AXI_video_strm_V_data_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_data_V_U->apdone_blk(regslice_both_AXI_video_strm_V_data_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_keep_V_U = new regslice_both<4>("regslice_both_AXI_video_strm_V_keep_V_U");
    regslice_both_AXI_video_strm_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_keep_V_U->data_in(video_src_TKEEP);
    regslice_both_AXI_video_strm_V_keep_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_keep_V_U->ack_in(regslice_both_AXI_video_strm_V_keep_V_U_ack_in);
    regslice_both_AXI_video_strm_V_keep_V_U->data_out(video_src_TKEEP_int);
    regslice_both_AXI_video_strm_V_keep_V_U->vld_out(regslice_both_AXI_video_strm_V_keep_V_U_vld_out);
    regslice_both_AXI_video_strm_V_keep_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_keep_V_U->apdone_blk(regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_strb_V_U = new regslice_both<4>("regslice_both_AXI_video_strm_V_strb_V_U");
    regslice_both_AXI_video_strm_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_strb_V_U->data_in(video_src_TSTRB);
    regslice_both_AXI_video_strm_V_strb_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_strb_V_U->ack_in(regslice_both_AXI_video_strm_V_strb_V_U_ack_in);
    regslice_both_AXI_video_strm_V_strb_V_U->data_out(video_src_TSTRB_int);
    regslice_both_AXI_video_strm_V_strb_V_U->vld_out(regslice_both_AXI_video_strm_V_strb_V_U_vld_out);
    regslice_both_AXI_video_strm_V_strb_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_strb_V_U->apdone_blk(regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_user_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_user_V_U");
    regslice_both_AXI_video_strm_V_user_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_user_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_user_V_U->data_in(video_src_TUSER);
    regslice_both_AXI_video_strm_V_user_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_user_V_U->ack_in(regslice_both_AXI_video_strm_V_user_V_U_ack_in);
    regslice_both_AXI_video_strm_V_user_V_U->data_out(video_src_TUSER_int);
    regslice_both_AXI_video_strm_V_user_V_U->vld_out(regslice_both_AXI_video_strm_V_user_V_U_vld_out);
    regslice_both_AXI_video_strm_V_user_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_user_V_U->apdone_blk(regslice_both_AXI_video_strm_V_user_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_last_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_last_V_U");
    regslice_both_AXI_video_strm_V_last_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_last_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_last_V_U->data_in(video_src_TLAST);
    regslice_both_AXI_video_strm_V_last_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_last_V_U->ack_in(regslice_both_AXI_video_strm_V_last_V_U_ack_in);
    regslice_both_AXI_video_strm_V_last_V_U->data_out(video_src_TLAST_int);
    regslice_both_AXI_video_strm_V_last_V_U->vld_out(regslice_both_AXI_video_strm_V_last_V_U_vld_out);
    regslice_both_AXI_video_strm_V_last_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_last_V_U->apdone_blk(regslice_both_AXI_video_strm_V_last_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_id_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_id_V_U");
    regslice_both_AXI_video_strm_V_id_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_id_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_id_V_U->data_in(video_src_TID);
    regslice_both_AXI_video_strm_V_id_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_id_V_U->ack_in(regslice_both_AXI_video_strm_V_id_V_U_ack_in);
    regslice_both_AXI_video_strm_V_id_V_U->data_out(video_src_TID_int);
    regslice_both_AXI_video_strm_V_id_V_U->vld_out(regslice_both_AXI_video_strm_V_id_V_U_vld_out);
    regslice_both_AXI_video_strm_V_id_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_id_V_U->apdone_blk(regslice_both_AXI_video_strm_V_id_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_dest_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_dest_V_U");
    regslice_both_AXI_video_strm_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_dest_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_dest_V_U->data_in(video_src_TDEST);
    regslice_both_AXI_video_strm_V_dest_V_U->vld_in(video_src_TVALID);
    regslice_both_AXI_video_strm_V_dest_V_U->ack_in(regslice_both_AXI_video_strm_V_dest_V_U_ack_in);
    regslice_both_AXI_video_strm_V_dest_V_U->data_out(video_src_TDEST_int);
    regslice_both_AXI_video_strm_V_dest_V_U->vld_out(regslice_both_AXI_video_strm_V_dest_V_U_vld_out);
    regslice_both_AXI_video_strm_V_dest_V_U->ack_out(video_src_TREADY_int);
    regslice_both_AXI_video_strm_V_dest_V_U->apdone_blk(regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_predicate_op67_read_state5 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_predicate_op67_read_state5 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_predicate_op67_read_state5 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);
    sensitive << ( ap_predicate_op67_read_state5 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( icmp_ln73_reg_508 );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( eol_2_i_reg_372 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_condition_200);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( icmp_ln73_fu_420_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln71_fu_409_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( axi_data_V_1_i_reg_289 );
    sensitive << ( p_Val2_s_reg_336 );

    SC_METHOD(thread_ap_phi_mux_eol_0_i_phi_fu_315_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( eol_0_i_reg_311 );
    sensitive << ( axi_last_V_2_i_reg_323 );

    SC_METHOD(thread_ap_phi_mux_eol_2_i_phi_fu_375_p4);
    sensitive << ( eol_2_i_reg_372 );

    SC_METHOD(thread_ap_phi_mux_eol_phi_fu_281_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( eol_reg_278 );
    sensitive << ( axi_last_V_2_i_reg_323 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_340_p4);
    sensitive << ( icmp_ln73_fu_420_p2 );
    sensitive << ( or_ln76_fu_434_p2 );
    sensitive << ( ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4 );
    sensitive << ( ap_phi_reg_pp1_iter0_p_Val2_s_reg_336 );
    sensitive << ( video_src_TDATA_int );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_336);

    SC_METHOD(thread_ap_predicate_op67_read_state5);
    sensitive << ( icmp_ln73_fu_420_p2 );
    sensitive << ( or_ln76_fu_434_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_cols_V_fu_396_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_cols_V_dout );

    SC_METHOD(thread_cols_V_fu_396_p1);
    sensitive << ( cols_V_fu_396_p0 );

    SC_METHOD(thread_i_V_fu_414_p2);
    sensitive << ( t_V_reg_267 );

    SC_METHOD(thread_icmp_ln71_fu_409_p2);
    sensitive << ( rows_V_reg_469 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_267 );

    SC_METHOD(thread_icmp_ln73_fu_420_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( t_V_8_reg_300 );
    sensitive << ( cols_V_reg_474 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_cols_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_cols_V_empty_n );

    SC_METHOD(thread_img_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_dout );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_cols_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_data_stream_0_V_blk_n);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );

    SC_METHOD(thread_img_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( tmp_reg_521 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_1_V_blk_n);
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );

    SC_METHOD(thread_img_data_stream_1_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( tmp_1_reg_526 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_2_V_blk_n);
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );

    SC_METHOD(thread_img_data_stream_2_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( tmp_2_reg_531 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_2_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln73_reg_508 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_rows_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );

    SC_METHOD(thread_img_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_out_full_n );

    SC_METHOD(thread_img_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_dout );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_img_rows_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( icmp_ln71_fu_409_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_V_fu_425_p2);
    sensitive << ( t_V_8_reg_300 );

    SC_METHOD(thread_or_ln76_fu_434_p2);
    sensitive << ( ap_phi_mux_eol_0_i_phi_fu_315_p4 );
    sensitive << ( sof_1_i_fu_176 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rows_V_fu_392_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_dout );

    SC_METHOD(thread_rows_V_fu_392_p1);
    sensitive << ( rows_V_fu_392_p0 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_fu_440_p1);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_340_p4 );

    SC_METHOD(thread_tmp_user_V_fu_400_p1);
    sensitive << ( video_src_TUSER_int );

    SC_METHOD(thread_video_src_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln73_fu_420_p2 );
    sensitive << ( or_ln76_fu_434_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( eol_2_i_reg_372 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_video_src_TREADY);
    sensitive << ( video_src_TVALID );
    sensitive << ( regslice_both_AXI_video_strm_V_data_V_U_ack_in );

    SC_METHOD(thread_video_src_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op67_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_i_reg_372 );
    sensitive << ( video_src_TVALID_int );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_V_empty_n );
    sensitive << ( img_cols_V_empty_n );
    sensitive << ( img_rows_V_out_full_n );
    sensitive << ( img_cols_V_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln73_fu_420_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_phi_mux_eol_2_i_phi_fu_375_p4 );
    sensitive << ( icmp_ln71_fu_409_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( eol_2_i_reg_372 );
    sensitive << ( tmp_user_V_fu_400_p1 );
    sensitive << ( video_src_TVALID_int );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, video_src_TDATA, "(port)video_src_TDATA");
    sc_trace(mVcdFile, video_src_TVALID, "(port)video_src_TVALID");
    sc_trace(mVcdFile, video_src_TREADY, "(port)video_src_TREADY");
    sc_trace(mVcdFile, video_src_TKEEP, "(port)video_src_TKEEP");
    sc_trace(mVcdFile, video_src_TSTRB, "(port)video_src_TSTRB");
    sc_trace(mVcdFile, video_src_TUSER, "(port)video_src_TUSER");
    sc_trace(mVcdFile, video_src_TLAST, "(port)video_src_TLAST");
    sc_trace(mVcdFile, video_src_TID, "(port)video_src_TID");
    sc_trace(mVcdFile, video_src_TDEST, "(port)video_src_TDEST");
    sc_trace(mVcdFile, img_rows_V_dout, "(port)img_rows_V_dout");
    sc_trace(mVcdFile, img_rows_V_empty_n, "(port)img_rows_V_empty_n");
    sc_trace(mVcdFile, img_rows_V_read, "(port)img_rows_V_read");
    sc_trace(mVcdFile, img_cols_V_dout, "(port)img_cols_V_dout");
    sc_trace(mVcdFile, img_cols_V_empty_n, "(port)img_cols_V_empty_n");
    sc_trace(mVcdFile, img_cols_V_read, "(port)img_cols_V_read");
    sc_trace(mVcdFile, img_data_stream_0_V_din, "(port)img_data_stream_0_V_din");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "(port)img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_write, "(port)img_data_stream_0_V_write");
    sc_trace(mVcdFile, img_data_stream_1_V_din, "(port)img_data_stream_1_V_din");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "(port)img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_write, "(port)img_data_stream_1_V_write");
    sc_trace(mVcdFile, img_data_stream_2_V_din, "(port)img_data_stream_2_V_din");
    sc_trace(mVcdFile, img_data_stream_2_V_full_n, "(port)img_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_data_stream_2_V_write, "(port)img_data_stream_2_V_write");
    sc_trace(mVcdFile, img_rows_V_out_din, "(port)img_rows_V_out_din");
    sc_trace(mVcdFile, img_rows_V_out_full_n, "(port)img_rows_V_out_full_n");
    sc_trace(mVcdFile, img_rows_V_out_write, "(port)img_rows_V_out_write");
    sc_trace(mVcdFile, img_cols_V_out_din, "(port)img_cols_V_out_din");
    sc_trace(mVcdFile, img_cols_V_out_full_n, "(port)img_cols_V_out_full_n");
    sc_trace(mVcdFile, img_cols_V_out_write, "(port)img_cols_V_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, video_src_TDATA_blk_n, "video_src_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln73_fu_420_p2, "icmp_ln73_fu_420_p2");
    sc_trace(mVcdFile, or_ln76_fu_434_p2, "or_ln76_fu_434_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_i_phi_fu_375_p4, "ap_phi_mux_eol_2_i_phi_fu_375_p4");
    sc_trace(mVcdFile, img_rows_V_blk_n, "img_rows_V_blk_n");
    sc_trace(mVcdFile, img_cols_V_blk_n, "img_cols_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_0_V_blk_n, "img_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, icmp_ln73_reg_508, "icmp_ln73_reg_508");
    sc_trace(mVcdFile, img_data_stream_1_V_blk_n, "img_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_2_V_blk_n, "img_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, img_rows_V_out_blk_n, "img_rows_V_out_blk_n");
    sc_trace(mVcdFile, img_cols_V_out_blk_n, "img_cols_V_out_blk_n");
    sc_trace(mVcdFile, eol_reg_278, "eol_reg_278");
    sc_trace(mVcdFile, axi_data_V_1_i_reg_289, "axi_data_V_1_i_reg_289");
    sc_trace(mVcdFile, t_V_8_reg_300, "t_V_8_reg_300");
    sc_trace(mVcdFile, eol_0_i_reg_311, "eol_0_i_reg_311");
    sc_trace(mVcdFile, axi_last_V_2_i_reg_323, "axi_last_V_2_i_reg_323");
    sc_trace(mVcdFile, p_Val2_s_reg_336, "p_Val2_s_reg_336");
    sc_trace(mVcdFile, rows_V_fu_392_p1, "rows_V_fu_392_p1");
    sc_trace(mVcdFile, rows_V_reg_469, "rows_V_reg_469");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_V_fu_396_p1, "cols_V_fu_396_p1");
    sc_trace(mVcdFile, cols_V_reg_474, "cols_V_reg_474");
    sc_trace(mVcdFile, tmp_data_V_reg_479, "tmp_data_V_reg_479");
    sc_trace(mVcdFile, tmp_last_V_reg_487, "tmp_last_V_reg_487");
    sc_trace(mVcdFile, icmp_ln71_fu_409_p2, "icmp_ln71_fu_409_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_414_p2, "i_V_fu_414_p2");
    sc_trace(mVcdFile, i_V_reg_503, "i_V_reg_503");
    sc_trace(mVcdFile, ap_predicate_op67_read_state5, "ap_predicate_op67_read_state5");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_425_p2, "j_V_fu_425_p2");
    sc_trace(mVcdFile, tmp_fu_440_p1, "tmp_fu_440_p1");
    sc_trace(mVcdFile, tmp_reg_521, "tmp_reg_521");
    sc_trace(mVcdFile, tmp_1_reg_526, "tmp_1_reg_526");
    sc_trace(mVcdFile, tmp_2_reg_531, "tmp_2_reg_531");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, axi_last_V_3_i_reg_348, "axi_last_V_3_i_reg_348");
    sc_trace(mVcdFile, axi_last_V_0_i_reg_247, "axi_last_V_0_i_reg_247");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V_3_i_reg_360, "axi_data_V_3_i_reg_360");
    sc_trace(mVcdFile, axi_data_V_0_i_reg_257, "axi_data_V_0_i_reg_257");
    sc_trace(mVcdFile, t_V_reg_267, "t_V_reg_267");
    sc_trace(mVcdFile, ap_phi_mux_eol_phi_fu_281_p4, "ap_phi_mux_eol_phi_fu_281_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4, "ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4");
    sc_trace(mVcdFile, ap_phi_mux_eol_0_i_phi_fu_315_p4, "ap_phi_mux_eol_0_i_phi_fu_315_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323, "ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_340_p4, "ap_phi_mux_p_Val2_s_phi_fu_340_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_p_Val2_s_reg_336, "ap_phi_reg_pp1_iter0_p_Val2_s_reg_336");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, eol_2_i_reg_372, "eol_2_i_reg_372");
    sc_trace(mVcdFile, sof_1_i_fu_176, "sof_1_i_fu_176");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, rows_V_fu_392_p0, "rows_V_fu_392_p0");
    sc_trace(mVcdFile, cols_V_fu_396_p0, "cols_V_fu_396_p0");
    sc_trace(mVcdFile, tmp_user_V_fu_400_p1, "tmp_user_V_fu_400_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_data_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TDATA_int, "video_src_TDATA_int");
    sc_trace(mVcdFile, video_src_TVALID_int, "video_src_TVALID_int");
    sc_trace(mVcdFile, video_src_TREADY_int, "video_src_TREADY_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_data_V_U_ack_in, "regslice_both_AXI_video_strm_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TKEEP_int, "video_src_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_vld_out, "regslice_both_AXI_video_strm_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_ack_in, "regslice_both_AXI_video_strm_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TSTRB_int, "video_src_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_vld_out, "regslice_both_AXI_video_strm_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_ack_in, "regslice_both_AXI_video_strm_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TUSER_int, "video_src_TUSER_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_vld_out, "regslice_both_AXI_video_strm_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_ack_in, "regslice_both_AXI_video_strm_V_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TLAST_int, "video_src_TLAST_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_vld_out, "regslice_both_AXI_video_strm_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_ack_in, "regslice_both_AXI_video_strm_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TID_int, "video_src_TID_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_vld_out, "regslice_both_AXI_video_strm_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_ack_in, "regslice_both_AXI_video_strm_V_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, video_src_TDEST_int, "video_src_TDEST_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_vld_out, "regslice_both_AXI_video_strm_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_ack_in, "regslice_both_AXI_video_strm_V_dest_V_U_ack_in");
    sc_trace(mVcdFile, ap_condition_200, "ap_condition_200");
#endif

    }
}

AXIvideo2Mat::~AXIvideo2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_AXI_video_strm_V_data_V_U;
    delete regslice_both_AXI_video_strm_V_keep_V_U;
    delete regslice_both_AXI_video_strm_V_strb_V_U;
    delete regslice_both_AXI_video_strm_V_user_V_U;
    delete regslice_both_AXI_video_strm_V_last_V_U;
    delete regslice_both_AXI_video_strm_V_id_V_U;
    delete regslice_both_AXI_video_strm_V_dest_V_U;
}

void AXIvideo2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(icmp_ln71_fu_409_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V_0_i_reg_257 = tmp_data_V_reg_479.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_data_V_0_i_reg_257 = axi_data_V_3_i_reg_360.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_i_reg_289 = p_Val2_s_reg_336.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
        axi_data_V_1_i_reg_289 = axi_data_V_0_i_reg_257.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_i_reg_360 = axi_data_V_1_i_reg_289.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())))) {
        axi_data_V_3_i_reg_360 = video_src_TDATA_int.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V_0_i_reg_247 = tmp_last_V_reg_487.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_last_V_0_i_reg_247 = axi_last_V_3_i_reg_348.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_200.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(or_ln76_fu_434_p2.read(), ap_const_lv1_1))) {
            axi_last_V_2_i_reg_323 = ap_phi_mux_eol_phi_fu_281_p4.read();
        } else if ((esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_ln76_fu_434_p2.read()))) {
            axi_last_V_2_i_reg_323 = video_src_TLAST_int.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            axi_last_V_2_i_reg_323 = ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_i_reg_348 = eol_reg_278.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())))) {
        axi_last_V_3_i_reg_348 = video_src_TLAST_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_0_i_reg_311 = axi_last_V_2_i_reg_323.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
        eol_0_i_reg_311 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_i_reg_372 = eol_0_i_reg_311.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())))) {
        eol_2_i_reg_372 = video_src_TLAST_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_278 = axi_last_V_2_i_reg_323.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
        eol_reg_278 = axi_last_V_0_i_reg_247.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_200.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(or_ln76_fu_434_p2.read(), ap_const_lv1_1))) {
            p_Val2_s_reg_336 = ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4.read();
        } else if ((esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_ln76_fu_434_p2.read()))) {
            p_Val2_s_reg_336 = video_src_TDATA_int.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            p_Val2_s_reg_336 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_336.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        sof_1_i_fu_176 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_i_fu_176 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        t_V_8_reg_300 = j_V_fu_425_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln71_fu_409_p2.read()))) {
        t_V_8_reg_300 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_V_reg_267 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_V_reg_267 = i_V_reg_503.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
        cols_V_reg_474 = cols_V_fu_396_p1.read();
        rows_V_reg_469 = rows_V_fu_392_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_503 = i_V_fu_414_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln73_reg_508 = icmp_ln73_fu_420_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_526 = ap_phi_mux_p_Val2_s_phi_fu_340_p4.read().range(15, 8);
        tmp_2_reg_531 = ap_phi_mux_p_Val2_s_phi_fu_340_p4.read().range(23, 16);
        tmp_reg_521 = tmp_fu_440_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(video_src_TVALID_int.read(), ap_const_logic_1))) {
        tmp_data_V_reg_479 = video_src_TDATA_int.read();
        tmp_last_V_reg_487 = video_src_TLAST_int.read();
    }
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())));
}

void AXIvideo2Mat::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read()));
}

void AXIvideo2Mat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state5.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read()));
}

void AXIvideo2Mat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())));
}

void AXIvideo2Mat::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read()));
}

void AXIvideo2Mat::thread_ap_condition_200() {
    ap_condition_200 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0));
}

void AXIvideo2Mat::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln71_fu_409_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXIvideo2Mat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4 = p_Val2_s_reg_336.read();
    } else {
        ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4 = axi_data_V_1_i_reg_289.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_0_i_phi_fu_315_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        ap_phi_mux_eol_0_i_phi_fu_315_p4 = axi_last_V_2_i_reg_323.read();
    } else {
        ap_phi_mux_eol_0_i_phi_fu_315_p4 = eol_0_i_reg_311.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_2_i_phi_fu_375_p4() {
    ap_phi_mux_eol_2_i_phi_fu_375_p4 = eol_2_i_reg_372.read();
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_phi_fu_281_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        ap_phi_mux_eol_phi_fu_281_p4 = axi_last_V_2_i_reg_323.read();
    } else {
        ap_phi_mux_eol_phi_fu_281_p4 = eol_reg_278.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_p_Val2_s_phi_fu_340_p4() {
    if (esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(or_ln76_fu_434_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_p_Val2_s_phi_fu_340_p4 = ap_phi_mux_axi_data_V_1_i_phi_fu_292_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln76_fu_434_p2.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_340_p4 = video_src_TDATA_int.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_340_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_336.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_340_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_336.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323() {
    ap_phi_reg_pp1_iter0_axi_last_V_2_i_reg_323 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_336() {
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_336 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat::thread_ap_predicate_op67_read_state5() {
    ap_predicate_op67_read_state5 = (esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln76_fu_434_p2.read()));
}

void AXIvideo2Mat::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void AXIvideo2Mat::thread_cols_V_fu_396_p0() {
    cols_V_fu_396_p0 = img_cols_V_dout.read();
}

void AXIvideo2Mat::thread_cols_V_fu_396_p1() {
    cols_V_fu_396_p1 = esl_sext<32,12>(cols_V_fu_396_p0.read());
}

void AXIvideo2Mat::thread_i_V_fu_414_p2() {
    i_V_fu_414_p2 = (!t_V_reg_267.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_267.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AXIvideo2Mat::thread_icmp_ln71_fu_409_p2() {
    icmp_ln71_fu_409_p2 = (!t_V_reg_267.read().is_01() || !rows_V_reg_469.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_267.read() == rows_V_reg_469.read());
}

void AXIvideo2Mat::thread_icmp_ln73_fu_420_p2() {
    icmp_ln73_fu_420_p2 = (!t_V_8_reg_300.read().is_01() || !cols_V_reg_474.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_8_reg_300.read() == cols_V_reg_474.read());
}

void AXIvideo2Mat::thread_img_cols_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_cols_V_blk_n = img_cols_V_empty_n.read();
    } else {
        img_cols_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_cols_V_out_blk_n = img_cols_V_out_full_n.read();
    } else {
        img_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_cols_V_out_din() {
    img_cols_V_out_din = img_cols_V_dout.read();
}

void AXIvideo2Mat::thread_img_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
        img_cols_V_out_write = ap_const_logic_1;
    } else {
        img_cols_V_out_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_cols_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
        img_cols_V_read = ap_const_logic_1;
    } else {
        img_cols_V_read = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n.read();
    } else {
        img_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_0_V_din() {
    img_data_stream_0_V_din = tmp_reg_521.read();
}

void AXIvideo2Mat::thread_img_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_0_V_write = ap_const_logic_1;
    } else {
        img_data_stream_0_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n.read();
    } else {
        img_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_din() {
    img_data_stream_1_V_din = tmp_1_reg_526.read();
}

void AXIvideo2Mat::thread_img_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_1_V_write = ap_const_logic_1;
    } else {
        img_data_stream_1_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()))) {
        img_data_stream_2_V_blk_n = img_data_stream_2_V_full_n.read();
    } else {
        img_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_2_V_din() {
    img_data_stream_2_V_din = tmp_2_reg_531.read();
}

void AXIvideo2Mat::thread_img_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_2_V_write = ap_const_logic_1;
    } else {
        img_data_stream_2_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_rows_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_rows_V_blk_n = img_rows_V_empty_n.read();
    } else {
        img_rows_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_rows_V_out_blk_n = img_rows_V_out_full_n.read();
    } else {
        img_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_rows_V_out_din() {
    img_rows_V_out_din = img_rows_V_dout.read();
}

void AXIvideo2Mat::thread_img_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
        img_rows_V_out_write = ap_const_logic_1;
    } else {
        img_rows_V_out_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_rows_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
        img_rows_V_read = ap_const_logic_1;
    } else {
        img_rows_V_read = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln71_fu_409_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_j_V_fu_425_p2() {
    j_V_fu_425_p2 = (!t_V_8_reg_300.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_8_reg_300.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AXIvideo2Mat::thread_or_ln76_fu_434_p2() {
    or_ln76_fu_434_p2 = (sof_1_i_fu_176.read() | ap_phi_mux_eol_0_i_phi_fu_315_p4.read());
}

void AXIvideo2Mat::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void AXIvideo2Mat::thread_rows_V_fu_392_p0() {
    rows_V_fu_392_p0 = img_rows_V_dout.read();
}

void AXIvideo2Mat::thread_rows_V_fu_392_p1() {
    rows_V_fu_392_p1 = esl_sext<32,11>(rows_V_fu_392_p0.read());
}

void AXIvideo2Mat::thread_start_out() {
    start_out = real_start.read();
}

void AXIvideo2Mat::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_tmp_fu_440_p1() {
    tmp_fu_440_p1 = ap_phi_mux_p_Val2_s_phi_fu_340_p4.read().range(8-1, 0);
}

void AXIvideo2Mat::thread_tmp_user_V_fu_400_p1() {
    tmp_user_V_fu_400_p1 = video_src_TUSER_int.read();
}

void AXIvideo2Mat::thread_video_src_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln76_fu_434_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read())))) {
        video_src_TDATA_blk_n = video_src_TVALID_int.read();
    } else {
        video_src_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_video_src_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, video_src_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_AXI_video_strm_V_data_V_U_ack_in.read()))) {
        video_src_TREADY = ap_const_logic_1;
    } else {
        video_src_TREADY = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_video_src_TREADY_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(video_src_TVALID_int.read(), ap_const_logic_1)))) {
        video_src_TREADY_int = ap_const_logic_1;
    } else {
        video_src_TREADY_int = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_V_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_400_p1.read()) && esl_seteq<1,1,1>(video_src_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_user_V_fu_400_p1.read()) && esl_seteq<1,1,1>(video_src_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln71_fu_409_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln73_fu_420_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_phi_mux_eol_2_i_phi_fu_375_p4.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_372.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_src_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

