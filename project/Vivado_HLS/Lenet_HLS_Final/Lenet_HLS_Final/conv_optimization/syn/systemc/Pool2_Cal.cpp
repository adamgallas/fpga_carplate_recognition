// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Pool2_Cal.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Pool2_Cal::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Pool2_Cal::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state1 = "1";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state2 = "10";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state3 = "100";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state4 = "1000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state5 = "10000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state6 = "100000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> Pool2_Cal::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> Pool2_Cal::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Pool2_Cal::ap_const_lv32_1 = "1";
const sc_lv<1> Pool2_Cal::ap_const_lv1_0 = "0";
const sc_lv<32> Pool2_Cal::ap_const_lv32_2 = "10";
const sc_lv<1> Pool2_Cal::ap_const_lv1_1 = "1";
const sc_lv<32> Pool2_Cal::ap_const_lv32_3 = "11";
const sc_lv<32> Pool2_Cal::ap_const_lv32_4 = "100";
const sc_lv<32> Pool2_Cal::ap_const_lv32_5 = "101";
const sc_lv<32> Pool2_Cal::ap_const_lv32_6 = "110";
const sc_lv<32> Pool2_Cal::ap_const_lv32_7 = "111";
const sc_lv<32> Pool2_Cal::ap_const_lv32_8 = "1000";
const sc_lv<5> Pool2_Cal::ap_const_lv5_0 = "00000";
const sc_lv<4> Pool2_Cal::ap_const_lv4_0 = "0000";
const sc_lv<32> Pool2_Cal::ap_const_lv32_9 = "1001";
const sc_lv<5> Pool2_Cal::ap_const_lv5_10 = "10000";
const sc_lv<5> Pool2_Cal::ap_const_lv5_1 = "1";
const sc_lv<3> Pool2_Cal::ap_const_lv3_0 = "000";
const sc_lv<2> Pool2_Cal::ap_const_lv2_0 = "00";
const sc_lv<4> Pool2_Cal::ap_const_lv4_A = "1010";
const sc_lv<4> Pool2_Cal::ap_const_lv4_1 = "1";
const sc_lv<4> Pool2_Cal::ap_const_lv4_2 = "10";
const bool Pool2_Cal::ap_const_boolean_1 = true;

Pool2_Cal::Pool2_Cal(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1494_1_fu_256_p2);
    sensitive << ( add_ln1494_reg_520 );
    sensitive << ( zext_ln1494_3_fu_252_p1 );

    SC_METHOD(thread_add_ln1494_2_fu_285_p2);
    sensitive << ( zext_ln1494_4_fu_269_p1 );
    sensitive << ( zext_ln1494_5_fu_281_p1 );

    SC_METHOD(thread_add_ln1494_3_fu_305_p2);
    sensitive << ( add_ln1494_reg_520 );
    sensitive << ( zext_ln1494_6_fu_301_p1 );

    SC_METHOD(thread_add_ln1494_4_fu_334_p2);
    sensitive << ( zext_ln1494_7_fu_318_p1 );
    sensitive << ( zext_ln1494_8_fu_330_p1 );

    SC_METHOD(thread_add_ln1494_5_fu_391_p2);
    sensitive << ( trunc_ln168_reg_539 );
    sensitive << ( zext_ln1494_9_fu_387_p1 );

    SC_METHOD(thread_add_ln1494_6_fu_401_p2);
    sensitive << ( trunc_ln169_reg_550 );
    sensitive << ( zext_ln1494_9_fu_387_p1 );

    SC_METHOD(thread_add_ln1494_7_fu_416_p2);
    sensitive << ( trunc_ln168_reg_539 );
    sensitive << ( zext_ln1494_12_fu_412_p1 );

    SC_METHOD(thread_add_ln1494_8_fu_426_p2);
    sensitive << ( trunc_ln169_reg_550 );
    sensitive << ( zext_ln1494_12_fu_412_p1 );

    SC_METHOD(thread_add_ln1494_fu_222_p2);
    sensitive << ( zext_ln1494_2_fu_218_p1 );
    sensitive << ( zext_ln1494_1_fu_206_p1 );

    SC_METHOD(thread_add_ln203_1_fu_358_p2);
    sensitive << ( add_ln203_reg_526 );
    sensitive << ( zext_ln203_1_fu_354_p1 );

    SC_METHOD(thread_add_ln203_2_fu_375_p2);
    sensitive << ( p_shl3_cast_fu_367_p3 );
    sensitive << ( zext_ln203_2_fu_363_p1 );

    SC_METHOD(thread_add_ln203_3_fu_456_p2);
    sensitive << ( add_ln1494_2_reg_534 );
    sensitive << ( zext_ln167_fu_452_p1 );

    SC_METHOD(thread_add_ln203_4_fu_472_p2);
    sensitive << ( add_ln1494_4_reg_545 );
    sensitive << ( zext_ln168_fu_468_p1 );

    SC_METHOD(thread_add_ln203_5_fu_491_p2);
    sensitive << ( add_ln203_2_reg_556 );
    sensitive << ( zext_ln203_3_fu_487_p1 );

    SC_METHOD(thread_add_ln203_fu_240_p2);
    sensitive << ( zext_ln1494_fu_194_p1 );
    sensitive << ( zext_ln203_fu_236_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln162_fu_182_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln162_fu_182_p2 );

    SC_METHOD(thread_grp_fu_176_p2);
    sensitive << ( layer4_V_q0 );
    sensitive << ( layer4_V_q1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_fu_431_p2);
    sensitive << ( i_0_reg_152 );

    SC_METHOD(thread_icmp_ln162_fu_182_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_icmp_ln164_fu_246_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_152 );

    SC_METHOD(thread_icmp_ln166_fu_381_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_in_d_fu_188_p2);
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_j_fu_496_p2);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_layer4_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( add_ln203_3_reg_605 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( select_ln203_reg_637 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln1494_10_fu_396_p1 );
    sensitive << ( zext_ln1494_11_fu_437_p1 );

    SC_METHOD(thread_layer4_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( add_ln203_4_reg_611 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln1494_13_fu_421_p1 );
    sensitive << ( zext_ln1494_14_fu_441_p1 );

    SC_METHOD(thread_layer4_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_layer4_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_layer5_V_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln203_4_fu_508_p1 );

    SC_METHOD(thread_layer5_V_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_layer5_V_d0);
    sensitive << ( layer4_V_q0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_layer5_V_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_or_ln167_fu_406_p2);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_or_ln168_fu_295_p2);
    sensitive << ( i_0_reg_152 );

    SC_METHOD(thread_p_shl3_cast_fu_367_p3);
    sensitive << ( add_ln203_1_fu_358_p2 );

    SC_METHOD(thread_select_ln167_fu_445_p3);
    sensitive << ( or_ln167_reg_574 );
    sensitive << ( j_0_reg_164 );
    sensitive << ( grp_fu_176_p2 );

    SC_METHOD(thread_select_ln168_fu_461_p3);
    sensitive << ( or_ln167_reg_574 );
    sensitive << ( j_0_reg_164 );
    sensitive << ( grp_fu_176_p2 );

    SC_METHOD(thread_select_ln203_fu_502_p3);
    sensitive << ( add_ln203_3_reg_605 );
    sensitive << ( add_ln203_4_reg_611 );
    sensitive << ( grp_fu_176_p2 );

    SC_METHOD(thread_tmp_10_fu_322_p3);
    sensitive << ( add_ln1494_3_fu_305_p2 );

    SC_METHOD(thread_tmp_11_fu_344_p4);
    sensitive << ( i_0_reg_152 );

    SC_METHOD(thread_tmp_12_fu_477_p4);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_tmp_1_fu_198_p3);
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_tmp_2_fu_210_p3);
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_tmp_3_fu_228_p3);
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_tmp_7_fu_261_p3);
    sensitive << ( add_ln1494_1_fu_256_p2 );

    SC_METHOD(thread_tmp_8_fu_273_p3);
    sensitive << ( add_ln1494_1_fu_256_p2 );

    SC_METHOD(thread_tmp_9_fu_310_p3);
    sensitive << ( add_ln1494_3_fu_305_p2 );

    SC_METHOD(thread_trunc_ln168_fu_291_p1);
    sensitive << ( add_ln1494_2_fu_285_p2 );

    SC_METHOD(thread_trunc_ln169_fu_340_p1);
    sensitive << ( add_ln1494_4_fu_334_p2 );

    SC_METHOD(thread_zext_ln1494_10_fu_396_p1);
    sensitive << ( add_ln1494_5_fu_391_p2 );

    SC_METHOD(thread_zext_ln1494_11_fu_437_p1);
    sensitive << ( add_ln1494_6_reg_569 );

    SC_METHOD(thread_zext_ln1494_12_fu_412_p1);
    sensitive << ( or_ln167_fu_406_p2 );

    SC_METHOD(thread_zext_ln1494_13_fu_421_p1);
    sensitive << ( add_ln1494_7_fu_416_p2 );

    SC_METHOD(thread_zext_ln1494_14_fu_441_p1);
    sensitive << ( add_ln1494_8_reg_585 );

    SC_METHOD(thread_zext_ln1494_1_fu_206_p1);
    sensitive << ( tmp_1_fu_198_p3 );

    SC_METHOD(thread_zext_ln1494_2_fu_218_p1);
    sensitive << ( tmp_2_fu_210_p3 );

    SC_METHOD(thread_zext_ln1494_3_fu_252_p1);
    sensitive << ( i_0_reg_152 );

    SC_METHOD(thread_zext_ln1494_4_fu_269_p1);
    sensitive << ( tmp_7_fu_261_p3 );

    SC_METHOD(thread_zext_ln1494_5_fu_281_p1);
    sensitive << ( tmp_8_fu_273_p3 );

    SC_METHOD(thread_zext_ln1494_6_fu_301_p1);
    sensitive << ( or_ln168_fu_295_p2 );

    SC_METHOD(thread_zext_ln1494_7_fu_318_p1);
    sensitive << ( tmp_9_fu_310_p3 );

    SC_METHOD(thread_zext_ln1494_8_fu_330_p1);
    sensitive << ( tmp_10_fu_322_p3 );

    SC_METHOD(thread_zext_ln1494_9_fu_387_p1);
    sensitive << ( j_0_reg_164 );

    SC_METHOD(thread_zext_ln1494_fu_194_p1);
    sensitive << ( in_d_0_reg_141 );

    SC_METHOD(thread_zext_ln167_fu_452_p1);
    sensitive << ( select_ln167_fu_445_p3 );

    SC_METHOD(thread_zext_ln168_fu_468_p1);
    sensitive << ( select_ln168_fu_461_p3 );

    SC_METHOD(thread_zext_ln203_1_fu_354_p1);
    sensitive << ( tmp_11_fu_344_p4 );

    SC_METHOD(thread_zext_ln203_2_fu_363_p1);
    sensitive << ( add_ln203_1_fu_358_p2 );

    SC_METHOD(thread_zext_ln203_3_fu_487_p1);
    sensitive << ( tmp_12_fu_477_p4 );

    SC_METHOD(thread_zext_ln203_4_fu_508_p1);
    sensitive << ( add_ln203_5_reg_617 );

    SC_METHOD(thread_zext_ln203_fu_236_p1);
    sensitive << ( tmp_3_fu_228_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln162_fu_182_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln164_fu_246_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln166_fu_381_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Pool2_Cal_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, layer4_V_address0, "(port)layer4_V_address0");
    sc_trace(mVcdFile, layer4_V_ce0, "(port)layer4_V_ce0");
    sc_trace(mVcdFile, layer4_V_q0, "(port)layer4_V_q0");
    sc_trace(mVcdFile, layer4_V_address1, "(port)layer4_V_address1");
    sc_trace(mVcdFile, layer4_V_ce1, "(port)layer4_V_ce1");
    sc_trace(mVcdFile, layer4_V_q1, "(port)layer4_V_q1");
    sc_trace(mVcdFile, layer5_V_address0, "(port)layer5_V_address0");
    sc_trace(mVcdFile, layer5_V_ce0, "(port)layer5_V_ce0");
    sc_trace(mVcdFile, layer5_V_we0, "(port)layer5_V_we0");
    sc_trace(mVcdFile, layer5_V_d0, "(port)layer5_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_d_fu_188_p2, "in_d_fu_188_p2");
    sc_trace(mVcdFile, in_d_reg_515, "in_d_reg_515");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln1494_fu_222_p2, "add_ln1494_fu_222_p2");
    sc_trace(mVcdFile, add_ln1494_reg_520, "add_ln1494_reg_520");
    sc_trace(mVcdFile, icmp_ln162_fu_182_p2, "icmp_ln162_fu_182_p2");
    sc_trace(mVcdFile, add_ln203_fu_240_p2, "add_ln203_fu_240_p2");
    sc_trace(mVcdFile, add_ln203_reg_526, "add_ln203_reg_526");
    sc_trace(mVcdFile, add_ln1494_2_fu_285_p2, "add_ln1494_2_fu_285_p2");
    sc_trace(mVcdFile, add_ln1494_2_reg_534, "add_ln1494_2_reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln164_fu_246_p2, "icmp_ln164_fu_246_p2");
    sc_trace(mVcdFile, trunc_ln168_fu_291_p1, "trunc_ln168_fu_291_p1");
    sc_trace(mVcdFile, trunc_ln168_reg_539, "trunc_ln168_reg_539");
    sc_trace(mVcdFile, add_ln1494_4_fu_334_p2, "add_ln1494_4_fu_334_p2");
    sc_trace(mVcdFile, add_ln1494_4_reg_545, "add_ln1494_4_reg_545");
    sc_trace(mVcdFile, trunc_ln169_fu_340_p1, "trunc_ln169_fu_340_p1");
    sc_trace(mVcdFile, trunc_ln169_reg_550, "trunc_ln169_reg_550");
    sc_trace(mVcdFile, add_ln203_2_fu_375_p2, "add_ln203_2_fu_375_p2");
    sc_trace(mVcdFile, add_ln203_2_reg_556, "add_ln203_2_reg_556");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln166_fu_381_p2, "icmp_ln166_fu_381_p2");
    sc_trace(mVcdFile, add_ln1494_6_fu_401_p2, "add_ln1494_6_fu_401_p2");
    sc_trace(mVcdFile, add_ln1494_6_reg_569, "add_ln1494_6_reg_569");
    sc_trace(mVcdFile, or_ln167_fu_406_p2, "or_ln167_fu_406_p2");
    sc_trace(mVcdFile, or_ln167_reg_574, "or_ln167_reg_574");
    sc_trace(mVcdFile, add_ln1494_8_fu_426_p2, "add_ln1494_8_fu_426_p2");
    sc_trace(mVcdFile, add_ln1494_8_reg_585, "add_ln1494_8_reg_585");
    sc_trace(mVcdFile, i_fu_431_p2, "i_fu_431_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln203_3_fu_456_p2, "add_ln203_3_fu_456_p2");
    sc_trace(mVcdFile, add_ln203_3_reg_605, "add_ln203_3_reg_605");
    sc_trace(mVcdFile, add_ln203_4_fu_472_p2, "add_ln203_4_fu_472_p2");
    sc_trace(mVcdFile, add_ln203_4_reg_611, "add_ln203_4_reg_611");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, add_ln203_5_fu_491_p2, "add_ln203_5_fu_491_p2");
    sc_trace(mVcdFile, add_ln203_5_reg_617, "add_ln203_5_reg_617");
    sc_trace(mVcdFile, j_fu_496_p2, "j_fu_496_p2");
    sc_trace(mVcdFile, j_reg_622, "j_reg_622");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, select_ln203_fu_502_p3, "select_ln203_fu_502_p3");
    sc_trace(mVcdFile, select_ln203_reg_637, "select_ln203_reg_637");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, in_d_0_reg_141, "in_d_0_reg_141");
    sc_trace(mVcdFile, i_0_reg_152, "i_0_reg_152");
    sc_trace(mVcdFile, j_0_reg_164, "j_0_reg_164");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln1494_10_fu_396_p1, "zext_ln1494_10_fu_396_p1");
    sc_trace(mVcdFile, zext_ln1494_13_fu_421_p1, "zext_ln1494_13_fu_421_p1");
    sc_trace(mVcdFile, zext_ln1494_11_fu_437_p1, "zext_ln1494_11_fu_437_p1");
    sc_trace(mVcdFile, zext_ln1494_14_fu_441_p1, "zext_ln1494_14_fu_441_p1");
    sc_trace(mVcdFile, zext_ln203_4_fu_508_p1, "zext_ln203_4_fu_508_p1");
    sc_trace(mVcdFile, tmp_1_fu_198_p3, "tmp_1_fu_198_p3");
    sc_trace(mVcdFile, tmp_2_fu_210_p3, "tmp_2_fu_210_p3");
    sc_trace(mVcdFile, zext_ln1494_2_fu_218_p1, "zext_ln1494_2_fu_218_p1");
    sc_trace(mVcdFile, zext_ln1494_1_fu_206_p1, "zext_ln1494_1_fu_206_p1");
    sc_trace(mVcdFile, tmp_3_fu_228_p3, "tmp_3_fu_228_p3");
    sc_trace(mVcdFile, zext_ln1494_fu_194_p1, "zext_ln1494_fu_194_p1");
    sc_trace(mVcdFile, zext_ln203_fu_236_p1, "zext_ln203_fu_236_p1");
    sc_trace(mVcdFile, zext_ln1494_3_fu_252_p1, "zext_ln1494_3_fu_252_p1");
    sc_trace(mVcdFile, add_ln1494_1_fu_256_p2, "add_ln1494_1_fu_256_p2");
    sc_trace(mVcdFile, tmp_7_fu_261_p3, "tmp_7_fu_261_p3");
    sc_trace(mVcdFile, tmp_8_fu_273_p3, "tmp_8_fu_273_p3");
    sc_trace(mVcdFile, zext_ln1494_4_fu_269_p1, "zext_ln1494_4_fu_269_p1");
    sc_trace(mVcdFile, zext_ln1494_5_fu_281_p1, "zext_ln1494_5_fu_281_p1");
    sc_trace(mVcdFile, or_ln168_fu_295_p2, "or_ln168_fu_295_p2");
    sc_trace(mVcdFile, zext_ln1494_6_fu_301_p1, "zext_ln1494_6_fu_301_p1");
    sc_trace(mVcdFile, add_ln1494_3_fu_305_p2, "add_ln1494_3_fu_305_p2");
    sc_trace(mVcdFile, tmp_9_fu_310_p3, "tmp_9_fu_310_p3");
    sc_trace(mVcdFile, tmp_10_fu_322_p3, "tmp_10_fu_322_p3");
    sc_trace(mVcdFile, zext_ln1494_7_fu_318_p1, "zext_ln1494_7_fu_318_p1");
    sc_trace(mVcdFile, zext_ln1494_8_fu_330_p1, "zext_ln1494_8_fu_330_p1");
    sc_trace(mVcdFile, tmp_11_fu_344_p4, "tmp_11_fu_344_p4");
    sc_trace(mVcdFile, zext_ln203_1_fu_354_p1, "zext_ln203_1_fu_354_p1");
    sc_trace(mVcdFile, add_ln203_1_fu_358_p2, "add_ln203_1_fu_358_p2");
    sc_trace(mVcdFile, p_shl3_cast_fu_367_p3, "p_shl3_cast_fu_367_p3");
    sc_trace(mVcdFile, zext_ln203_2_fu_363_p1, "zext_ln203_2_fu_363_p1");
    sc_trace(mVcdFile, zext_ln1494_9_fu_387_p1, "zext_ln1494_9_fu_387_p1");
    sc_trace(mVcdFile, add_ln1494_5_fu_391_p2, "add_ln1494_5_fu_391_p2");
    sc_trace(mVcdFile, zext_ln1494_12_fu_412_p1, "zext_ln1494_12_fu_412_p1");
    sc_trace(mVcdFile, add_ln1494_7_fu_416_p2, "add_ln1494_7_fu_416_p2");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, select_ln167_fu_445_p3, "select_ln167_fu_445_p3");
    sc_trace(mVcdFile, zext_ln167_fu_452_p1, "zext_ln167_fu_452_p1");
    sc_trace(mVcdFile, select_ln168_fu_461_p3, "select_ln168_fu_461_p3");
    sc_trace(mVcdFile, zext_ln168_fu_468_p1, "zext_ln168_fu_468_p1");
    sc_trace(mVcdFile, tmp_12_fu_477_p4, "tmp_12_fu_477_p4");
    sc_trace(mVcdFile, zext_ln203_3_fu_487_p1, "zext_ln203_3_fu_487_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Pool2_Cal::~Pool2_Cal() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Pool2_Cal::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln166_fu_381_p2.read()))) {
        i_0_reg_152 = i_fu_431_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln162_fu_182_p2.read(), ap_const_lv1_0))) {
        i_0_reg_152 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_fu_246_p2.read()))) {
        in_d_0_reg_141 = in_d_reg_515.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        in_d_0_reg_141 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_0_reg_164 = j_reg_622.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln164_fu_246_p2.read(), ap_const_lv1_1))) {
        j_0_reg_164 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln164_fu_246_p2.read(), ap_const_lv1_1))) {
        add_ln1494_2_reg_534 = add_ln1494_2_fu_285_p2.read();
        add_ln1494_4_reg_545 = add_ln1494_4_fu_334_p2.read();
        add_ln203_2_reg_556 = add_ln203_2_fu_375_p2.read();
        trunc_ln168_reg_539 = trunc_ln168_fu_291_p1.read();
        trunc_ln169_reg_550 = trunc_ln169_fu_340_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln166_fu_381_p2.read()))) {
        add_ln1494_6_reg_569 = add_ln1494_6_fu_401_p2.read();
        add_ln1494_8_reg_585 = add_ln1494_8_fu_426_p2.read();
        or_ln167_reg_574 = or_ln167_fu_406_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln162_fu_182_p2.read(), ap_const_lv1_0))) {
        add_ln1494_reg_520 = add_ln1494_fu_222_p2.read();
        add_ln203_reg_526 = add_ln203_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln203_3_reg_605 = add_ln203_3_fu_456_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_ln203_4_reg_611 = add_ln203_4_fu_472_p2.read();
        add_ln203_5_reg_617 = add_ln203_5_fu_491_p2.read();
        j_reg_622 = j_fu_496_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_d_reg_515 = in_d_fu_188_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        select_ln203_reg_637 = select_ln203_fu_502_p3.read();
    }
}

void Pool2_Cal::thread_add_ln1494_1_fu_256_p2() {
    add_ln1494_1_fu_256_p2 = (!zext_ln1494_3_fu_252_p1.read().is_01() || !add_ln1494_reg_520.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1494_3_fu_252_p1.read()) + sc_biguint<9>(add_ln1494_reg_520.read()));
}

void Pool2_Cal::thread_add_ln1494_2_fu_285_p2() {
    add_ln1494_2_fu_285_p2 = (!zext_ln1494_4_fu_269_p1.read().is_01() || !zext_ln1494_5_fu_281_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln1494_4_fu_269_p1.read()) + sc_biguint<64>(zext_ln1494_5_fu_281_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_3_fu_305_p2() {
    add_ln1494_3_fu_305_p2 = (!zext_ln1494_6_fu_301_p1.read().is_01() || !add_ln1494_reg_520.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1494_6_fu_301_p1.read()) + sc_biguint<9>(add_ln1494_reg_520.read()));
}

void Pool2_Cal::thread_add_ln1494_4_fu_334_p2() {
    add_ln1494_4_fu_334_p2 = (!zext_ln1494_7_fu_318_p1.read().is_01() || !zext_ln1494_8_fu_330_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln1494_7_fu_318_p1.read()) + sc_biguint<64>(zext_ln1494_8_fu_330_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_5_fu_391_p2() {
    add_ln1494_5_fu_391_p2 = (!trunc_ln168_reg_539.read().is_01() || !zext_ln1494_9_fu_387_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(trunc_ln168_reg_539.read()) + sc_biguint<12>(zext_ln1494_9_fu_387_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_6_fu_401_p2() {
    add_ln1494_6_fu_401_p2 = (!trunc_ln169_reg_550.read().is_01() || !zext_ln1494_9_fu_387_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(trunc_ln169_reg_550.read()) + sc_biguint<12>(zext_ln1494_9_fu_387_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_7_fu_416_p2() {
    add_ln1494_7_fu_416_p2 = (!trunc_ln168_reg_539.read().is_01() || !zext_ln1494_12_fu_412_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(trunc_ln168_reg_539.read()) + sc_biguint<12>(zext_ln1494_12_fu_412_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_8_fu_426_p2() {
    add_ln1494_8_fu_426_p2 = (!trunc_ln169_reg_550.read().is_01() || !zext_ln1494_12_fu_412_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(trunc_ln169_reg_550.read()) + sc_biguint<12>(zext_ln1494_12_fu_412_p1.read()));
}

void Pool2_Cal::thread_add_ln1494_fu_222_p2() {
    add_ln1494_fu_222_p2 = (!zext_ln1494_2_fu_218_p1.read().is_01() || !zext_ln1494_1_fu_206_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1494_2_fu_218_p1.read()) + sc_biguint<9>(zext_ln1494_1_fu_206_p1.read()));
}

void Pool2_Cal::thread_add_ln203_1_fu_358_p2() {
    add_ln203_1_fu_358_p2 = (!zext_ln203_1_fu_354_p1.read().is_01() || !add_ln203_reg_526.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln203_1_fu_354_p1.read()) + sc_biguint<8>(add_ln203_reg_526.read()));
}

void Pool2_Cal::thread_add_ln203_2_fu_375_p2() {
    add_ln203_2_fu_375_p2 = (!p_shl3_cast_fu_367_p3.read().is_01() || !zext_ln203_2_fu_363_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl3_cast_fu_367_p3.read()) + sc_biguint<10>(zext_ln203_2_fu_363_p1.read()));
}

void Pool2_Cal::thread_add_ln203_3_fu_456_p2() {
    add_ln203_3_fu_456_p2 = (!add_ln1494_2_reg_534.read().is_01() || !zext_ln167_fu_452_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(add_ln1494_2_reg_534.read()) + sc_biguint<64>(zext_ln167_fu_452_p1.read()));
}

void Pool2_Cal::thread_add_ln203_4_fu_472_p2() {
    add_ln203_4_fu_472_p2 = (!add_ln1494_4_reg_545.read().is_01() || !zext_ln168_fu_468_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(add_ln1494_4_reg_545.read()) + sc_biguint<64>(zext_ln168_fu_468_p1.read()));
}

void Pool2_Cal::thread_add_ln203_5_fu_491_p2() {
    add_ln203_5_fu_491_p2 = (!add_ln203_2_reg_556.read().is_01() || !zext_ln203_3_fu_487_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln203_2_reg_556.read()) + sc_biguint<10>(zext_ln203_3_fu_487_p1.read()));
}

void Pool2_Cal::thread_add_ln203_fu_240_p2() {
    add_ln203_fu_240_p2 = (!zext_ln1494_fu_194_p1.read().is_01() || !zext_ln203_fu_236_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln1494_fu_194_p1.read()) + sc_biguint<8>(zext_ln203_fu_236_p1.read()));
}

void Pool2_Cal::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Pool2_Cal::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Pool2_Cal::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Pool2_Cal::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Pool2_Cal::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Pool2_Cal::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Pool2_Cal::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Pool2_Cal::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Pool2_Cal::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Pool2_Cal::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Pool2_Cal::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln162_fu_182_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln162_fu_182_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_grp_fu_176_p2() {
    grp_fu_176_p2 = (!layer4_V_q0.read().is_01() || !layer4_V_q1.read().is_01())? sc_lv<1>(): (sc_bigint<12>(layer4_V_q0.read()) > sc_bigint<12>(layer4_V_q1.read()));
}

void Pool2_Cal::thread_i_fu_431_p2() {
    i_fu_431_p2 = (!i_0_reg_152.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_152.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void Pool2_Cal::thread_icmp_ln162_fu_182_p2() {
    icmp_ln162_fu_182_p2 = (!in_d_0_reg_141.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(in_d_0_reg_141.read() == ap_const_lv5_10);
}

void Pool2_Cal::thread_icmp_ln164_fu_246_p2() {
    icmp_ln164_fu_246_p2 = (!i_0_reg_152.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): (sc_biguint<4>(i_0_reg_152.read()) < sc_biguint<4>(ap_const_lv4_A));
}

void Pool2_Cal::thread_icmp_ln166_fu_381_p2() {
    icmp_ln166_fu_381_p2 = (!j_0_reg_164.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): (sc_biguint<4>(j_0_reg_164.read()) < sc_biguint<4>(ap_const_lv4_A));
}

void Pool2_Cal::thread_in_d_fu_188_p2() {
    in_d_fu_188_p2 = (!in_d_0_reg_141.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(in_d_0_reg_141.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Pool2_Cal::thread_j_fu_496_p2() {
    j_fu_496_p2 = (!j_0_reg_164.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_164.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void Pool2_Cal::thread_layer4_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        layer4_V_address0 =  (sc_lv<11>) (select_ln203_reg_637.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        layer4_V_address0 =  (sc_lv<11>) (add_ln203_3_reg_605.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        layer4_V_address0 =  (sc_lv<11>) (zext_ln1494_11_fu_437_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        layer4_V_address0 =  (sc_lv<11>) (zext_ln1494_10_fu_396_p1.read());
    } else {
        layer4_V_address0 = "XXXXXXXXXXX";
    }
}

void Pool2_Cal::thread_layer4_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        layer4_V_address1 =  (sc_lv<11>) (add_ln203_4_reg_611.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        layer4_V_address1 =  (sc_lv<11>) (zext_ln1494_14_fu_441_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        layer4_V_address1 =  (sc_lv<11>) (zext_ln1494_13_fu_421_p1.read());
    } else {
        layer4_V_address1 = "XXXXXXXXXXX";
    }
}

void Pool2_Cal::thread_layer4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        layer4_V_ce0 = ap_const_logic_1;
    } else {
        layer4_V_ce0 = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_layer4_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        layer4_V_ce1 = ap_const_logic_1;
    } else {
        layer4_V_ce1 = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_layer5_V_address0() {
    layer5_V_address0 =  (sc_lv<9>) (zext_ln203_4_fu_508_p1.read());
}

void Pool2_Cal::thread_layer5_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        layer5_V_ce0 = ap_const_logic_1;
    } else {
        layer5_V_ce0 = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_layer5_V_d0() {
    layer5_V_d0 = layer4_V_q0.read();
}

void Pool2_Cal::thread_layer5_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        layer5_V_we0 = ap_const_logic_1;
    } else {
        layer5_V_we0 = ap_const_logic_0;
    }
}

void Pool2_Cal::thread_or_ln167_fu_406_p2() {
    or_ln167_fu_406_p2 = (j_0_reg_164.read() | ap_const_lv4_1);
}

void Pool2_Cal::thread_or_ln168_fu_295_p2() {
    or_ln168_fu_295_p2 = (i_0_reg_152.read() | ap_const_lv4_1);
}

void Pool2_Cal::thread_p_shl3_cast_fu_367_p3() {
    p_shl3_cast_fu_367_p3 = esl_concat<8,2>(add_ln203_1_fu_358_p2.read(), ap_const_lv2_0);
}

void Pool2_Cal::thread_select_ln167_fu_445_p3() {
    select_ln167_fu_445_p3 = (!grp_fu_176_p2.read()[0].is_01())? sc_lv<4>(): ((grp_fu_176_p2.read()[0].to_bool())? j_0_reg_164.read(): or_ln167_reg_574.read());
}

void Pool2_Cal::thread_select_ln168_fu_461_p3() {
    select_ln168_fu_461_p3 = (!grp_fu_176_p2.read()[0].is_01())? sc_lv<4>(): ((grp_fu_176_p2.read()[0].to_bool())? j_0_reg_164.read(): or_ln167_reg_574.read());
}

void Pool2_Cal::thread_select_ln203_fu_502_p3() {
    select_ln203_fu_502_p3 = (!grp_fu_176_p2.read()[0].is_01())? sc_lv<64>(): ((grp_fu_176_p2.read()[0].to_bool())? add_ln203_3_reg_605.read(): add_ln203_4_reg_611.read());
}

void Pool2_Cal::thread_tmp_10_fu_322_p3() {
    tmp_10_fu_322_p3 = esl_concat<9,1>(add_ln1494_3_fu_305_p2.read(), ap_const_lv1_0);
}

void Pool2_Cal::thread_tmp_11_fu_344_p4() {
    tmp_11_fu_344_p4 = i_0_reg_152.read().range(3, 1);
}

void Pool2_Cal::thread_tmp_12_fu_477_p4() {
    tmp_12_fu_477_p4 = j_0_reg_164.read().range(3, 1);
}

void Pool2_Cal::thread_tmp_1_fu_198_p3() {
    tmp_1_fu_198_p3 = esl_concat<5,3>(in_d_0_reg_141.read(), ap_const_lv3_0);
}

void Pool2_Cal::thread_tmp_2_fu_210_p3() {
    tmp_2_fu_210_p3 = esl_concat<5,1>(in_d_0_reg_141.read(), ap_const_lv1_0);
}

void Pool2_Cal::thread_tmp_3_fu_228_p3() {
    tmp_3_fu_228_p3 = esl_concat<5,2>(in_d_0_reg_141.read(), ap_const_lv2_0);
}

void Pool2_Cal::thread_tmp_7_fu_261_p3() {
    tmp_7_fu_261_p3 = esl_concat<9,3>(add_ln1494_1_fu_256_p2.read(), ap_const_lv3_0);
}

void Pool2_Cal::thread_tmp_8_fu_273_p3() {
    tmp_8_fu_273_p3 = esl_concat<9,1>(add_ln1494_1_fu_256_p2.read(), ap_const_lv1_0);
}

void Pool2_Cal::thread_tmp_9_fu_310_p3() {
    tmp_9_fu_310_p3 = esl_concat<9,3>(add_ln1494_3_fu_305_p2.read(), ap_const_lv3_0);
}

void Pool2_Cal::thread_trunc_ln168_fu_291_p1() {
    trunc_ln168_fu_291_p1 = add_ln1494_2_fu_285_p2.read().range(12-1, 0);
}

void Pool2_Cal::thread_trunc_ln169_fu_340_p1() {
    trunc_ln169_fu_340_p1 = add_ln1494_4_fu_334_p2.read().range(12-1, 0);
}

void Pool2_Cal::thread_zext_ln1494_10_fu_396_p1() {
    zext_ln1494_10_fu_396_p1 = esl_zext<64,12>(add_ln1494_5_fu_391_p2.read());
}

void Pool2_Cal::thread_zext_ln1494_11_fu_437_p1() {
    zext_ln1494_11_fu_437_p1 = esl_zext<64,12>(add_ln1494_6_reg_569.read());
}

void Pool2_Cal::thread_zext_ln1494_12_fu_412_p1() {
    zext_ln1494_12_fu_412_p1 = esl_zext<12,4>(or_ln167_fu_406_p2.read());
}

void Pool2_Cal::thread_zext_ln1494_13_fu_421_p1() {
    zext_ln1494_13_fu_421_p1 = esl_zext<64,12>(add_ln1494_7_fu_416_p2.read());
}

void Pool2_Cal::thread_zext_ln1494_14_fu_441_p1() {
    zext_ln1494_14_fu_441_p1 = esl_zext<64,12>(add_ln1494_8_reg_585.read());
}

void Pool2_Cal::thread_zext_ln1494_1_fu_206_p1() {
    zext_ln1494_1_fu_206_p1 = esl_zext<9,8>(tmp_1_fu_198_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_2_fu_218_p1() {
    zext_ln1494_2_fu_218_p1 = esl_zext<9,6>(tmp_2_fu_210_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_3_fu_252_p1() {
    zext_ln1494_3_fu_252_p1 = esl_zext<9,4>(i_0_reg_152.read());
}

void Pool2_Cal::thread_zext_ln1494_4_fu_269_p1() {
    zext_ln1494_4_fu_269_p1 = esl_zext<64,12>(tmp_7_fu_261_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_5_fu_281_p1() {
    zext_ln1494_5_fu_281_p1 = esl_zext<64,10>(tmp_8_fu_273_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_6_fu_301_p1() {
    zext_ln1494_6_fu_301_p1 = esl_zext<9,4>(or_ln168_fu_295_p2.read());
}

void Pool2_Cal::thread_zext_ln1494_7_fu_318_p1() {
    zext_ln1494_7_fu_318_p1 = esl_zext<64,12>(tmp_9_fu_310_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_8_fu_330_p1() {
    zext_ln1494_8_fu_330_p1 = esl_zext<64,10>(tmp_10_fu_322_p3.read());
}

void Pool2_Cal::thread_zext_ln1494_9_fu_387_p1() {
    zext_ln1494_9_fu_387_p1 = esl_zext<12,4>(j_0_reg_164.read());
}

void Pool2_Cal::thread_zext_ln1494_fu_194_p1() {
    zext_ln1494_fu_194_p1 = esl_zext<8,5>(in_d_0_reg_141.read());
}

void Pool2_Cal::thread_zext_ln167_fu_452_p1() {
    zext_ln167_fu_452_p1 = esl_zext<64,4>(select_ln167_fu_445_p3.read());
}

void Pool2_Cal::thread_zext_ln168_fu_468_p1() {
    zext_ln168_fu_468_p1 = esl_zext<64,4>(select_ln168_fu_461_p3.read());
}

void Pool2_Cal::thread_zext_ln203_1_fu_354_p1() {
    zext_ln203_1_fu_354_p1 = esl_zext<8,3>(tmp_11_fu_344_p4.read());
}

void Pool2_Cal::thread_zext_ln203_2_fu_363_p1() {
    zext_ln203_2_fu_363_p1 = esl_zext<10,8>(add_ln203_1_fu_358_p2.read());
}

void Pool2_Cal::thread_zext_ln203_3_fu_487_p1() {
    zext_ln203_3_fu_487_p1 = esl_zext<10,3>(tmp_12_fu_477_p4.read());
}

void Pool2_Cal::thread_zext_ln203_4_fu_508_p1() {
    zext_ln203_4_fu_508_p1 = esl_zext<64,10>(add_ln203_5_reg_617.read());
}

void Pool2_Cal::thread_zext_ln203_fu_236_p1() {
    zext_ln203_fu_236_p1 = esl_zext<8,7>(tmp_3_fu_228_p3.read());
}

void Pool2_Cal::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln162_fu_182_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln164_fu_246_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln166_fu_381_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

