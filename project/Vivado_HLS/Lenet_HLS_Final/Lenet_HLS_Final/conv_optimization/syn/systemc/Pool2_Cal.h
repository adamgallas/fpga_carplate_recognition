// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Pool2_Cal_HH_
#define _Pool2_Cal_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Pool2_Cal : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > layer4_V_address0;
    sc_out< sc_logic > layer4_V_ce0;
    sc_in< sc_lv<12> > layer4_V_q0;
    sc_out< sc_lv<11> > layer4_V_address1;
    sc_out< sc_logic > layer4_V_ce1;
    sc_in< sc_lv<12> > layer4_V_q1;
    sc_out< sc_lv<9> > layer5_V_address0;
    sc_out< sc_logic > layer5_V_ce0;
    sc_out< sc_logic > layer5_V_we0;
    sc_out< sc_lv<12> > layer5_V_d0;


    // Module declarations
    Pool2_Cal(sc_module_name name);
    SC_HAS_PROCESS(Pool2_Cal);

    ~Pool2_Cal();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > in_d_fu_188_p2;
    sc_signal< sc_lv<5> > in_d_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > add_ln1494_fu_222_p2;
    sc_signal< sc_lv<9> > add_ln1494_reg_520;
    sc_signal< sc_lv<1> > icmp_ln162_fu_182_p2;
    sc_signal< sc_lv<8> > add_ln203_fu_240_p2;
    sc_signal< sc_lv<8> > add_ln203_reg_526;
    sc_signal< sc_lv<64> > add_ln1494_2_fu_285_p2;
    sc_signal< sc_lv<64> > add_ln1494_2_reg_534;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln164_fu_246_p2;
    sc_signal< sc_lv<12> > trunc_ln168_fu_291_p1;
    sc_signal< sc_lv<12> > trunc_ln168_reg_539;
    sc_signal< sc_lv<64> > add_ln1494_4_fu_334_p2;
    sc_signal< sc_lv<64> > add_ln1494_4_reg_545;
    sc_signal< sc_lv<12> > trunc_ln169_fu_340_p1;
    sc_signal< sc_lv<12> > trunc_ln169_reg_550;
    sc_signal< sc_lv<10> > add_ln203_2_fu_375_p2;
    sc_signal< sc_lv<10> > add_ln203_2_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln166_fu_381_p2;
    sc_signal< sc_lv<12> > add_ln1494_6_fu_401_p2;
    sc_signal< sc_lv<12> > add_ln1494_6_reg_569;
    sc_signal< sc_lv<4> > or_ln167_fu_406_p2;
    sc_signal< sc_lv<4> > or_ln167_reg_574;
    sc_signal< sc_lv<12> > add_ln1494_8_fu_426_p2;
    sc_signal< sc_lv<12> > add_ln1494_8_reg_585;
    sc_signal< sc_lv<4> > i_fu_431_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > add_ln203_3_fu_456_p2;
    sc_signal< sc_lv<64> > add_ln203_3_reg_605;
    sc_signal< sc_lv<64> > add_ln203_4_fu_472_p2;
    sc_signal< sc_lv<64> > add_ln203_4_reg_611;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > add_ln203_5_fu_491_p2;
    sc_signal< sc_lv<10> > add_ln203_5_reg_617;
    sc_signal< sc_lv<4> > j_fu_496_p2;
    sc_signal< sc_lv<4> > j_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > select_ln203_fu_502_p3;
    sc_signal< sc_lv<64> > select_ln203_reg_637;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > in_d_0_reg_141;
    sc_signal< sc_lv<4> > i_0_reg_152;
    sc_signal< sc_lv<4> > j_0_reg_164;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln1494_10_fu_396_p1;
    sc_signal< sc_lv<64> > zext_ln1494_13_fu_421_p1;
    sc_signal< sc_lv<64> > zext_ln1494_11_fu_437_p1;
    sc_signal< sc_lv<64> > zext_ln1494_14_fu_441_p1;
    sc_signal< sc_lv<64> > zext_ln203_4_fu_508_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_198_p3;
    sc_signal< sc_lv<6> > tmp_2_fu_210_p3;
    sc_signal< sc_lv<9> > zext_ln1494_2_fu_218_p1;
    sc_signal< sc_lv<9> > zext_ln1494_1_fu_206_p1;
    sc_signal< sc_lv<7> > tmp_3_fu_228_p3;
    sc_signal< sc_lv<8> > zext_ln1494_fu_194_p1;
    sc_signal< sc_lv<8> > zext_ln203_fu_236_p1;
    sc_signal< sc_lv<9> > zext_ln1494_3_fu_252_p1;
    sc_signal< sc_lv<9> > add_ln1494_1_fu_256_p2;
    sc_signal< sc_lv<12> > tmp_7_fu_261_p3;
    sc_signal< sc_lv<10> > tmp_8_fu_273_p3;
    sc_signal< sc_lv<64> > zext_ln1494_4_fu_269_p1;
    sc_signal< sc_lv<64> > zext_ln1494_5_fu_281_p1;
    sc_signal< sc_lv<4> > or_ln168_fu_295_p2;
    sc_signal< sc_lv<9> > zext_ln1494_6_fu_301_p1;
    sc_signal< sc_lv<9> > add_ln1494_3_fu_305_p2;
    sc_signal< sc_lv<12> > tmp_9_fu_310_p3;
    sc_signal< sc_lv<10> > tmp_10_fu_322_p3;
    sc_signal< sc_lv<64> > zext_ln1494_7_fu_318_p1;
    sc_signal< sc_lv<64> > zext_ln1494_8_fu_330_p1;
    sc_signal< sc_lv<3> > tmp_11_fu_344_p4;
    sc_signal< sc_lv<8> > zext_ln203_1_fu_354_p1;
    sc_signal< sc_lv<8> > add_ln203_1_fu_358_p2;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_367_p3;
    sc_signal< sc_lv<10> > zext_ln203_2_fu_363_p1;
    sc_signal< sc_lv<12> > zext_ln1494_9_fu_387_p1;
    sc_signal< sc_lv<12> > add_ln1494_5_fu_391_p2;
    sc_signal< sc_lv<12> > zext_ln1494_12_fu_412_p1;
    sc_signal< sc_lv<12> > add_ln1494_7_fu_416_p2;
    sc_signal< sc_lv<1> > grp_fu_176_p2;
    sc_signal< sc_lv<4> > select_ln167_fu_445_p3;
    sc_signal< sc_lv<64> > zext_ln167_fu_452_p1;
    sc_signal< sc_lv<4> > select_ln168_fu_461_p3;
    sc_signal< sc_lv<64> > zext_ln168_fu_468_p1;
    sc_signal< sc_lv<3> > tmp_12_fu_477_p4;
    sc_signal< sc_lv<10> > zext_ln203_3_fu_487_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1494_1_fu_256_p2();
    void thread_add_ln1494_2_fu_285_p2();
    void thread_add_ln1494_3_fu_305_p2();
    void thread_add_ln1494_4_fu_334_p2();
    void thread_add_ln1494_5_fu_391_p2();
    void thread_add_ln1494_6_fu_401_p2();
    void thread_add_ln1494_7_fu_416_p2();
    void thread_add_ln1494_8_fu_426_p2();
    void thread_add_ln1494_fu_222_p2();
    void thread_add_ln203_1_fu_358_p2();
    void thread_add_ln203_2_fu_375_p2();
    void thread_add_ln203_3_fu_456_p2();
    void thread_add_ln203_4_fu_472_p2();
    void thread_add_ln203_5_fu_491_p2();
    void thread_add_ln203_fu_240_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_176_p2();
    void thread_i_fu_431_p2();
    void thread_icmp_ln162_fu_182_p2();
    void thread_icmp_ln164_fu_246_p2();
    void thread_icmp_ln166_fu_381_p2();
    void thread_in_d_fu_188_p2();
    void thread_j_fu_496_p2();
    void thread_layer4_V_address0();
    void thread_layer4_V_address1();
    void thread_layer4_V_ce0();
    void thread_layer4_V_ce1();
    void thread_layer5_V_address0();
    void thread_layer5_V_ce0();
    void thread_layer5_V_d0();
    void thread_layer5_V_we0();
    void thread_or_ln167_fu_406_p2();
    void thread_or_ln168_fu_295_p2();
    void thread_p_shl3_cast_fu_367_p3();
    void thread_select_ln167_fu_445_p3();
    void thread_select_ln168_fu_461_p3();
    void thread_select_ln203_fu_502_p3();
    void thread_tmp_10_fu_322_p3();
    void thread_tmp_11_fu_344_p4();
    void thread_tmp_12_fu_477_p4();
    void thread_tmp_1_fu_198_p3();
    void thread_tmp_2_fu_210_p3();
    void thread_tmp_3_fu_228_p3();
    void thread_tmp_7_fu_261_p3();
    void thread_tmp_8_fu_273_p3();
    void thread_tmp_9_fu_310_p3();
    void thread_trunc_ln168_fu_291_p1();
    void thread_trunc_ln169_fu_340_p1();
    void thread_zext_ln1494_10_fu_396_p1();
    void thread_zext_ln1494_11_fu_437_p1();
    void thread_zext_ln1494_12_fu_412_p1();
    void thread_zext_ln1494_13_fu_421_p1();
    void thread_zext_ln1494_14_fu_441_p1();
    void thread_zext_ln1494_1_fu_206_p1();
    void thread_zext_ln1494_2_fu_218_p1();
    void thread_zext_ln1494_3_fu_252_p1();
    void thread_zext_ln1494_4_fu_269_p1();
    void thread_zext_ln1494_5_fu_281_p1();
    void thread_zext_ln1494_6_fu_301_p1();
    void thread_zext_ln1494_7_fu_318_p1();
    void thread_zext_ln1494_8_fu_330_p1();
    void thread_zext_ln1494_9_fu_387_p1();
    void thread_zext_ln1494_fu_194_p1();
    void thread_zext_ln167_fu_452_p1();
    void thread_zext_ln168_fu_468_p1();
    void thread_zext_ln203_1_fu_354_p1();
    void thread_zext_ln203_2_fu_363_p1();
    void thread_zext_ln203_3_fu_487_p1();
    void thread_zext_ln203_4_fu_508_p1();
    void thread_zext_ln203_fu_236_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
