// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Flatten_Layer_HH_
#define _Flatten_Layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Flatten_Layer : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > layer5_V_address0;
    sc_out< sc_logic > layer5_V_ce0;
    sc_in< sc_lv<12> > layer5_V_q0;
    sc_out< sc_lv<9> > flatten1_V_address0;
    sc_out< sc_logic > flatten1_V_ce0;
    sc_out< sc_logic > flatten1_V_we0;
    sc_out< sc_lv<12> > flatten1_V_d0;


    // Module declarations
    Flatten_Layer(sc_module_name name);
    SC_HAS_PROCESS(Flatten_Layer);

    ~Flatten_Layer();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_150_p2;
    sc_signal< sc_lv<3> > i_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > index_fu_156_p2;
    sc_signal< sc_lv<9> > index_reg_273;
    sc_signal< sc_lv<1> > icmp_ln214_fu_144_p2;
    sc_signal< sc_lv<8> > zext_ln216_fu_162_p1;
    sc_signal< sc_lv<8> > zext_ln216_reg_278;
    sc_signal< sc_lv<3> > j_fu_172_p2;
    sc_signal< sc_lv<3> > j_reg_286;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > add_ln220_fu_178_p2;
    sc_signal< sc_lv<9> > add_ln220_reg_291;
    sc_signal< sc_lv<1> > icmp_ln216_fu_166_p2;
    sc_signal< sc_lv<10> > zext_ln218_fu_184_p1;
    sc_signal< sc_lv<10> > zext_ln218_reg_296;
    sc_signal< sc_lv<5> > t_fu_194_p2;
    sc_signal< sc_lv<5> > t_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > add_ln203_11_fu_245_p2;
    sc_signal< sc_lv<10> > add_ln203_11_reg_309;
    sc_signal< sc_lv<1> > icmp_ln218_fu_188_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > add_ln220_1_fu_259_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > i_0_reg_77;
    sc_signal< sc_lv<9> > index_0_reg_88;
    sc_signal< sc_lv<9> > index_1_reg_100;
    sc_signal< sc_lv<3> > j_0_reg_111;
    sc_signal< sc_lv<9> > index_2_reg_122;
    sc_signal< sc_lv<5> > t_0_reg_133;
    sc_signal< sc_lv<64> > zext_ln203_12_fu_250_p1;
    sc_signal< sc_lv<64> > zext_ln219_fu_254_p1;
    sc_signal< sc_lv<7> > tmp_s_fu_204_p3;
    sc_signal< sc_lv<8> > zext_ln203_fu_200_p1;
    sc_signal< sc_lv<8> > zext_ln203_10_fu_212_p1;
    sc_signal< sc_lv<8> > add_ln203_fu_216_p2;
    sc_signal< sc_lv<8> > add_ln203_9_fu_222_p2;
    sc_signal< sc_lv<10> > zext_ln203_11_fu_227_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_231_p3;
    sc_signal< sc_lv<10> > add_ln203_10_fu_239_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_50;
    static const sc_lv<9> ap_const_lv9_10;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln203_10_fu_239_p2();
    void thread_add_ln203_11_fu_245_p2();
    void thread_add_ln203_9_fu_222_p2();
    void thread_add_ln203_fu_216_p2();
    void thread_add_ln220_1_fu_259_p2();
    void thread_add_ln220_fu_178_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_flatten1_V_address0();
    void thread_flatten1_V_ce0();
    void thread_flatten1_V_d0();
    void thread_flatten1_V_we0();
    void thread_i_fu_150_p2();
    void thread_icmp_ln214_fu_144_p2();
    void thread_icmp_ln216_fu_166_p2();
    void thread_icmp_ln218_fu_188_p2();
    void thread_index_fu_156_p2();
    void thread_j_fu_172_p2();
    void thread_layer5_V_address0();
    void thread_layer5_V_ce0();
    void thread_p_shl_cast_fu_231_p3();
    void thread_t_fu_194_p2();
    void thread_tmp_s_fu_204_p3();
    void thread_zext_ln203_10_fu_212_p1();
    void thread_zext_ln203_11_fu_227_p1();
    void thread_zext_ln203_12_fu_250_p1();
    void thread_zext_ln203_fu_200_p1();
    void thread_zext_ln216_fu_162_p1();
    void thread_zext_ln218_fu_184_p1();
    void thread_zext_ln219_fu_254_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
