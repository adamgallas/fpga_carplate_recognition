// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Fullc1_Cal_HH_
#define _Fullc1_Cal_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "my_tanh.h"
#include "Lenet_HLS_mul_mulibs.h"
#include "Fullc1_Cal_bias1_V.h"
#include "Fullc1_Cal_weighthbi.h"

namespace ap_rtl {

struct Fullc1_Cal : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > flatten2_V_address0;
    sc_out< sc_logic > flatten2_V_ce0;
    sc_out< sc_logic > flatten2_V_we0;
    sc_out< sc_lv<12> > flatten2_V_d0;
    sc_in< sc_lv<12> > flatten2_V_q0;
    sc_out< sc_lv<9> > flatten1_V_address0;
    sc_out< sc_logic > flatten1_V_ce0;
    sc_in< sc_lv<12> > flatten1_V_q0;


    // Module declarations
    Fullc1_Cal(sc_module_name name);
    SC_HAS_PROCESS(Fullc1_Cal);

    ~Fullc1_Cal();

    sc_trace_file* mVcdFile;

    Fullc1_Cal_bias1_V* bias1_V_U;
    Fullc1_Cal_weighthbi* weight1_V_U;
    my_tanh* grp_my_tanh_fu_165;
    Lenet_HLS_mul_mulibs<1,1,12,6,19>* Lenet_HLS_mul_mulibs_U23;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > bias1_V_address0;
    sc_signal< sc_logic > bias1_V_ce0;
    sc_signal< sc_lv<3> > bias1_V_q0;
    sc_signal< sc_lv<16> > weight1_V_address0;
    sc_signal< sc_logic > weight1_V_ce0;
    sc_signal< sc_lv<6> > weight1_V_q0;
    sc_signal< sc_lv<12> > reg_175;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > add_ln177_fu_180_p2;
    sc_signal< sc_lv<16> > add_ln177_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > i_fu_192_p2;
    sc_signal< sc_lv<7> > i_reg_491;
    sc_signal< sc_lv<1> > icmp_ln177_fu_186_p2;
    sc_signal< sc_lv<7> > flatten2_V_addr_reg_501;
    sc_signal< sc_lv<9> > j_fu_215_p2;
    sc_signal< sc_lv<9> > j_reg_509;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln180_fu_209_p2;
    sc_signal< sc_lv<6> > weight1_V_load_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > flatten1_V_load_reg_529;
    sc_signal< sc_lv<19> > r_V_fu_475_p2;
    sc_signal< sc_lv<19> > r_V_reg_534;
    sc_signal< sc_lv<18> > trunc_ln1192_fu_247_p1;
    sc_signal< sc_lv<18> > trunc_ln1192_reg_540;
    sc_signal< sc_lv<5> > trunc_ln718_fu_250_p1;
    sc_signal< sc_lv<5> > trunc_ln718_reg_545;
    sc_signal< sc_lv<1> > overflow_fu_434_p2;
    sc_signal< sc_lv<1> > overflow_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > underflow_fu_458_p2;
    sc_signal< sc_lv<1> > underflow_reg_554;
    sc_signal< sc_lv<1> > or_ln340_fu_464_p2;
    sc_signal< sc_lv<1> > or_ln340_reg_558;
    sc_signal< sc_logic > grp_my_tanh_fu_165_ap_start;
    sc_signal< sc_logic > grp_my_tanh_fu_165_ap_done;
    sc_signal< sc_logic > grp_my_tanh_fu_165_ap_idle;
    sc_signal< sc_logic > grp_my_tanh_fu_165_ap_ready;
    sc_signal< sc_lv<8> > grp_my_tanh_fu_165_ap_return;
    sc_signal< sc_lv<7> > i_0_reg_131;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > phi_mul_reg_142;
    sc_signal< sc_lv<9> > j_0_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_my_tanh_fu_165_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln178_fu_198_p1;
    sc_signal< sc_lv<64> > zext_ln1116_2_fu_236_p1;
    sc_signal< sc_lv<64> > zext_ln181_fu_221_p1;
    sc_signal< sc_lv<12> > sext_ln203_fu_204_p1;
    sc_signal< sc_lv<12> > p_Val2_14_fu_329_p2;
    sc_signal< sc_lv<12> > sext_ln203_1_fu_470_p1;
    sc_signal< sc_lv<16> > zext_ln1116_fu_226_p1;
    sc_signal< sc_lv<16> > add_ln1116_fu_230_p2;
    sc_signal< sc_lv<18> > lhs_V_fu_253_p3;
    sc_signal< sc_lv<19> > sext_ln728_fu_261_p1;
    sc_signal< sc_lv<19> > ret_V_fu_265_p2;
    sc_signal< sc_lv<18> > add_ln1192_2_fu_270_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_275_p3;
    sc_signal< sc_lv<1> > r_1_fu_293_p2;
    sc_signal< sc_lv<1> > tmp_38_fu_312_p3;
    sc_signal< sc_lv<1> > r_fu_306_p2;
    sc_signal< sc_lv<1> > and_ln415_fu_319_p2;
    sc_signal< sc_lv<12> > zext_ln415_fu_325_p1;
    sc_signal< sc_lv<12> > p_Val2_13_fu_283_p4;
    sc_signal< sc_lv<1> > tmp_39_fu_336_p3;
    sc_signal< sc_lv<1> > p_Result_20_fu_298_p3;
    sc_signal< sc_lv<1> > xor_ln416_3_fu_344_p2;
    sc_signal< sc_lv<1> > tmp_42_fu_372_p3;
    sc_signal< sc_lv<1> > xor_ln416_4_fu_386_p2;
    sc_signal< sc_lv<1> > or_ln416_2_fu_392_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_380_p2;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_364_p3;
    sc_signal< sc_lv<1> > or_ln416_fu_398_p2;
    sc_signal< sc_lv<1> > carry_2_fu_350_p2;
    sc_signal< sc_lv<1> > p_Result_21_fu_356_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_416_p2;
    sc_signal< sc_lv<1> > or_ln785_fu_422_p2;
    sc_signal< sc_lv<1> > xor_ln785_2_fu_428_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_404_p2;
    sc_signal< sc_lv<1> > and_ln781_fu_410_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_440_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_446_p2;
    sc_signal< sc_lv<1> > xor_ln786_fu_452_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_7FF;
    static const sc_lv<16> ap_const_lv16_190;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range2_all_ones_fu_364_p3();
    void thread_add_ln1116_fu_230_p2();
    void thread_add_ln1192_2_fu_270_p2();
    void thread_add_ln177_fu_180_p2();
    void thread_and_ln415_fu_319_p2();
    void thread_and_ln781_fu_410_p2();
    void thread_and_ln786_fu_440_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias1_V_address0();
    void thread_bias1_V_ce0();
    void thread_carry_2_fu_350_p2();
    void thread_deleted_ones_fu_404_p2();
    void thread_flatten1_V_address0();
    void thread_flatten1_V_ce0();
    void thread_flatten2_V_address0();
    void thread_flatten2_V_ce0();
    void thread_flatten2_V_d0();
    void thread_flatten2_V_we0();
    void thread_grp_my_tanh_fu_165_ap_start();
    void thread_i_fu_192_p2();
    void thread_icmp_ln177_fu_186_p2();
    void thread_icmp_ln180_fu_209_p2();
    void thread_j_fu_215_p2();
    void thread_lhs_V_fu_253_p3();
    void thread_or_ln340_fu_464_p2();
    void thread_or_ln416_2_fu_392_p2();
    void thread_or_ln416_fu_398_p2();
    void thread_or_ln785_fu_422_p2();
    void thread_or_ln786_fu_446_p2();
    void thread_overflow_fu_434_p2();
    void thread_p_Result_20_fu_298_p3();
    void thread_p_Result_21_fu_356_p3();
    void thread_p_Result_s_fu_275_p3();
    void thread_p_Val2_13_fu_283_p4();
    void thread_p_Val2_14_fu_329_p2();
    void thread_r_1_fu_293_p2();
    void thread_r_fu_306_p2();
    void thread_ret_V_fu_265_p2();
    void thread_sext_ln203_1_fu_470_p1();
    void thread_sext_ln203_fu_204_p1();
    void thread_sext_ln728_fu_261_p1();
    void thread_tmp_38_fu_312_p3();
    void thread_tmp_39_fu_336_p3();
    void thread_tmp_42_fu_372_p3();
    void thread_trunc_ln1192_fu_247_p1();
    void thread_trunc_ln718_fu_250_p1();
    void thread_underflow_fu_458_p2();
    void thread_weight1_V_address0();
    void thread_weight1_V_ce0();
    void thread_xor_ln416_3_fu_344_p2();
    void thread_xor_ln416_4_fu_386_p2();
    void thread_xor_ln779_fu_380_p2();
    void thread_xor_ln785_2_fu_428_p2();
    void thread_xor_ln785_fu_416_p2();
    void thread_xor_ln786_fu_452_p2();
    void thread_zext_ln1116_2_fu_236_p1();
    void thread_zext_ln1116_fu_226_p1();
    void thread_zext_ln178_fu_198_p1();
    void thread_zext_ln181_fu_221_p1();
    void thread_zext_ln415_fu_325_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
