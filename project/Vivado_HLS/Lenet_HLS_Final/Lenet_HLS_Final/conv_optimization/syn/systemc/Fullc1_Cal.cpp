// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Fullc1_Cal.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Fullc1_Cal::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Fullc1_Cal::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state1 = "1";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state2 = "10";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state3 = "100";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state4 = "1000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state5 = "10000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state6 = "100000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> Fullc1_Cal::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_5 = "101";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_8 = "1000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_1 = "1";
const sc_lv<1> Fullc1_Cal::ap_const_lv1_0 = "0";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_3 = "11";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_4 = "100";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_6 = "110";
const sc_lv<7> Fullc1_Cal::ap_const_lv7_0 = "0000000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_9 = "1001";
const sc_lv<16> Fullc1_Cal::ap_const_lv16_0 = "0000000000000000";
const sc_lv<9> Fullc1_Cal::ap_const_lv9_0 = "000000000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_2 = "10";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_7 = "111";
const sc_lv<1> Fullc1_Cal::ap_const_lv1_1 = "1";
const sc_lv<12> Fullc1_Cal::ap_const_lv12_800 = "100000000000";
const sc_lv<12> Fullc1_Cal::ap_const_lv12_7FF = "11111111111";
const sc_lv<16> Fullc1_Cal::ap_const_lv16_190 = "110010000";
const sc_lv<7> Fullc1_Cal::ap_const_lv7_54 = "1010100";
const sc_lv<7> Fullc1_Cal::ap_const_lv7_1 = "1";
const sc_lv<9> Fullc1_Cal::ap_const_lv9_190 = "110010000";
const sc_lv<9> Fullc1_Cal::ap_const_lv9_1 = "1";
const sc_lv<6> Fullc1_Cal::ap_const_lv6_0 = "000000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_12 = "10010";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_11 = "10001";
const sc_lv<5> Fullc1_Cal::ap_const_lv5_0 = "00000";
const sc_lv<32> Fullc1_Cal::ap_const_lv32_B = "1011";
const bool Fullc1_Cal::ap_const_boolean_1 = true;

Fullc1_Cal::Fullc1_Cal(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bias1_V_U = new Fullc1_Cal_bias1_V("bias1_V_U");
    bias1_V_U->clk(ap_clk);
    bias1_V_U->reset(ap_rst);
    bias1_V_U->address0(bias1_V_address0);
    bias1_V_U->ce0(bias1_V_ce0);
    bias1_V_U->q0(bias1_V_q0);
    weight1_V_U = new Fullc1_Cal_weighthbi("weight1_V_U");
    weight1_V_U->clk(ap_clk);
    weight1_V_U->reset(ap_rst);
    weight1_V_U->address0(weight1_V_address0);
    weight1_V_U->ce0(weight1_V_ce0);
    weight1_V_U->q0(weight1_V_q0);
    grp_my_tanh_fu_165 = new my_tanh("grp_my_tanh_fu_165");
    grp_my_tanh_fu_165->ap_clk(ap_clk);
    grp_my_tanh_fu_165->ap_rst(ap_rst);
    grp_my_tanh_fu_165->ap_start(grp_my_tanh_fu_165_ap_start);
    grp_my_tanh_fu_165->ap_done(grp_my_tanh_fu_165_ap_done);
    grp_my_tanh_fu_165->ap_idle(grp_my_tanh_fu_165_ap_idle);
    grp_my_tanh_fu_165->ap_ready(grp_my_tanh_fu_165_ap_ready);
    grp_my_tanh_fu_165->x_V(reg_175);
    grp_my_tanh_fu_165->ap_return(grp_my_tanh_fu_165_ap_return);
    Lenet_HLS_mul_mulibs_U23 = new Lenet_HLS_mul_mulibs<1,1,12,6,19>("Lenet_HLS_mul_mulibs_U23");
    Lenet_HLS_mul_mulibs_U23->din0(flatten1_V_load_reg_529);
    Lenet_HLS_mul_mulibs_U23->din1(weight1_V_load_reg_524);
    Lenet_HLS_mul_mulibs_U23->dout(r_V_fu_475_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range2_all_ones_fu_364_p3);
    sensitive << ( ret_V_fu_265_p2 );

    SC_METHOD(thread_add_ln1116_fu_230_p2);
    sensitive << ( phi_mul_reg_142 );
    sensitive << ( zext_ln1116_fu_226_p1 );

    SC_METHOD(thread_add_ln1192_2_fu_270_p2);
    sensitive << ( trunc_ln1192_reg_540 );
    sensitive << ( lhs_V_fu_253_p3 );

    SC_METHOD(thread_add_ln177_fu_180_p2);
    sensitive << ( phi_mul_reg_142 );

    SC_METHOD(thread_and_ln415_fu_319_p2);
    sensitive << ( tmp_38_fu_312_p3 );
    sensitive << ( r_fu_306_p2 );

    SC_METHOD(thread_and_ln781_fu_410_p2);
    sensitive << ( Range2_all_ones_fu_364_p3 );
    sensitive << ( carry_2_fu_350_p2 );

    SC_METHOD(thread_and_ln786_fu_440_p2);
    sensitive << ( p_Result_21_fu_356_p3 );
    sensitive << ( deleted_ones_fu_404_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln177_fu_186_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln177_fu_186_p2 );

    SC_METHOD(thread_bias1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln178_fu_198_p1 );

    SC_METHOD(thread_bias1_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_carry_2_fu_350_p2);
    sensitive << ( p_Result_20_fu_298_p3 );
    sensitive << ( xor_ln416_3_fu_344_p2 );

    SC_METHOD(thread_deleted_ones_fu_404_p2);
    sensitive << ( Range2_all_ones_fu_364_p3 );
    sensitive << ( or_ln416_fu_398_p2 );

    SC_METHOD(thread_flatten1_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln181_fu_221_p1 );

    SC_METHOD(thread_flatten1_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_flatten2_V_address0);
    sensitive << ( flatten2_V_addr_reg_501 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( overflow_reg_550 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_554 );
    sensitive << ( or_ln340_reg_558 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_flatten2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( overflow_reg_550 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_554 );
    sensitive << ( or_ln340_reg_558 );
    sensitive << ( grp_my_tanh_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_flatten2_V_d0);
    sensitive << ( overflow_reg_550 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_554 );
    sensitive << ( or_ln340_reg_558 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln203_fu_204_p1 );
    sensitive << ( p_Val2_14_fu_329_p2 );
    sensitive << ( sext_ln203_1_fu_470_p1 );

    SC_METHOD(thread_flatten2_V_we0);
    sensitive << ( overflow_reg_550 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_554 );
    sensitive << ( or_ln340_reg_558 );
    sensitive << ( grp_my_tanh_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_my_tanh_fu_165_ap_start);
    sensitive << ( grp_my_tanh_fu_165_ap_start_reg );

    SC_METHOD(thread_i_fu_192_p2);
    sensitive << ( i_0_reg_131 );

    SC_METHOD(thread_icmp_ln177_fu_186_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_131 );

    SC_METHOD(thread_icmp_ln180_fu_209_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_j_fu_215_p2);
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_lhs_V_fu_253_p3);
    sensitive << ( reg_175 );

    SC_METHOD(thread_or_ln340_fu_464_p2);
    sensitive << ( overflow_fu_434_p2 );
    sensitive << ( underflow_fu_458_p2 );

    SC_METHOD(thread_or_ln416_2_fu_392_p2);
    sensitive << ( tmp_39_fu_336_p3 );
    sensitive << ( xor_ln416_4_fu_386_p2 );

    SC_METHOD(thread_or_ln416_fu_398_p2);
    sensitive << ( or_ln416_2_fu_392_p2 );
    sensitive << ( xor_ln779_fu_380_p2 );

    SC_METHOD(thread_or_ln785_fu_422_p2);
    sensitive << ( p_Result_21_fu_356_p3 );
    sensitive << ( xor_ln785_fu_416_p2 );

    SC_METHOD(thread_or_ln786_fu_446_p2);
    sensitive << ( and_ln781_fu_410_p2 );
    sensitive << ( and_ln786_fu_440_p2 );

    SC_METHOD(thread_overflow_fu_434_p2);
    sensitive << ( or_ln785_fu_422_p2 );
    sensitive << ( xor_ln785_2_fu_428_p2 );

    SC_METHOD(thread_p_Result_20_fu_298_p3);
    sensitive << ( add_ln1192_2_fu_270_p2 );

    SC_METHOD(thread_p_Result_21_fu_356_p3);
    sensitive << ( p_Val2_14_fu_329_p2 );

    SC_METHOD(thread_p_Result_s_fu_275_p3);
    sensitive << ( ret_V_fu_265_p2 );

    SC_METHOD(thread_p_Val2_13_fu_283_p4);
    sensitive << ( add_ln1192_2_fu_270_p2 );

    SC_METHOD(thread_p_Val2_14_fu_329_p2);
    sensitive << ( zext_ln415_fu_325_p1 );
    sensitive << ( p_Val2_13_fu_283_p4 );

    SC_METHOD(thread_r_1_fu_293_p2);
    sensitive << ( trunc_ln718_reg_545 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_r_fu_306_p2);
    sensitive << ( p_Result_s_fu_275_p3 );
    sensitive << ( r_1_fu_293_p2 );

    SC_METHOD(thread_ret_V_fu_265_p2);
    sensitive << ( r_V_reg_534 );
    sensitive << ( sext_ln728_fu_261_p1 );

    SC_METHOD(thread_sext_ln203_1_fu_470_p1);
    sensitive << ( grp_my_tanh_fu_165_ap_return );

    SC_METHOD(thread_sext_ln203_fu_204_p1);
    sensitive << ( bias1_V_q0 );

    SC_METHOD(thread_sext_ln728_fu_261_p1);
    sensitive << ( lhs_V_fu_253_p3 );

    SC_METHOD(thread_tmp_38_fu_312_p3);
    sensitive << ( r_V_reg_534 );

    SC_METHOD(thread_tmp_39_fu_336_p3);
    sensitive << ( p_Val2_14_fu_329_p2 );

    SC_METHOD(thread_tmp_42_fu_372_p3);
    sensitive << ( ret_V_fu_265_p2 );

    SC_METHOD(thread_trunc_ln1192_fu_247_p1);
    sensitive << ( r_V_fu_475_p2 );

    SC_METHOD(thread_trunc_ln718_fu_250_p1);
    sensitive << ( r_V_fu_475_p2 );

    SC_METHOD(thread_underflow_fu_458_p2);
    sensitive << ( p_Result_s_fu_275_p3 );
    sensitive << ( xor_ln786_fu_452_p2 );

    SC_METHOD(thread_weight1_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln1116_2_fu_236_p1 );

    SC_METHOD(thread_weight1_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xor_ln416_3_fu_344_p2);
    sensitive << ( tmp_39_fu_336_p3 );

    SC_METHOD(thread_xor_ln416_4_fu_386_p2);
    sensitive << ( p_Result_20_fu_298_p3 );

    SC_METHOD(thread_xor_ln779_fu_380_p2);
    sensitive << ( tmp_42_fu_372_p3 );

    SC_METHOD(thread_xor_ln785_2_fu_428_p2);
    sensitive << ( p_Result_s_fu_275_p3 );

    SC_METHOD(thread_xor_ln785_fu_416_p2);
    sensitive << ( Range2_all_ones_fu_364_p3 );
    sensitive << ( carry_2_fu_350_p2 );

    SC_METHOD(thread_xor_ln786_fu_452_p2);
    sensitive << ( or_ln786_fu_446_p2 );

    SC_METHOD(thread_zext_ln1116_2_fu_236_p1);
    sensitive << ( add_ln1116_fu_230_p2 );

    SC_METHOD(thread_zext_ln1116_fu_226_p1);
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_zext_ln178_fu_198_p1);
    sensitive << ( i_0_reg_131 );

    SC_METHOD(thread_zext_ln181_fu_221_p1);
    sensitive << ( j_0_reg_154 );

    SC_METHOD(thread_zext_ln415_fu_325_p1);
    sensitive << ( and_ln415_fu_319_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln177_fu_186_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln180_fu_209_p2 );
    sensitive << ( grp_my_tanh_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    ap_CS_fsm = "0000000001";
    grp_my_tanh_fu_165_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Fullc1_Cal_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flatten2_V_address0, "(port)flatten2_V_address0");
    sc_trace(mVcdFile, flatten2_V_ce0, "(port)flatten2_V_ce0");
    sc_trace(mVcdFile, flatten2_V_we0, "(port)flatten2_V_we0");
    sc_trace(mVcdFile, flatten2_V_d0, "(port)flatten2_V_d0");
    sc_trace(mVcdFile, flatten2_V_q0, "(port)flatten2_V_q0");
    sc_trace(mVcdFile, flatten1_V_address0, "(port)flatten1_V_address0");
    sc_trace(mVcdFile, flatten1_V_ce0, "(port)flatten1_V_ce0");
    sc_trace(mVcdFile, flatten1_V_q0, "(port)flatten1_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, bias1_V_address0, "bias1_V_address0");
    sc_trace(mVcdFile, bias1_V_ce0, "bias1_V_ce0");
    sc_trace(mVcdFile, bias1_V_q0, "bias1_V_q0");
    sc_trace(mVcdFile, weight1_V_address0, "weight1_V_address0");
    sc_trace(mVcdFile, weight1_V_ce0, "weight1_V_ce0");
    sc_trace(mVcdFile, weight1_V_q0, "weight1_V_q0");
    sc_trace(mVcdFile, reg_175, "reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln177_fu_180_p2, "add_ln177_fu_180_p2");
    sc_trace(mVcdFile, add_ln177_reg_483, "add_ln177_reg_483");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_192_p2, "i_fu_192_p2");
    sc_trace(mVcdFile, i_reg_491, "i_reg_491");
    sc_trace(mVcdFile, icmp_ln177_fu_186_p2, "icmp_ln177_fu_186_p2");
    sc_trace(mVcdFile, flatten2_V_addr_reg_501, "flatten2_V_addr_reg_501");
    sc_trace(mVcdFile, j_fu_215_p2, "j_fu_215_p2");
    sc_trace(mVcdFile, j_reg_509, "j_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln180_fu_209_p2, "icmp_ln180_fu_209_p2");
    sc_trace(mVcdFile, weight1_V_load_reg_524, "weight1_V_load_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, flatten1_V_load_reg_529, "flatten1_V_load_reg_529");
    sc_trace(mVcdFile, r_V_fu_475_p2, "r_V_fu_475_p2");
    sc_trace(mVcdFile, r_V_reg_534, "r_V_reg_534");
    sc_trace(mVcdFile, trunc_ln1192_fu_247_p1, "trunc_ln1192_fu_247_p1");
    sc_trace(mVcdFile, trunc_ln1192_reg_540, "trunc_ln1192_reg_540");
    sc_trace(mVcdFile, trunc_ln718_fu_250_p1, "trunc_ln718_fu_250_p1");
    sc_trace(mVcdFile, trunc_ln718_reg_545, "trunc_ln718_reg_545");
    sc_trace(mVcdFile, overflow_fu_434_p2, "overflow_fu_434_p2");
    sc_trace(mVcdFile, overflow_reg_550, "overflow_reg_550");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, underflow_fu_458_p2, "underflow_fu_458_p2");
    sc_trace(mVcdFile, underflow_reg_554, "underflow_reg_554");
    sc_trace(mVcdFile, or_ln340_fu_464_p2, "or_ln340_fu_464_p2");
    sc_trace(mVcdFile, or_ln340_reg_558, "or_ln340_reg_558");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_start, "grp_my_tanh_fu_165_ap_start");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_done, "grp_my_tanh_fu_165_ap_done");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_idle, "grp_my_tanh_fu_165_ap_idle");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_ready, "grp_my_tanh_fu_165_ap_ready");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_return, "grp_my_tanh_fu_165_ap_return");
    sc_trace(mVcdFile, i_0_reg_131, "i_0_reg_131");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, phi_mul_reg_142, "phi_mul_reg_142");
    sc_trace(mVcdFile, j_0_reg_154, "j_0_reg_154");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_my_tanh_fu_165_ap_start_reg, "grp_my_tanh_fu_165_ap_start_reg");
    sc_trace(mVcdFile, zext_ln178_fu_198_p1, "zext_ln178_fu_198_p1");
    sc_trace(mVcdFile, zext_ln1116_2_fu_236_p1, "zext_ln1116_2_fu_236_p1");
    sc_trace(mVcdFile, zext_ln181_fu_221_p1, "zext_ln181_fu_221_p1");
    sc_trace(mVcdFile, sext_ln203_fu_204_p1, "sext_ln203_fu_204_p1");
    sc_trace(mVcdFile, p_Val2_14_fu_329_p2, "p_Val2_14_fu_329_p2");
    sc_trace(mVcdFile, sext_ln203_1_fu_470_p1, "sext_ln203_1_fu_470_p1");
    sc_trace(mVcdFile, zext_ln1116_fu_226_p1, "zext_ln1116_fu_226_p1");
    sc_trace(mVcdFile, add_ln1116_fu_230_p2, "add_ln1116_fu_230_p2");
    sc_trace(mVcdFile, lhs_V_fu_253_p3, "lhs_V_fu_253_p3");
    sc_trace(mVcdFile, sext_ln728_fu_261_p1, "sext_ln728_fu_261_p1");
    sc_trace(mVcdFile, ret_V_fu_265_p2, "ret_V_fu_265_p2");
    sc_trace(mVcdFile, add_ln1192_2_fu_270_p2, "add_ln1192_2_fu_270_p2");
    sc_trace(mVcdFile, p_Result_s_fu_275_p3, "p_Result_s_fu_275_p3");
    sc_trace(mVcdFile, r_1_fu_293_p2, "r_1_fu_293_p2");
    sc_trace(mVcdFile, tmp_38_fu_312_p3, "tmp_38_fu_312_p3");
    sc_trace(mVcdFile, r_fu_306_p2, "r_fu_306_p2");
    sc_trace(mVcdFile, and_ln415_fu_319_p2, "and_ln415_fu_319_p2");
    sc_trace(mVcdFile, zext_ln415_fu_325_p1, "zext_ln415_fu_325_p1");
    sc_trace(mVcdFile, p_Val2_13_fu_283_p4, "p_Val2_13_fu_283_p4");
    sc_trace(mVcdFile, tmp_39_fu_336_p3, "tmp_39_fu_336_p3");
    sc_trace(mVcdFile, p_Result_20_fu_298_p3, "p_Result_20_fu_298_p3");
    sc_trace(mVcdFile, xor_ln416_3_fu_344_p2, "xor_ln416_3_fu_344_p2");
    sc_trace(mVcdFile, tmp_42_fu_372_p3, "tmp_42_fu_372_p3");
    sc_trace(mVcdFile, xor_ln416_4_fu_386_p2, "xor_ln416_4_fu_386_p2");
    sc_trace(mVcdFile, or_ln416_2_fu_392_p2, "or_ln416_2_fu_392_p2");
    sc_trace(mVcdFile, xor_ln779_fu_380_p2, "xor_ln779_fu_380_p2");
    sc_trace(mVcdFile, Range2_all_ones_fu_364_p3, "Range2_all_ones_fu_364_p3");
    sc_trace(mVcdFile, or_ln416_fu_398_p2, "or_ln416_fu_398_p2");
    sc_trace(mVcdFile, carry_2_fu_350_p2, "carry_2_fu_350_p2");
    sc_trace(mVcdFile, p_Result_21_fu_356_p3, "p_Result_21_fu_356_p3");
    sc_trace(mVcdFile, xor_ln785_fu_416_p2, "xor_ln785_fu_416_p2");
    sc_trace(mVcdFile, or_ln785_fu_422_p2, "or_ln785_fu_422_p2");
    sc_trace(mVcdFile, xor_ln785_2_fu_428_p2, "xor_ln785_2_fu_428_p2");
    sc_trace(mVcdFile, deleted_ones_fu_404_p2, "deleted_ones_fu_404_p2");
    sc_trace(mVcdFile, and_ln781_fu_410_p2, "and_ln781_fu_410_p2");
    sc_trace(mVcdFile, and_ln786_fu_440_p2, "and_ln786_fu_440_p2");
    sc_trace(mVcdFile, or_ln786_fu_446_p2, "or_ln786_fu_446_p2");
    sc_trace(mVcdFile, xor_ln786_fu_452_p2, "xor_ln786_fu_452_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Fullc1_Cal::~Fullc1_Cal() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete bias1_V_U;
    delete weight1_V_U;
    delete grp_my_tanh_fu_165;
    delete Lenet_HLS_mul_mulibs_U23;
}

void Fullc1_Cal::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_my_tanh_fu_165_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_my_tanh_fu_165_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_my_tanh_fu_165_ap_ready.read())) {
            grp_my_tanh_fu_165_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_my_tanh_fu_165_ap_done.read(), ap_const_logic_1))) {
        i_0_reg_131 = i_reg_491.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_131 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_0_reg_154 = j_reg_509.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_reg_154 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_my_tanh_fu_165_ap_done.read(), ap_const_logic_1))) {
        phi_mul_reg_142 = add_ln177_reg_483.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_142 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln177_reg_483 = add_ln177_fu_180_p2.read();
        i_reg_491 = i_fu_192_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flatten1_V_load_reg_529 = flatten1_V_q0.read();
        weight1_V_load_reg_524 = weight1_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln177_fu_186_p2.read(), ap_const_lv1_0))) {
        flatten2_V_addr_reg_501 =  (sc_lv<7>) (zext_ln178_fu_198_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_509 = j_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        or_ln340_reg_558 = or_ln340_fu_464_p2.read();
        overflow_reg_550 = overflow_fu_434_p2.read();
        underflow_reg_554 = underflow_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_V_reg_534 = r_V_fu_475_p2.read();
        trunc_ln1192_reg_540 = trunc_ln1192_fu_247_p1.read();
        trunc_ln718_reg_545 = trunc_ln718_fu_250_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        reg_175 = flatten2_V_q0.read();
    }
}

void Fullc1_Cal::thread_Range2_all_ones_fu_364_p3() {
    Range2_all_ones_fu_364_p3 = ret_V_fu_265_p2.read().range(18, 18);
}

void Fullc1_Cal::thread_add_ln1116_fu_230_p2() {
    add_ln1116_fu_230_p2 = (!phi_mul_reg_142.read().is_01() || !zext_ln1116_fu_226_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_142.read()) + sc_biguint<16>(zext_ln1116_fu_226_p1.read()));
}

void Fullc1_Cal::thread_add_ln1192_2_fu_270_p2() {
    add_ln1192_2_fu_270_p2 = (!lhs_V_fu_253_p3.read().is_01() || !trunc_ln1192_reg_540.read().is_01())? sc_lv<18>(): (sc_bigint<18>(lhs_V_fu_253_p3.read()) + sc_biguint<18>(trunc_ln1192_reg_540.read()));
}

void Fullc1_Cal::thread_add_ln177_fu_180_p2() {
    add_ln177_fu_180_p2 = (!phi_mul_reg_142.read().is_01() || !ap_const_lv16_190.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_142.read()) + sc_biguint<16>(ap_const_lv16_190));
}

void Fullc1_Cal::thread_and_ln415_fu_319_p2() {
    and_ln415_fu_319_p2 = (tmp_38_fu_312_p3.read() & r_fu_306_p2.read());
}

void Fullc1_Cal::thread_and_ln781_fu_410_p2() {
    and_ln781_fu_410_p2 = (carry_2_fu_350_p2.read() & Range2_all_ones_fu_364_p3.read());
}

void Fullc1_Cal::thread_and_ln786_fu_440_p2() {
    and_ln786_fu_440_p2 = (p_Result_21_fu_356_p3.read() & deleted_ones_fu_404_p2.read());
}

void Fullc1_Cal::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Fullc1_Cal::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Fullc1_Cal::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Fullc1_Cal::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Fullc1_Cal::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Fullc1_Cal::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Fullc1_Cal::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Fullc1_Cal::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Fullc1_Cal::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Fullc1_Cal::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Fullc1_Cal::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln177_fu_186_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln177_fu_186_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_bias1_V_address0() {
    bias1_V_address0 =  (sc_lv<7>) (zext_ln178_fu_198_p1.read());
}

void Fullc1_Cal::thread_bias1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bias1_V_ce0 = ap_const_logic_1;
    } else {
        bias1_V_ce0 = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_carry_2_fu_350_p2() {
    carry_2_fu_350_p2 = (p_Result_20_fu_298_p3.read() & xor_ln416_3_fu_344_p2.read());
}

void Fullc1_Cal::thread_deleted_ones_fu_404_p2() {
    deleted_ones_fu_404_p2 = (Range2_all_ones_fu_364_p3.read() & or_ln416_fu_398_p2.read());
}

void Fullc1_Cal::thread_flatten1_V_address0() {
    flatten1_V_address0 =  (sc_lv<9>) (zext_ln181_fu_221_p1.read());
}

void Fullc1_Cal::thread_flatten1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        flatten1_V_ce0 = ap_const_logic_1;
    } else {
        flatten1_V_ce0 = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_flatten2_V_address0() {
    flatten2_V_address0 = flatten2_V_addr_reg_501.read();
}

void Fullc1_Cal::thread_flatten2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(grp_my_tanh_fu_165_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_550.read()) && 
          esl_seteq<1,1,1>(underflow_reg_554.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(overflow_reg_550.read(), ap_const_lv1_1)))) {
        flatten2_V_ce0 = ap_const_logic_1;
    } else {
        flatten2_V_ce0 = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_flatten2_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flatten2_V_d0 = sext_ln203_1_fu_470_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(overflow_reg_550.read(), ap_const_lv1_1))) {
        flatten2_V_d0 = ap_const_lv12_7FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_550.read()) && 
                esl_seteq<1,1,1>(underflow_reg_554.read(), ap_const_lv1_1))) {
        flatten2_V_d0 = ap_const_lv12_800;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        flatten2_V_d0 = p_Val2_14_fu_329_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        flatten2_V_d0 = sext_ln203_fu_204_p1.read();
    } else {
        flatten2_V_d0 = "XXXXXXXXXXXX";
    }
}

void Fullc1_Cal::thread_flatten2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(grp_my_tanh_fu_165_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_550.read()) && 
          esl_seteq<1,1,1>(underflow_reg_554.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_558.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(overflow_reg_550.read(), ap_const_lv1_1)))) {
        flatten2_V_we0 = ap_const_logic_1;
    } else {
        flatten2_V_we0 = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_grp_my_tanh_fu_165_ap_start() {
    grp_my_tanh_fu_165_ap_start = grp_my_tanh_fu_165_ap_start_reg.read();
}

void Fullc1_Cal::thread_i_fu_192_p2() {
    i_fu_192_p2 = (!i_0_reg_131.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_131.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Fullc1_Cal::thread_icmp_ln177_fu_186_p2() {
    icmp_ln177_fu_186_p2 = (!i_0_reg_131.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_131.read() == ap_const_lv7_54);
}

void Fullc1_Cal::thread_icmp_ln180_fu_209_p2() {
    icmp_ln180_fu_209_p2 = (!j_0_reg_154.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_154.read() == ap_const_lv9_190);
}

void Fullc1_Cal::thread_j_fu_215_p2() {
    j_fu_215_p2 = (!j_0_reg_154.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_0_reg_154.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Fullc1_Cal::thread_lhs_V_fu_253_p3() {
    lhs_V_fu_253_p3 = esl_concat<12,6>(reg_175.read(), ap_const_lv6_0);
}

void Fullc1_Cal::thread_or_ln340_fu_464_p2() {
    or_ln340_fu_464_p2 = (underflow_fu_458_p2.read() | overflow_fu_434_p2.read());
}

void Fullc1_Cal::thread_or_ln416_2_fu_392_p2() {
    or_ln416_2_fu_392_p2 = (tmp_39_fu_336_p3.read() | xor_ln416_4_fu_386_p2.read());
}

void Fullc1_Cal::thread_or_ln416_fu_398_p2() {
    or_ln416_fu_398_p2 = (or_ln416_2_fu_392_p2.read() | xor_ln779_fu_380_p2.read());
}

void Fullc1_Cal::thread_or_ln785_fu_422_p2() {
    or_ln785_fu_422_p2 = (p_Result_21_fu_356_p3.read() | xor_ln785_fu_416_p2.read());
}

void Fullc1_Cal::thread_or_ln786_fu_446_p2() {
    or_ln786_fu_446_p2 = (and_ln781_fu_410_p2.read() | and_ln786_fu_440_p2.read());
}

void Fullc1_Cal::thread_overflow_fu_434_p2() {
    overflow_fu_434_p2 = (or_ln785_fu_422_p2.read() & xor_ln785_2_fu_428_p2.read());
}

void Fullc1_Cal::thread_p_Result_20_fu_298_p3() {
    p_Result_20_fu_298_p3 = add_ln1192_2_fu_270_p2.read().range(17, 17);
}

void Fullc1_Cal::thread_p_Result_21_fu_356_p3() {
    p_Result_21_fu_356_p3 = p_Val2_14_fu_329_p2.read().range(11, 11);
}

void Fullc1_Cal::thread_p_Result_s_fu_275_p3() {
    p_Result_s_fu_275_p3 = ret_V_fu_265_p2.read().range(18, 18);
}

void Fullc1_Cal::thread_p_Val2_13_fu_283_p4() {
    p_Val2_13_fu_283_p4 = add_ln1192_2_fu_270_p2.read().range(17, 6);
}

void Fullc1_Cal::thread_p_Val2_14_fu_329_p2() {
    p_Val2_14_fu_329_p2 = (!zext_ln415_fu_325_p1.read().is_01() || !p_Val2_13_fu_283_p4.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln415_fu_325_p1.read()) + sc_biguint<12>(p_Val2_13_fu_283_p4.read()));
}

void Fullc1_Cal::thread_r_1_fu_293_p2() {
    r_1_fu_293_p2 = (!trunc_ln718_reg_545.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_reg_545.read() != ap_const_lv5_0);
}

void Fullc1_Cal::thread_r_fu_306_p2() {
    r_fu_306_p2 = (p_Result_s_fu_275_p3.read() | r_1_fu_293_p2.read());
}

void Fullc1_Cal::thread_ret_V_fu_265_p2() {
    ret_V_fu_265_p2 = (!r_V_reg_534.read().is_01() || !sext_ln728_fu_261_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(r_V_reg_534.read()) + sc_bigint<19>(sext_ln728_fu_261_p1.read()));
}

void Fullc1_Cal::thread_sext_ln203_1_fu_470_p1() {
    sext_ln203_1_fu_470_p1 = esl_sext<12,8>(grp_my_tanh_fu_165_ap_return.read());
}

void Fullc1_Cal::thread_sext_ln203_fu_204_p1() {
    sext_ln203_fu_204_p1 = esl_sext<12,3>(bias1_V_q0.read());
}

void Fullc1_Cal::thread_sext_ln728_fu_261_p1() {
    sext_ln728_fu_261_p1 = esl_sext<19,18>(lhs_V_fu_253_p3.read());
}

void Fullc1_Cal::thread_tmp_38_fu_312_p3() {
    tmp_38_fu_312_p3 = r_V_reg_534.read().range(5, 5);
}

void Fullc1_Cal::thread_tmp_39_fu_336_p3() {
    tmp_39_fu_336_p3 = p_Val2_14_fu_329_p2.read().range(11, 11);
}

void Fullc1_Cal::thread_tmp_42_fu_372_p3() {
    tmp_42_fu_372_p3 = ret_V_fu_265_p2.read().range(18, 18);
}

void Fullc1_Cal::thread_trunc_ln1192_fu_247_p1() {
    trunc_ln1192_fu_247_p1 = r_V_fu_475_p2.read().range(18-1, 0);
}

void Fullc1_Cal::thread_trunc_ln718_fu_250_p1() {
    trunc_ln718_fu_250_p1 = r_V_fu_475_p2.read().range(5-1, 0);
}

void Fullc1_Cal::thread_underflow_fu_458_p2() {
    underflow_fu_458_p2 = (p_Result_s_fu_275_p3.read() & xor_ln786_fu_452_p2.read());
}

void Fullc1_Cal::thread_weight1_V_address0() {
    weight1_V_address0 =  (sc_lv<16>) (zext_ln1116_2_fu_236_p1.read());
}

void Fullc1_Cal::thread_weight1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        weight1_V_ce0 = ap_const_logic_1;
    } else {
        weight1_V_ce0 = ap_const_logic_0;
    }
}

void Fullc1_Cal::thread_xor_ln416_3_fu_344_p2() {
    xor_ln416_3_fu_344_p2 = (tmp_39_fu_336_p3.read() ^ ap_const_lv1_1);
}

void Fullc1_Cal::thread_xor_ln416_4_fu_386_p2() {
    xor_ln416_4_fu_386_p2 = (p_Result_20_fu_298_p3.read() ^ ap_const_lv1_1);
}

void Fullc1_Cal::thread_xor_ln779_fu_380_p2() {
    xor_ln779_fu_380_p2 = (tmp_42_fu_372_p3.read() ^ ap_const_lv1_1);
}

void Fullc1_Cal::thread_xor_ln785_2_fu_428_p2() {
    xor_ln785_2_fu_428_p2 = (p_Result_s_fu_275_p3.read() ^ ap_const_lv1_1);
}

void Fullc1_Cal::thread_xor_ln785_fu_416_p2() {
    xor_ln785_fu_416_p2 = (Range2_all_ones_fu_364_p3.read() ^ carry_2_fu_350_p2.read());
}

void Fullc1_Cal::thread_xor_ln786_fu_452_p2() {
    xor_ln786_fu_452_p2 = (or_ln786_fu_446_p2.read() ^ ap_const_lv1_1);
}

void Fullc1_Cal::thread_zext_ln1116_2_fu_236_p1() {
    zext_ln1116_2_fu_236_p1 = esl_zext<64,16>(add_ln1116_fu_230_p2.read());
}

void Fullc1_Cal::thread_zext_ln1116_fu_226_p1() {
    zext_ln1116_fu_226_p1 = esl_zext<16,9>(j_0_reg_154.read());
}

void Fullc1_Cal::thread_zext_ln178_fu_198_p1() {
    zext_ln178_fu_198_p1 = esl_zext<64,7>(i_0_reg_131.read());
}

void Fullc1_Cal::thread_zext_ln181_fu_221_p1() {
    zext_ln181_fu_221_p1 = esl_zext<64,9>(j_0_reg_154.read());
}

void Fullc1_Cal::thread_zext_ln415_fu_325_p1() {
    zext_ln415_fu_325_p1 = esl_zext<12,1>(and_ln415_fu_319_p2.read());
}

void Fullc1_Cal::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln177_fu_186_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln180_fu_209_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_my_tanh_fu_165_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

