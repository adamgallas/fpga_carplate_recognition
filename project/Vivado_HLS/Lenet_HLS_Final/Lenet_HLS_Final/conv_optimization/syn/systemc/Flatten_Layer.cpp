// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Flatten_Layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Flatten_Layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Flatten_Layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state1 = "1";
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state2 = "10";
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state3 = "100";
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state4 = "1000";
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state5 = "10000";
const sc_lv<6> Flatten_Layer::ap_ST_fsm_state6 = "100000";
const sc_lv<32> Flatten_Layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Flatten_Layer::ap_const_lv32_1 = "1";
const sc_lv<1> Flatten_Layer::ap_const_lv1_0 = "0";
const sc_lv<32> Flatten_Layer::ap_const_lv32_2 = "10";
const sc_lv<32> Flatten_Layer::ap_const_lv32_3 = "11";
const sc_lv<32> Flatten_Layer::ap_const_lv32_4 = "100";
const sc_lv<32> Flatten_Layer::ap_const_lv32_5 = "101";
const sc_lv<3> Flatten_Layer::ap_const_lv3_0 = "000";
const sc_lv<1> Flatten_Layer::ap_const_lv1_1 = "1";
const sc_lv<9> Flatten_Layer::ap_const_lv9_0 = "000000000";
const sc_lv<5> Flatten_Layer::ap_const_lv5_0 = "00000";
const sc_lv<3> Flatten_Layer::ap_const_lv3_5 = "101";
const sc_lv<3> Flatten_Layer::ap_const_lv3_1 = "1";
const sc_lv<9> Flatten_Layer::ap_const_lv9_50 = "1010000";
const sc_lv<9> Flatten_Layer::ap_const_lv9_10 = "10000";
const sc_lv<5> Flatten_Layer::ap_const_lv5_10 = "10000";
const sc_lv<5> Flatten_Layer::ap_const_lv5_1 = "1";
const sc_lv<2> Flatten_Layer::ap_const_lv2_0 = "00";
const sc_lv<9> Flatten_Layer::ap_const_lv9_1 = "1";
const bool Flatten_Layer::ap_const_boolean_1 = true;

Flatten_Layer::Flatten_Layer(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_10_fu_239_p2);
    sensitive << ( zext_ln203_11_fu_227_p1 );
    sensitive << ( p_shl_cast_fu_231_p3 );

    SC_METHOD(thread_add_ln203_11_fu_245_p2);
    sensitive << ( zext_ln218_reg_296 );
    sensitive << ( add_ln203_10_fu_239_p2 );

    SC_METHOD(thread_add_ln203_9_fu_222_p2);
    sensitive << ( zext_ln216_reg_278 );
    sensitive << ( add_ln203_fu_216_p2 );

    SC_METHOD(thread_add_ln203_fu_216_p2);
    sensitive << ( zext_ln203_fu_200_p1 );
    sensitive << ( zext_ln203_10_fu_212_p1 );

    SC_METHOD(thread_add_ln220_1_fu_259_p2);
    sensitive << ( index_2_reg_122 );

    SC_METHOD(thread_add_ln220_fu_178_p2);
    sensitive << ( index_1_reg_100 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_144_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_144_p2 );

    SC_METHOD(thread_flatten1_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln219_fu_254_p1 );

    SC_METHOD(thread_flatten1_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_flatten1_V_d0);
    sensitive << ( layer5_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_flatten1_V_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_fu_150_p2);
    sensitive << ( i_0_reg_77 );

    SC_METHOD(thread_icmp_ln214_fu_144_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_77 );

    SC_METHOD(thread_icmp_ln216_fu_166_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_111 );

    SC_METHOD(thread_icmp_ln218_fu_188_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_0_reg_133 );

    SC_METHOD(thread_index_fu_156_p2);
    sensitive << ( index_0_reg_88 );

    SC_METHOD(thread_j_fu_172_p2);
    sensitive << ( j_0_reg_111 );

    SC_METHOD(thread_layer5_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_12_fu_250_p1 );

    SC_METHOD(thread_layer5_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_shl_cast_fu_231_p3);
    sensitive << ( add_ln203_9_fu_222_p2 );

    SC_METHOD(thread_t_fu_194_p2);
    sensitive << ( t_0_reg_133 );

    SC_METHOD(thread_tmp_s_fu_204_p3);
    sensitive << ( t_0_reg_133 );

    SC_METHOD(thread_zext_ln203_10_fu_212_p1);
    sensitive << ( tmp_s_fu_204_p3 );

    SC_METHOD(thread_zext_ln203_11_fu_227_p1);
    sensitive << ( add_ln203_9_fu_222_p2 );

    SC_METHOD(thread_zext_ln203_12_fu_250_p1);
    sensitive << ( add_ln203_11_reg_309 );

    SC_METHOD(thread_zext_ln203_fu_200_p1);
    sensitive << ( t_0_reg_133 );

    SC_METHOD(thread_zext_ln216_fu_162_p1);
    sensitive << ( i_0_reg_77 );

    SC_METHOD(thread_zext_ln218_fu_184_p1);
    sensitive << ( j_0_reg_111 );

    SC_METHOD(thread_zext_ln219_fu_254_p1);
    sensitive << ( index_2_reg_122 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln216_fu_166_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln218_fu_188_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Flatten_Layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, layer5_V_address0, "(port)layer5_V_address0");
    sc_trace(mVcdFile, layer5_V_ce0, "(port)layer5_V_ce0");
    sc_trace(mVcdFile, layer5_V_q0, "(port)layer5_V_q0");
    sc_trace(mVcdFile, flatten1_V_address0, "(port)flatten1_V_address0");
    sc_trace(mVcdFile, flatten1_V_ce0, "(port)flatten1_V_ce0");
    sc_trace(mVcdFile, flatten1_V_we0, "(port)flatten1_V_we0");
    sc_trace(mVcdFile, flatten1_V_d0, "(port)flatten1_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_150_p2, "i_fu_150_p2");
    sc_trace(mVcdFile, i_reg_268, "i_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, index_fu_156_p2, "index_fu_156_p2");
    sc_trace(mVcdFile, index_reg_273, "index_reg_273");
    sc_trace(mVcdFile, icmp_ln214_fu_144_p2, "icmp_ln214_fu_144_p2");
    sc_trace(mVcdFile, zext_ln216_fu_162_p1, "zext_ln216_fu_162_p1");
    sc_trace(mVcdFile, zext_ln216_reg_278, "zext_ln216_reg_278");
    sc_trace(mVcdFile, j_fu_172_p2, "j_fu_172_p2");
    sc_trace(mVcdFile, j_reg_286, "j_reg_286");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln220_fu_178_p2, "add_ln220_fu_178_p2");
    sc_trace(mVcdFile, add_ln220_reg_291, "add_ln220_reg_291");
    sc_trace(mVcdFile, icmp_ln216_fu_166_p2, "icmp_ln216_fu_166_p2");
    sc_trace(mVcdFile, zext_ln218_fu_184_p1, "zext_ln218_fu_184_p1");
    sc_trace(mVcdFile, zext_ln218_reg_296, "zext_ln218_reg_296");
    sc_trace(mVcdFile, t_fu_194_p2, "t_fu_194_p2");
    sc_trace(mVcdFile, t_reg_304, "t_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln203_11_fu_245_p2, "add_ln203_11_fu_245_p2");
    sc_trace(mVcdFile, add_ln203_11_reg_309, "add_ln203_11_reg_309");
    sc_trace(mVcdFile, icmp_ln218_fu_188_p2, "icmp_ln218_fu_188_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln220_1_fu_259_p2, "add_ln220_1_fu_259_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_reg_77, "i_0_reg_77");
    sc_trace(mVcdFile, index_0_reg_88, "index_0_reg_88");
    sc_trace(mVcdFile, index_1_reg_100, "index_1_reg_100");
    sc_trace(mVcdFile, j_0_reg_111, "j_0_reg_111");
    sc_trace(mVcdFile, index_2_reg_122, "index_2_reg_122");
    sc_trace(mVcdFile, t_0_reg_133, "t_0_reg_133");
    sc_trace(mVcdFile, zext_ln203_12_fu_250_p1, "zext_ln203_12_fu_250_p1");
    sc_trace(mVcdFile, zext_ln219_fu_254_p1, "zext_ln219_fu_254_p1");
    sc_trace(mVcdFile, tmp_s_fu_204_p3, "tmp_s_fu_204_p3");
    sc_trace(mVcdFile, zext_ln203_fu_200_p1, "zext_ln203_fu_200_p1");
    sc_trace(mVcdFile, zext_ln203_10_fu_212_p1, "zext_ln203_10_fu_212_p1");
    sc_trace(mVcdFile, add_ln203_fu_216_p2, "add_ln203_fu_216_p2");
    sc_trace(mVcdFile, add_ln203_9_fu_222_p2, "add_ln203_9_fu_222_p2");
    sc_trace(mVcdFile, zext_ln203_11_fu_227_p1, "zext_ln203_11_fu_227_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_231_p3, "p_shl_cast_fu_231_p3");
    sc_trace(mVcdFile, add_ln203_10_fu_239_p2, "add_ln203_10_fu_239_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Flatten_Layer::~Flatten_Layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Flatten_Layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln216_fu_166_p2.read(), ap_const_lv1_1))) {
        i_0_reg_77 = i_reg_268.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_77 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln216_fu_166_p2.read(), ap_const_lv1_1))) {
        index_0_reg_88 = index_reg_273.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_0_reg_88 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln218_fu_188_p2.read(), ap_const_lv1_1))) {
        index_1_reg_100 = add_ln220_reg_291.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_0))) {
        index_1_reg_100 = index_0_reg_88.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        index_2_reg_122 = add_ln220_1_fu_259_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_166_p2.read()))) {
        index_2_reg_122 = index_1_reg_100.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln218_fu_188_p2.read(), ap_const_lv1_1))) {
        j_0_reg_111 = j_reg_286.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_0))) {
        j_0_reg_111 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_0_reg_133 = t_reg_304.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_166_p2.read()))) {
        t_0_reg_133 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln218_fu_188_p2.read()))) {
        add_ln203_11_reg_309 = add_ln203_11_fu_245_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_166_p2.read()))) {
        add_ln220_reg_291 = add_ln220_fu_178_p2.read();
        zext_ln218_reg_296 = zext_ln218_fu_184_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_268 = i_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_0))) {
        index_reg_273 = index_fu_156_p2.read();
        zext_ln216_reg_278 = zext_ln216_fu_162_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_286 = j_fu_172_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_reg_304 = t_fu_194_p2.read();
    }
}

void Flatten_Layer::thread_add_ln203_10_fu_239_p2() {
    add_ln203_10_fu_239_p2 = (!zext_ln203_11_fu_227_p1.read().is_01() || !p_shl_cast_fu_231_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln203_11_fu_227_p1.read()) + sc_biguint<10>(p_shl_cast_fu_231_p3.read()));
}

void Flatten_Layer::thread_add_ln203_11_fu_245_p2() {
    add_ln203_11_fu_245_p2 = (!add_ln203_10_fu_239_p2.read().is_01() || !zext_ln218_reg_296.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln203_10_fu_239_p2.read()) + sc_biguint<10>(zext_ln218_reg_296.read()));
}

void Flatten_Layer::thread_add_ln203_9_fu_222_p2() {
    add_ln203_9_fu_222_p2 = (!add_ln203_fu_216_p2.read().is_01() || !zext_ln216_reg_278.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln203_fu_216_p2.read()) + sc_biguint<8>(zext_ln216_reg_278.read()));
}

void Flatten_Layer::thread_add_ln203_fu_216_p2() {
    add_ln203_fu_216_p2 = (!zext_ln203_fu_200_p1.read().is_01() || !zext_ln203_10_fu_212_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln203_fu_200_p1.read()) + sc_biguint<8>(zext_ln203_10_fu_212_p1.read()));
}

void Flatten_Layer::thread_add_ln220_1_fu_259_p2() {
    add_ln220_1_fu_259_p2 = (!index_2_reg_122.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(index_2_reg_122.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Flatten_Layer::thread_add_ln220_fu_178_p2() {
    add_ln220_fu_178_p2 = (!index_1_reg_100.read().is_01() || !ap_const_lv9_10.is_01())? sc_lv<9>(): (sc_biguint<9>(index_1_reg_100.read()) + sc_biguint<9>(ap_const_lv9_10));
}

void Flatten_Layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Flatten_Layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Flatten_Layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Flatten_Layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Flatten_Layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Flatten_Layer::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Flatten_Layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_flatten1_V_address0() {
    flatten1_V_address0 =  (sc_lv<9>) (zext_ln219_fu_254_p1.read());
}

void Flatten_Layer::thread_flatten1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        flatten1_V_ce0 = ap_const_logic_1;
    } else {
        flatten1_V_ce0 = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_flatten1_V_d0() {
    flatten1_V_d0 = layer5_V_q0.read();
}

void Flatten_Layer::thread_flatten1_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        flatten1_V_we0 = ap_const_logic_1;
    } else {
        flatten1_V_we0 = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_i_fu_150_p2() {
    i_fu_150_p2 = (!i_0_reg_77.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_77.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Flatten_Layer::thread_icmp_ln214_fu_144_p2() {
    icmp_ln214_fu_144_p2 = (!i_0_reg_77.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_77.read() == ap_const_lv3_5);
}

void Flatten_Layer::thread_icmp_ln216_fu_166_p2() {
    icmp_ln216_fu_166_p2 = (!j_0_reg_111.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_111.read() == ap_const_lv3_5);
}

void Flatten_Layer::thread_icmp_ln218_fu_188_p2() {
    icmp_ln218_fu_188_p2 = (!t_0_reg_133.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(t_0_reg_133.read() == ap_const_lv5_10);
}

void Flatten_Layer::thread_index_fu_156_p2() {
    index_fu_156_p2 = (!index_0_reg_88.read().is_01() || !ap_const_lv9_50.is_01())? sc_lv<9>(): (sc_biguint<9>(index_0_reg_88.read()) + sc_biguint<9>(ap_const_lv9_50));
}

void Flatten_Layer::thread_j_fu_172_p2() {
    j_fu_172_p2 = (!j_0_reg_111.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_111.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Flatten_Layer::thread_layer5_V_address0() {
    layer5_V_address0 =  (sc_lv<9>) (zext_ln203_12_fu_250_p1.read());
}

void Flatten_Layer::thread_layer5_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        layer5_V_ce0 = ap_const_logic_1;
    } else {
        layer5_V_ce0 = ap_const_logic_0;
    }
}

void Flatten_Layer::thread_p_shl_cast_fu_231_p3() {
    p_shl_cast_fu_231_p3 = esl_concat<8,2>(add_ln203_9_fu_222_p2.read(), ap_const_lv2_0);
}

void Flatten_Layer::thread_t_fu_194_p2() {
    t_fu_194_p2 = (!t_0_reg_133.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_0_reg_133.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Flatten_Layer::thread_tmp_s_fu_204_p3() {
    tmp_s_fu_204_p3 = esl_concat<5,2>(t_0_reg_133.read(), ap_const_lv2_0);
}

void Flatten_Layer::thread_zext_ln203_10_fu_212_p1() {
    zext_ln203_10_fu_212_p1 = esl_zext<8,7>(tmp_s_fu_204_p3.read());
}

void Flatten_Layer::thread_zext_ln203_11_fu_227_p1() {
    zext_ln203_11_fu_227_p1 = esl_zext<10,8>(add_ln203_9_fu_222_p2.read());
}

void Flatten_Layer::thread_zext_ln203_12_fu_250_p1() {
    zext_ln203_12_fu_250_p1 = esl_zext<64,10>(add_ln203_11_reg_309.read());
}

void Flatten_Layer::thread_zext_ln203_fu_200_p1() {
    zext_ln203_fu_200_p1 = esl_zext<8,5>(t_0_reg_133.read());
}

void Flatten_Layer::thread_zext_ln216_fu_162_p1() {
    zext_ln216_fu_162_p1 = esl_zext<8,3>(i_0_reg_77.read());
}

void Flatten_Layer::thread_zext_ln218_fu_184_p1() {
    zext_ln218_fu_184_p1 = esl_zext<10,3>(j_0_reg_111.read());
}

void Flatten_Layer::thread_zext_ln219_fu_254_p1() {
    zext_ln219_fu_254_p1 = esl_zext<64,9>(index_2_reg_122.read());
}

void Flatten_Layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln214_fu_144_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln216_fu_166_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln218_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

