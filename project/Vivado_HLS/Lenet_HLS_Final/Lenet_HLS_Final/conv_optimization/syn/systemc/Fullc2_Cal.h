// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Fullc2_Cal_HH_
#define _Fullc2_Cal_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Lenet_HLS_mul_mulibs.h"
#include "Fullc2_Cal_bias2_V.h"
#include "Fullc2_Cal_weightjbC.h"

namespace ap_rtl {

struct Fullc2_Cal : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > flatten3_V_address0;
    sc_out< sc_logic > flatten3_V_ce0;
    sc_out< sc_logic > flatten3_V_we0;
    sc_out< sc_lv<12> > flatten3_V_d0;
    sc_in< sc_lv<12> > flatten3_V_q0;
    sc_out< sc_lv<7> > flatten2_V_address0;
    sc_out< sc_logic > flatten2_V_ce0;
    sc_in< sc_lv<12> > flatten2_V_q0;


    // Module declarations
    Fullc2_Cal(sc_module_name name);
    SC_HAS_PROCESS(Fullc2_Cal);

    ~Fullc2_Cal();

    sc_trace_file* mVcdFile;

    Fullc2_Cal_bias2_V* bias2_V_U;
    Fullc2_Cal_weightjbC* weight2_V_U;
    Lenet_HLS_mul_mulibs<1,1,12,6,19>* Lenet_HLS_mul_mulibs_U29;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > bias2_V_address0;
    sc_signal< sc_logic > bias2_V_ce0;
    sc_signal< sc_lv<4> > bias2_V_q0;
    sc_signal< sc_lv<13> > weight2_V_address0;
    sc_signal< sc_logic > weight2_V_ce0;
    sc_signal< sc_lv<6> > weight2_V_q0;
    sc_signal< sc_lv<13> > add_ln190_fu_156_p2;
    sc_signal< sc_lv<13> > add_ln190_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > i_fu_168_p2;
    sc_signal< sc_lv<7> > i_reg_462;
    sc_signal< sc_lv<1> > icmp_ln190_fu_162_p2;
    sc_signal< sc_lv<7> > flatten3_V_addr_reg_472;
    sc_signal< sc_lv<7> > j_fu_191_p2;
    sc_signal< sc_lv<7> > j_reg_480;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln193_fu_185_p2;
    sc_signal< sc_lv<6> > weight2_V_load_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<19> > r_V_fu_446_p2;
    sc_signal< sc_lv<19> > r_V_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<12> > p_Val2_s_reg_506;
    sc_signal< sc_lv<18> > trunc_ln1192_fu_224_p1;
    sc_signal< sc_lv<18> > trunc_ln1192_reg_511;
    sc_signal< sc_lv<5> > trunc_ln718_fu_227_p1;
    sc_signal< sc_lv<5> > trunc_ln718_reg_516;
    sc_signal< sc_lv<1> > overflow_fu_410_p2;
    sc_signal< sc_lv<1> > overflow_reg_521;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > underflow_fu_434_p2;
    sc_signal< sc_lv<1> > underflow_reg_525;
    sc_signal< sc_lv<1> > or_ln340_fu_440_p2;
    sc_signal< sc_lv<1> > or_ln340_reg_529;
    sc_signal< sc_lv<7> > i_0_reg_121;
    sc_signal< sc_lv<13> > phi_mul_reg_132;
    sc_signal< sc_lv<7> > j_0_reg_144;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > zext_ln191_fu_174_p1;
    sc_signal< sc_lv<64> > zext_ln1116_1_fu_207_p1;
    sc_signal< sc_lv<64> > zext_ln194_fu_212_p1;
    sc_signal< sc_lv<12> > sext_ln203_fu_180_p1;
    sc_signal< sc_lv<12> > p_Val2_10_fu_305_p2;
    sc_signal< sc_lv<13> > zext_ln1116_fu_197_p1;
    sc_signal< sc_lv<13> > add_ln1116_fu_201_p2;
    sc_signal< sc_lv<18> > lhs_V_fu_230_p3;
    sc_signal< sc_lv<19> > sext_ln728_fu_237_p1;
    sc_signal< sc_lv<19> > ret_V_fu_241_p2;
    sc_signal< sc_lv<18> > add_ln1192_1_fu_246_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_251_p3;
    sc_signal< sc_lv<1> > r_fu_269_p2;
    sc_signal< sc_lv<1> > tmp_31_fu_288_p3;
    sc_signal< sc_lv<1> > or_ln406_fu_282_p2;
    sc_signal< sc_lv<1> > and_ln415_fu_295_p2;
    sc_signal< sc_lv<12> > zext_ln415_fu_301_p1;
    sc_signal< sc_lv<12> > p_Val2_9_fu_259_p4;
    sc_signal< sc_lv<1> > tmp_32_fu_312_p3;
    sc_signal< sc_lv<1> > p_Result_18_fu_274_p3;
    sc_signal< sc_lv<1> > xor_ln416_1_fu_320_p2;
    sc_signal< sc_lv<1> > tmp_35_fu_348_p3;
    sc_signal< sc_lv<1> > xor_ln416_2_fu_362_p2;
    sc_signal< sc_lv<1> > or_ln416_1_fu_368_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_356_p2;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_340_p3;
    sc_signal< sc_lv<1> > or_ln416_fu_374_p2;
    sc_signal< sc_lv<1> > carry_1_fu_326_p2;
    sc_signal< sc_lv<1> > p_Result_19_fu_332_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_392_p2;
    sc_signal< sc_lv<1> > or_ln785_fu_398_p2;
    sc_signal< sc_lv<1> > xor_ln785_1_fu_404_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_380_p2;
    sc_signal< sc_lv<1> > and_ln781_fu_386_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_416_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_422_p2;
    sc_signal< sc_lv<1> > xor_ln786_fu_428_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_7FF;
    static const sc_lv<13> ap_const_lv13_54;
    static const sc_lv<7> ap_const_lv7_41;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range2_all_ones_fu_340_p3();
    void thread_add_ln1116_fu_201_p2();
    void thread_add_ln1192_1_fu_246_p2();
    void thread_add_ln190_fu_156_p2();
    void thread_and_ln415_fu_295_p2();
    void thread_and_ln781_fu_386_p2();
    void thread_and_ln786_fu_416_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias2_V_address0();
    void thread_bias2_V_ce0();
    void thread_carry_1_fu_326_p2();
    void thread_deleted_ones_fu_380_p2();
    void thread_flatten2_V_address0();
    void thread_flatten2_V_ce0();
    void thread_flatten3_V_address0();
    void thread_flatten3_V_ce0();
    void thread_flatten3_V_d0();
    void thread_flatten3_V_we0();
    void thread_i_fu_168_p2();
    void thread_icmp_ln190_fu_162_p2();
    void thread_icmp_ln193_fu_185_p2();
    void thread_j_fu_191_p2();
    void thread_lhs_V_fu_230_p3();
    void thread_or_ln340_fu_440_p2();
    void thread_or_ln406_fu_282_p2();
    void thread_or_ln416_1_fu_368_p2();
    void thread_or_ln416_fu_374_p2();
    void thread_or_ln785_fu_398_p2();
    void thread_or_ln786_fu_422_p2();
    void thread_overflow_fu_410_p2();
    void thread_p_Result_18_fu_274_p3();
    void thread_p_Result_19_fu_332_p3();
    void thread_p_Result_s_fu_251_p3();
    void thread_p_Val2_10_fu_305_p2();
    void thread_p_Val2_9_fu_259_p4();
    void thread_r_fu_269_p2();
    void thread_ret_V_fu_241_p2();
    void thread_sext_ln203_fu_180_p1();
    void thread_sext_ln728_fu_237_p1();
    void thread_tmp_31_fu_288_p3();
    void thread_tmp_32_fu_312_p3();
    void thread_tmp_35_fu_348_p3();
    void thread_trunc_ln1192_fu_224_p1();
    void thread_trunc_ln718_fu_227_p1();
    void thread_underflow_fu_434_p2();
    void thread_weight2_V_address0();
    void thread_weight2_V_ce0();
    void thread_xor_ln416_1_fu_320_p2();
    void thread_xor_ln416_2_fu_362_p2();
    void thread_xor_ln779_fu_356_p2();
    void thread_xor_ln785_1_fu_404_p2();
    void thread_xor_ln785_fu_392_p2();
    void thread_xor_ln786_fu_428_p2();
    void thread_zext_ln1116_1_fu_207_p1();
    void thread_zext_ln1116_fu_197_p1();
    void thread_zext_ln191_fu_174_p1();
    void thread_zext_ln194_fu_212_p1();
    void thread_zext_ln415_fu_301_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
