// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Fullc2_Cal.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Fullc2_Cal::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Fullc2_Cal::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state1 = "1";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state2 = "10";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state3 = "100";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state4 = "1000";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state5 = "10000";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state6 = "100000";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> Fullc2_Cal::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_1 = "1";
const sc_lv<1> Fullc2_Cal::ap_const_lv1_0 = "0";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_3 = "11";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_4 = "100";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_5 = "101";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_6 = "110";
const sc_lv<7> Fullc2_Cal::ap_const_lv7_0 = "0000000";
const sc_lv<1> Fullc2_Cal::ap_const_lv1_1 = "1";
const sc_lv<13> Fullc2_Cal::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_2 = "10";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_7 = "111";
const sc_lv<12> Fullc2_Cal::ap_const_lv12_800 = "100000000000";
const sc_lv<12> Fullc2_Cal::ap_const_lv12_7FF = "11111111111";
const sc_lv<13> Fullc2_Cal::ap_const_lv13_54 = "1010100";
const sc_lv<7> Fullc2_Cal::ap_const_lv7_41 = "1000001";
const sc_lv<7> Fullc2_Cal::ap_const_lv7_1 = "1";
const sc_lv<7> Fullc2_Cal::ap_const_lv7_54 = "1010100";
const sc_lv<6> Fullc2_Cal::ap_const_lv6_0 = "000000";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_12 = "10010";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_11 = "10001";
const sc_lv<5> Fullc2_Cal::ap_const_lv5_0 = "00000";
const sc_lv<32> Fullc2_Cal::ap_const_lv32_B = "1011";
const bool Fullc2_Cal::ap_const_boolean_1 = true;

Fullc2_Cal::Fullc2_Cal(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bias2_V_U = new Fullc2_Cal_bias2_V("bias2_V_U");
    bias2_V_U->clk(ap_clk);
    bias2_V_U->reset(ap_rst);
    bias2_V_U->address0(bias2_V_address0);
    bias2_V_U->ce0(bias2_V_ce0);
    bias2_V_U->q0(bias2_V_q0);
    weight2_V_U = new Fullc2_Cal_weightjbC("weight2_V_U");
    weight2_V_U->clk(ap_clk);
    weight2_V_U->reset(ap_rst);
    weight2_V_U->address0(weight2_V_address0);
    weight2_V_U->ce0(weight2_V_ce0);
    weight2_V_U->q0(weight2_V_q0);
    Lenet_HLS_mul_mulibs_U29 = new Lenet_HLS_mul_mulibs<1,1,12,6,19>("Lenet_HLS_mul_mulibs_U29");
    Lenet_HLS_mul_mulibs_U29->din0(flatten2_V_q0);
    Lenet_HLS_mul_mulibs_U29->din1(weight2_V_load_reg_490);
    Lenet_HLS_mul_mulibs_U29->dout(r_V_fu_446_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range2_all_ones_fu_340_p3);
    sensitive << ( ret_V_fu_241_p2 );

    SC_METHOD(thread_add_ln1116_fu_201_p2);
    sensitive << ( phi_mul_reg_132 );
    sensitive << ( zext_ln1116_fu_197_p1 );

    SC_METHOD(thread_add_ln1192_1_fu_246_p2);
    sensitive << ( trunc_ln1192_reg_511 );
    sensitive << ( lhs_V_fu_230_p3 );

    SC_METHOD(thread_add_ln190_fu_156_p2);
    sensitive << ( phi_mul_reg_132 );

    SC_METHOD(thread_and_ln415_fu_295_p2);
    sensitive << ( tmp_31_fu_288_p3 );
    sensitive << ( or_ln406_fu_282_p2 );

    SC_METHOD(thread_and_ln781_fu_386_p2);
    sensitive << ( Range2_all_ones_fu_340_p3 );
    sensitive << ( carry_1_fu_326_p2 );

    SC_METHOD(thread_and_ln786_fu_416_p2);
    sensitive << ( p_Result_19_fu_332_p3 );
    sensitive << ( deleted_ones_fu_380_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln190_fu_162_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln190_fu_162_p2 );

    SC_METHOD(thread_bias2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln191_fu_174_p1 );

    SC_METHOD(thread_bias2_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_carry_1_fu_326_p2);
    sensitive << ( p_Result_18_fu_274_p3 );
    sensitive << ( xor_ln416_1_fu_320_p2 );

    SC_METHOD(thread_deleted_ones_fu_380_p2);
    sensitive << ( Range2_all_ones_fu_340_p3 );
    sensitive << ( or_ln416_fu_374_p2 );

    SC_METHOD(thread_flatten2_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln194_fu_212_p1 );

    SC_METHOD(thread_flatten2_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_flatten3_V_address0);
    sensitive << ( flatten3_V_addr_reg_472 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( overflow_reg_521 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_525 );
    sensitive << ( or_ln340_reg_529 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_flatten3_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( overflow_reg_521 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_525 );
    sensitive << ( or_ln340_reg_529 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_flatten3_V_d0);
    sensitive << ( overflow_reg_521 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_525 );
    sensitive << ( or_ln340_reg_529 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln203_fu_180_p1 );
    sensitive << ( p_Val2_10_fu_305_p2 );

    SC_METHOD(thread_flatten3_V_we0);
    sensitive << ( overflow_reg_521 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( underflow_reg_525 );
    sensitive << ( or_ln340_reg_529 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_fu_168_p2);
    sensitive << ( i_0_reg_121 );

    SC_METHOD(thread_icmp_ln190_fu_162_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_121 );

    SC_METHOD(thread_icmp_ln193_fu_185_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_144 );

    SC_METHOD(thread_j_fu_191_p2);
    sensitive << ( j_0_reg_144 );

    SC_METHOD(thread_lhs_V_fu_230_p3);
    sensitive << ( p_Val2_s_reg_506 );

    SC_METHOD(thread_or_ln340_fu_440_p2);
    sensitive << ( overflow_fu_410_p2 );
    sensitive << ( underflow_fu_434_p2 );

    SC_METHOD(thread_or_ln406_fu_282_p2);
    sensitive << ( p_Result_s_fu_251_p3 );
    sensitive << ( r_fu_269_p2 );

    SC_METHOD(thread_or_ln416_1_fu_368_p2);
    sensitive << ( tmp_32_fu_312_p3 );
    sensitive << ( xor_ln416_2_fu_362_p2 );

    SC_METHOD(thread_or_ln416_fu_374_p2);
    sensitive << ( or_ln416_1_fu_368_p2 );
    sensitive << ( xor_ln779_fu_356_p2 );

    SC_METHOD(thread_or_ln785_fu_398_p2);
    sensitive << ( p_Result_19_fu_332_p3 );
    sensitive << ( xor_ln785_fu_392_p2 );

    SC_METHOD(thread_or_ln786_fu_422_p2);
    sensitive << ( and_ln781_fu_386_p2 );
    sensitive << ( and_ln786_fu_416_p2 );

    SC_METHOD(thread_overflow_fu_410_p2);
    sensitive << ( or_ln785_fu_398_p2 );
    sensitive << ( xor_ln785_1_fu_404_p2 );

    SC_METHOD(thread_p_Result_18_fu_274_p3);
    sensitive << ( add_ln1192_1_fu_246_p2 );

    SC_METHOD(thread_p_Result_19_fu_332_p3);
    sensitive << ( p_Val2_10_fu_305_p2 );

    SC_METHOD(thread_p_Result_s_fu_251_p3);
    sensitive << ( ret_V_fu_241_p2 );

    SC_METHOD(thread_p_Val2_10_fu_305_p2);
    sensitive << ( zext_ln415_fu_301_p1 );
    sensitive << ( p_Val2_9_fu_259_p4 );

    SC_METHOD(thread_p_Val2_9_fu_259_p4);
    sensitive << ( add_ln1192_1_fu_246_p2 );

    SC_METHOD(thread_r_fu_269_p2);
    sensitive << ( trunc_ln718_reg_516 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ret_V_fu_241_p2);
    sensitive << ( r_V_reg_500 );
    sensitive << ( sext_ln728_fu_237_p1 );

    SC_METHOD(thread_sext_ln203_fu_180_p1);
    sensitive << ( bias2_V_q0 );

    SC_METHOD(thread_sext_ln728_fu_237_p1);
    sensitive << ( lhs_V_fu_230_p3 );

    SC_METHOD(thread_tmp_31_fu_288_p3);
    sensitive << ( r_V_reg_500 );

    SC_METHOD(thread_tmp_32_fu_312_p3);
    sensitive << ( p_Val2_10_fu_305_p2 );

    SC_METHOD(thread_tmp_35_fu_348_p3);
    sensitive << ( ret_V_fu_241_p2 );

    SC_METHOD(thread_trunc_ln1192_fu_224_p1);
    sensitive << ( r_V_fu_446_p2 );

    SC_METHOD(thread_trunc_ln718_fu_227_p1);
    sensitive << ( r_V_fu_446_p2 );

    SC_METHOD(thread_underflow_fu_434_p2);
    sensitive << ( p_Result_s_fu_251_p3 );
    sensitive << ( xor_ln786_fu_428_p2 );

    SC_METHOD(thread_weight2_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln1116_1_fu_207_p1 );

    SC_METHOD(thread_weight2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xor_ln416_1_fu_320_p2);
    sensitive << ( tmp_32_fu_312_p3 );

    SC_METHOD(thread_xor_ln416_2_fu_362_p2);
    sensitive << ( p_Result_18_fu_274_p3 );

    SC_METHOD(thread_xor_ln779_fu_356_p2);
    sensitive << ( tmp_35_fu_348_p3 );

    SC_METHOD(thread_xor_ln785_1_fu_404_p2);
    sensitive << ( p_Result_s_fu_251_p3 );

    SC_METHOD(thread_xor_ln785_fu_392_p2);
    sensitive << ( Range2_all_ones_fu_340_p3 );
    sensitive << ( carry_1_fu_326_p2 );

    SC_METHOD(thread_xor_ln786_fu_428_p2);
    sensitive << ( or_ln786_fu_422_p2 );

    SC_METHOD(thread_zext_ln1116_1_fu_207_p1);
    sensitive << ( add_ln1116_fu_201_p2 );

    SC_METHOD(thread_zext_ln1116_fu_197_p1);
    sensitive << ( j_0_reg_144 );

    SC_METHOD(thread_zext_ln191_fu_174_p1);
    sensitive << ( i_0_reg_121 );

    SC_METHOD(thread_zext_ln194_fu_212_p1);
    sensitive << ( j_0_reg_144 );

    SC_METHOD(thread_zext_ln415_fu_301_p1);
    sensitive << ( and_ln415_fu_295_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln190_fu_162_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln193_fu_185_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Fullc2_Cal_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flatten3_V_address0, "(port)flatten3_V_address0");
    sc_trace(mVcdFile, flatten3_V_ce0, "(port)flatten3_V_ce0");
    sc_trace(mVcdFile, flatten3_V_we0, "(port)flatten3_V_we0");
    sc_trace(mVcdFile, flatten3_V_d0, "(port)flatten3_V_d0");
    sc_trace(mVcdFile, flatten3_V_q0, "(port)flatten3_V_q0");
    sc_trace(mVcdFile, flatten2_V_address0, "(port)flatten2_V_address0");
    sc_trace(mVcdFile, flatten2_V_ce0, "(port)flatten2_V_ce0");
    sc_trace(mVcdFile, flatten2_V_q0, "(port)flatten2_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, bias2_V_address0, "bias2_V_address0");
    sc_trace(mVcdFile, bias2_V_ce0, "bias2_V_ce0");
    sc_trace(mVcdFile, bias2_V_q0, "bias2_V_q0");
    sc_trace(mVcdFile, weight2_V_address0, "weight2_V_address0");
    sc_trace(mVcdFile, weight2_V_ce0, "weight2_V_ce0");
    sc_trace(mVcdFile, weight2_V_q0, "weight2_V_q0");
    sc_trace(mVcdFile, add_ln190_fu_156_p2, "add_ln190_fu_156_p2");
    sc_trace(mVcdFile, add_ln190_reg_454, "add_ln190_reg_454");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_168_p2, "i_fu_168_p2");
    sc_trace(mVcdFile, i_reg_462, "i_reg_462");
    sc_trace(mVcdFile, icmp_ln190_fu_162_p2, "icmp_ln190_fu_162_p2");
    sc_trace(mVcdFile, flatten3_V_addr_reg_472, "flatten3_V_addr_reg_472");
    sc_trace(mVcdFile, j_fu_191_p2, "j_fu_191_p2");
    sc_trace(mVcdFile, j_reg_480, "j_reg_480");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln193_fu_185_p2, "icmp_ln193_fu_185_p2");
    sc_trace(mVcdFile, weight2_V_load_reg_490, "weight2_V_load_reg_490");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, r_V_fu_446_p2, "r_V_fu_446_p2");
    sc_trace(mVcdFile, r_V_reg_500, "r_V_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_Val2_s_reg_506, "p_Val2_s_reg_506");
    sc_trace(mVcdFile, trunc_ln1192_fu_224_p1, "trunc_ln1192_fu_224_p1");
    sc_trace(mVcdFile, trunc_ln1192_reg_511, "trunc_ln1192_reg_511");
    sc_trace(mVcdFile, trunc_ln718_fu_227_p1, "trunc_ln718_fu_227_p1");
    sc_trace(mVcdFile, trunc_ln718_reg_516, "trunc_ln718_reg_516");
    sc_trace(mVcdFile, overflow_fu_410_p2, "overflow_fu_410_p2");
    sc_trace(mVcdFile, overflow_reg_521, "overflow_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, underflow_fu_434_p2, "underflow_fu_434_p2");
    sc_trace(mVcdFile, underflow_reg_525, "underflow_reg_525");
    sc_trace(mVcdFile, or_ln340_fu_440_p2, "or_ln340_fu_440_p2");
    sc_trace(mVcdFile, or_ln340_reg_529, "or_ln340_reg_529");
    sc_trace(mVcdFile, i_0_reg_121, "i_0_reg_121");
    sc_trace(mVcdFile, phi_mul_reg_132, "phi_mul_reg_132");
    sc_trace(mVcdFile, j_0_reg_144, "j_0_reg_144");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln191_fu_174_p1, "zext_ln191_fu_174_p1");
    sc_trace(mVcdFile, zext_ln1116_1_fu_207_p1, "zext_ln1116_1_fu_207_p1");
    sc_trace(mVcdFile, zext_ln194_fu_212_p1, "zext_ln194_fu_212_p1");
    sc_trace(mVcdFile, sext_ln203_fu_180_p1, "sext_ln203_fu_180_p1");
    sc_trace(mVcdFile, p_Val2_10_fu_305_p2, "p_Val2_10_fu_305_p2");
    sc_trace(mVcdFile, zext_ln1116_fu_197_p1, "zext_ln1116_fu_197_p1");
    sc_trace(mVcdFile, add_ln1116_fu_201_p2, "add_ln1116_fu_201_p2");
    sc_trace(mVcdFile, lhs_V_fu_230_p3, "lhs_V_fu_230_p3");
    sc_trace(mVcdFile, sext_ln728_fu_237_p1, "sext_ln728_fu_237_p1");
    sc_trace(mVcdFile, ret_V_fu_241_p2, "ret_V_fu_241_p2");
    sc_trace(mVcdFile, add_ln1192_1_fu_246_p2, "add_ln1192_1_fu_246_p2");
    sc_trace(mVcdFile, p_Result_s_fu_251_p3, "p_Result_s_fu_251_p3");
    sc_trace(mVcdFile, r_fu_269_p2, "r_fu_269_p2");
    sc_trace(mVcdFile, tmp_31_fu_288_p3, "tmp_31_fu_288_p3");
    sc_trace(mVcdFile, or_ln406_fu_282_p2, "or_ln406_fu_282_p2");
    sc_trace(mVcdFile, and_ln415_fu_295_p2, "and_ln415_fu_295_p2");
    sc_trace(mVcdFile, zext_ln415_fu_301_p1, "zext_ln415_fu_301_p1");
    sc_trace(mVcdFile, p_Val2_9_fu_259_p4, "p_Val2_9_fu_259_p4");
    sc_trace(mVcdFile, tmp_32_fu_312_p3, "tmp_32_fu_312_p3");
    sc_trace(mVcdFile, p_Result_18_fu_274_p3, "p_Result_18_fu_274_p3");
    sc_trace(mVcdFile, xor_ln416_1_fu_320_p2, "xor_ln416_1_fu_320_p2");
    sc_trace(mVcdFile, tmp_35_fu_348_p3, "tmp_35_fu_348_p3");
    sc_trace(mVcdFile, xor_ln416_2_fu_362_p2, "xor_ln416_2_fu_362_p2");
    sc_trace(mVcdFile, or_ln416_1_fu_368_p2, "or_ln416_1_fu_368_p2");
    sc_trace(mVcdFile, xor_ln779_fu_356_p2, "xor_ln779_fu_356_p2");
    sc_trace(mVcdFile, Range2_all_ones_fu_340_p3, "Range2_all_ones_fu_340_p3");
    sc_trace(mVcdFile, or_ln416_fu_374_p2, "or_ln416_fu_374_p2");
    sc_trace(mVcdFile, carry_1_fu_326_p2, "carry_1_fu_326_p2");
    sc_trace(mVcdFile, p_Result_19_fu_332_p3, "p_Result_19_fu_332_p3");
    sc_trace(mVcdFile, xor_ln785_fu_392_p2, "xor_ln785_fu_392_p2");
    sc_trace(mVcdFile, or_ln785_fu_398_p2, "or_ln785_fu_398_p2");
    sc_trace(mVcdFile, xor_ln785_1_fu_404_p2, "xor_ln785_1_fu_404_p2");
    sc_trace(mVcdFile, deleted_ones_fu_380_p2, "deleted_ones_fu_380_p2");
    sc_trace(mVcdFile, and_ln781_fu_386_p2, "and_ln781_fu_386_p2");
    sc_trace(mVcdFile, and_ln786_fu_416_p2, "and_ln786_fu_416_p2");
    sc_trace(mVcdFile, or_ln786_fu_422_p2, "or_ln786_fu_422_p2");
    sc_trace(mVcdFile, xor_ln786_fu_428_p2, "xor_ln786_fu_428_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Fullc2_Cal::~Fullc2_Cal() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete bias2_V_U;
    delete weight2_V_U;
    delete Lenet_HLS_mul_mulibs_U29;
}

void Fullc2_Cal::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln193_fu_185_p2.read(), ap_const_lv1_1))) {
        i_0_reg_121 = i_reg_462.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_121 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_0_reg_144 = j_reg_480.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_reg_144 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln193_fu_185_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_132 = add_ln190_reg_454.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_132 = ap_const_lv13_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln190_reg_454 = add_ln190_fu_156_p2.read();
        i_reg_462 = i_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln190_fu_162_p2.read(), ap_const_lv1_0))) {
        flatten3_V_addr_reg_472 =  (sc_lv<7>) (zext_ln191_fu_174_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_480 = j_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        or_ln340_reg_529 = or_ln340_fu_440_p2.read();
        overflow_reg_521 = overflow_fu_410_p2.read();
        underflow_reg_525 = underflow_fu_434_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_Val2_s_reg_506 = flatten3_V_q0.read();
        r_V_reg_500 = r_V_fu_446_p2.read();
        trunc_ln1192_reg_511 = trunc_ln1192_fu_224_p1.read();
        trunc_ln718_reg_516 = trunc_ln718_fu_227_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weight2_V_load_reg_490 = weight2_V_q0.read();
    }
}

void Fullc2_Cal::thread_Range2_all_ones_fu_340_p3() {
    Range2_all_ones_fu_340_p3 = ret_V_fu_241_p2.read().range(18, 18);
}

void Fullc2_Cal::thread_add_ln1116_fu_201_p2() {
    add_ln1116_fu_201_p2 = (!phi_mul_reg_132.read().is_01() || !zext_ln1116_fu_197_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_132.read()) + sc_biguint<13>(zext_ln1116_fu_197_p1.read()));
}

void Fullc2_Cal::thread_add_ln1192_1_fu_246_p2() {
    add_ln1192_1_fu_246_p2 = (!lhs_V_fu_230_p3.read().is_01() || !trunc_ln1192_reg_511.read().is_01())? sc_lv<18>(): (sc_bigint<18>(lhs_V_fu_230_p3.read()) + sc_biguint<18>(trunc_ln1192_reg_511.read()));
}

void Fullc2_Cal::thread_add_ln190_fu_156_p2() {
    add_ln190_fu_156_p2 = (!phi_mul_reg_132.read().is_01() || !ap_const_lv13_54.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_132.read()) + sc_biguint<13>(ap_const_lv13_54));
}

void Fullc2_Cal::thread_and_ln415_fu_295_p2() {
    and_ln415_fu_295_p2 = (tmp_31_fu_288_p3.read() & or_ln406_fu_282_p2.read());
}

void Fullc2_Cal::thread_and_ln781_fu_386_p2() {
    and_ln781_fu_386_p2 = (carry_1_fu_326_p2.read() & Range2_all_ones_fu_340_p3.read());
}

void Fullc2_Cal::thread_and_ln786_fu_416_p2() {
    and_ln786_fu_416_p2 = (p_Result_19_fu_332_p3.read() & deleted_ones_fu_380_p2.read());
}

void Fullc2_Cal::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Fullc2_Cal::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Fullc2_Cal::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Fullc2_Cal::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Fullc2_Cal::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Fullc2_Cal::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Fullc2_Cal::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Fullc2_Cal::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Fullc2_Cal::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln190_fu_162_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln190_fu_162_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_bias2_V_address0() {
    bias2_V_address0 =  (sc_lv<7>) (zext_ln191_fu_174_p1.read());
}

void Fullc2_Cal::thread_bias2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bias2_V_ce0 = ap_const_logic_1;
    } else {
        bias2_V_ce0 = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_carry_1_fu_326_p2() {
    carry_1_fu_326_p2 = (p_Result_18_fu_274_p3.read() & xor_ln416_1_fu_320_p2.read());
}

void Fullc2_Cal::thread_deleted_ones_fu_380_p2() {
    deleted_ones_fu_380_p2 = (Range2_all_ones_fu_340_p3.read() & or_ln416_fu_374_p2.read());
}

void Fullc2_Cal::thread_flatten2_V_address0() {
    flatten2_V_address0 =  (sc_lv<7>) (zext_ln194_fu_212_p1.read());
}

void Fullc2_Cal::thread_flatten2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flatten2_V_ce0 = ap_const_logic_1;
    } else {
        flatten2_V_ce0 = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_flatten3_V_address0() {
    flatten3_V_address0 = flatten3_V_addr_reg_472.read();
}

void Fullc2_Cal::thread_flatten3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_521.read()) && 
          esl_seteq<1,1,1>(underflow_reg_525.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(overflow_reg_521.read(), ap_const_lv1_1)))) {
        flatten3_V_ce0 = ap_const_logic_1;
    } else {
        flatten3_V_ce0 = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_flatten3_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(overflow_reg_521.read(), ap_const_lv1_1))) {
        flatten3_V_d0 = ap_const_lv12_7FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_521.read()) && 
                esl_seteq<1,1,1>(underflow_reg_525.read(), ap_const_lv1_1))) {
        flatten3_V_d0 = ap_const_lv12_800;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        flatten3_V_d0 = p_Val2_10_fu_305_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        flatten3_V_d0 = sext_ln203_fu_180_p1.read();
    } else {
        flatten3_V_d0 = "XXXXXXXXXXXX";
    }
}

void Fullc2_Cal::thread_flatten3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, overflow_reg_521.read()) && 
          esl_seteq<1,1,1>(underflow_reg_525.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(or_ln340_reg_529.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(overflow_reg_521.read(), ap_const_lv1_1)))) {
        flatten3_V_we0 = ap_const_logic_1;
    } else {
        flatten3_V_we0 = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_i_fu_168_p2() {
    i_fu_168_p2 = (!i_0_reg_121.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_121.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Fullc2_Cal::thread_icmp_ln190_fu_162_p2() {
    icmp_ln190_fu_162_p2 = (!i_0_reg_121.read().is_01() || !ap_const_lv7_41.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_121.read() == ap_const_lv7_41);
}

void Fullc2_Cal::thread_icmp_ln193_fu_185_p2() {
    icmp_ln193_fu_185_p2 = (!j_0_reg_144.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_144.read() == ap_const_lv7_54);
}

void Fullc2_Cal::thread_j_fu_191_p2() {
    j_fu_191_p2 = (!j_0_reg_144.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_144.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Fullc2_Cal::thread_lhs_V_fu_230_p3() {
    lhs_V_fu_230_p3 = esl_concat<12,6>(p_Val2_s_reg_506.read(), ap_const_lv6_0);
}

void Fullc2_Cal::thread_or_ln340_fu_440_p2() {
    or_ln340_fu_440_p2 = (underflow_fu_434_p2.read() | overflow_fu_410_p2.read());
}

void Fullc2_Cal::thread_or_ln406_fu_282_p2() {
    or_ln406_fu_282_p2 = (p_Result_s_fu_251_p3.read() | r_fu_269_p2.read());
}

void Fullc2_Cal::thread_or_ln416_1_fu_368_p2() {
    or_ln416_1_fu_368_p2 = (tmp_32_fu_312_p3.read() | xor_ln416_2_fu_362_p2.read());
}

void Fullc2_Cal::thread_or_ln416_fu_374_p2() {
    or_ln416_fu_374_p2 = (or_ln416_1_fu_368_p2.read() | xor_ln779_fu_356_p2.read());
}

void Fullc2_Cal::thread_or_ln785_fu_398_p2() {
    or_ln785_fu_398_p2 = (p_Result_19_fu_332_p3.read() | xor_ln785_fu_392_p2.read());
}

void Fullc2_Cal::thread_or_ln786_fu_422_p2() {
    or_ln786_fu_422_p2 = (and_ln781_fu_386_p2.read() | and_ln786_fu_416_p2.read());
}

void Fullc2_Cal::thread_overflow_fu_410_p2() {
    overflow_fu_410_p2 = (or_ln785_fu_398_p2.read() & xor_ln785_1_fu_404_p2.read());
}

void Fullc2_Cal::thread_p_Result_18_fu_274_p3() {
    p_Result_18_fu_274_p3 = add_ln1192_1_fu_246_p2.read().range(17, 17);
}

void Fullc2_Cal::thread_p_Result_19_fu_332_p3() {
    p_Result_19_fu_332_p3 = p_Val2_10_fu_305_p2.read().range(11, 11);
}

void Fullc2_Cal::thread_p_Result_s_fu_251_p3() {
    p_Result_s_fu_251_p3 = ret_V_fu_241_p2.read().range(18, 18);
}

void Fullc2_Cal::thread_p_Val2_10_fu_305_p2() {
    p_Val2_10_fu_305_p2 = (!zext_ln415_fu_301_p1.read().is_01() || !p_Val2_9_fu_259_p4.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln415_fu_301_p1.read()) + sc_biguint<12>(p_Val2_9_fu_259_p4.read()));
}

void Fullc2_Cal::thread_p_Val2_9_fu_259_p4() {
    p_Val2_9_fu_259_p4 = add_ln1192_1_fu_246_p2.read().range(17, 6);
}

void Fullc2_Cal::thread_r_fu_269_p2() {
    r_fu_269_p2 = (!trunc_ln718_reg_516.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln718_reg_516.read() != ap_const_lv5_0);
}

void Fullc2_Cal::thread_ret_V_fu_241_p2() {
    ret_V_fu_241_p2 = (!r_V_reg_500.read().is_01() || !sext_ln728_fu_237_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(r_V_reg_500.read()) + sc_bigint<19>(sext_ln728_fu_237_p1.read()));
}

void Fullc2_Cal::thread_sext_ln203_fu_180_p1() {
    sext_ln203_fu_180_p1 = esl_sext<12,4>(bias2_V_q0.read());
}

void Fullc2_Cal::thread_sext_ln728_fu_237_p1() {
    sext_ln728_fu_237_p1 = esl_sext<19,18>(lhs_V_fu_230_p3.read());
}

void Fullc2_Cal::thread_tmp_31_fu_288_p3() {
    tmp_31_fu_288_p3 = r_V_reg_500.read().range(5, 5);
}

void Fullc2_Cal::thread_tmp_32_fu_312_p3() {
    tmp_32_fu_312_p3 = p_Val2_10_fu_305_p2.read().range(11, 11);
}

void Fullc2_Cal::thread_tmp_35_fu_348_p3() {
    tmp_35_fu_348_p3 = ret_V_fu_241_p2.read().range(18, 18);
}

void Fullc2_Cal::thread_trunc_ln1192_fu_224_p1() {
    trunc_ln1192_fu_224_p1 = r_V_fu_446_p2.read().range(18-1, 0);
}

void Fullc2_Cal::thread_trunc_ln718_fu_227_p1() {
    trunc_ln718_fu_227_p1 = r_V_fu_446_p2.read().range(5-1, 0);
}

void Fullc2_Cal::thread_underflow_fu_434_p2() {
    underflow_fu_434_p2 = (p_Result_s_fu_251_p3.read() & xor_ln786_fu_428_p2.read());
}

void Fullc2_Cal::thread_weight2_V_address0() {
    weight2_V_address0 =  (sc_lv<13>) (zext_ln1116_1_fu_207_p1.read());
}

void Fullc2_Cal::thread_weight2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        weight2_V_ce0 = ap_const_logic_1;
    } else {
        weight2_V_ce0 = ap_const_logic_0;
    }
}

void Fullc2_Cal::thread_xor_ln416_1_fu_320_p2() {
    xor_ln416_1_fu_320_p2 = (tmp_32_fu_312_p3.read() ^ ap_const_lv1_1);
}

void Fullc2_Cal::thread_xor_ln416_2_fu_362_p2() {
    xor_ln416_2_fu_362_p2 = (p_Result_18_fu_274_p3.read() ^ ap_const_lv1_1);
}

void Fullc2_Cal::thread_xor_ln779_fu_356_p2() {
    xor_ln779_fu_356_p2 = (tmp_35_fu_348_p3.read() ^ ap_const_lv1_1);
}

void Fullc2_Cal::thread_xor_ln785_1_fu_404_p2() {
    xor_ln785_1_fu_404_p2 = (p_Result_s_fu_251_p3.read() ^ ap_const_lv1_1);
}

void Fullc2_Cal::thread_xor_ln785_fu_392_p2() {
    xor_ln785_fu_392_p2 = (Range2_all_ones_fu_340_p3.read() ^ carry_1_fu_326_p2.read());
}

void Fullc2_Cal::thread_xor_ln786_fu_428_p2() {
    xor_ln786_fu_428_p2 = (or_ln786_fu_422_p2.read() ^ ap_const_lv1_1);
}

void Fullc2_Cal::thread_zext_ln1116_1_fu_207_p1() {
    zext_ln1116_1_fu_207_p1 = esl_zext<64,13>(add_ln1116_fu_201_p2.read());
}

void Fullc2_Cal::thread_zext_ln1116_fu_197_p1() {
    zext_ln1116_fu_197_p1 = esl_zext<13,7>(j_0_reg_144.read());
}

void Fullc2_Cal::thread_zext_ln191_fu_174_p1() {
    zext_ln191_fu_174_p1 = esl_zext<64,7>(i_0_reg_121.read());
}

void Fullc2_Cal::thread_zext_ln194_fu_212_p1() {
    zext_ln194_fu_212_p1 = esl_zext<64,7>(j_0_reg_144.read());
}

void Fullc2_Cal::thread_zext_ln415_fu_301_p1() {
    zext_ln415_fu_301_p1 = esl_zext<12,1>(and_ln415_fu_295_p2.read());
}

void Fullc2_Cal::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln190_fu_162_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln193_fu_185_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

