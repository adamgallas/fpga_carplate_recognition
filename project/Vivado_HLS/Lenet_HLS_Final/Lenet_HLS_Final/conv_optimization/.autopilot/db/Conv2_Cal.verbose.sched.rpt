

================================================================
== Vivado HLS Report for 'Conv2_Cal'
================================================================
* Date:           Wed Aug 19 09:56:43 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        Lenet_HLS_Final
* Solution:       conv_optimization
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.747 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |      Interval     | Pipeline|
    |   min   |   max   |    min    |    max    |   min   |   max   |   Type  |
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  1772182|  1772182| 17.722 ms | 17.722 ms |  1772182|  1772182|   none  |
    +---------+---------+-----------+-----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- CONV2_SIZE1         |  1765560|  1765560|    353112|          -|          -|     5|    no    |
        | + CONV2_SIZE2        |   353110|   353110|     70622|          -|          -|     5|    no    |
        |  ++ CONV2_ROW        |    70620|    70620|      7062|          -|          -|    10|    no    |
        |   +++ CONV2_COL      |     7060|     7060|       706|          -|          -|    10|    no    |
        |    ++++ CONV2_OUTD   |      704|      704|        44|          -|          -|    16|    no    |
        |     +++++ CONV2_IND  |       42|       42|         7|          -|          -|     6|    no    |
        |- CONV2_BIAS_SIZE1    |     6620|     6620|       662|          -|          -|    10|    no    |
        | + CONV2_BIAS_SIZE2   |      660|      660|        66|          -|          -|    10|    no    |
        |  ++ CONV2_BIAS_OUTD  |       64|       64|         4|          -|          -|    16|    no    |
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 16 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 8 6 
8 --> 9 
9 --> 10 
10 --> 11 14 
11 --> 12 
12 --> 13 
13 --> 7 
14 --> 15 
15 --> 13 
16 --> 17 
17 --> 18 16 
18 --> 19 17 
19 --> 20 
20 --> 21 
21 --> 18 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 22 [1/1] (1.76ns)   --->   "br label %1" [src/lenet.cpp:124]   --->   Operation 22 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %CONV2_SIZE1_end ]"   --->   Operation 23 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln124 = zext i3 %i_0 to i4" [src/lenet.cpp:124]   --->   Operation 24 'zext' 'zext_ln124' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.13ns)   --->   "%icmp_ln124 = icmp eq i3 %i_0, -3" [src/lenet.cpp:124]   --->   Operation 25 'icmp' 'icmp_ln124' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 26 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, 1" [src/lenet.cpp:124]   --->   Operation 27 'add' 'i' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln124, label %.preheader.preheader, label %CONV2_SIZE1_begin" [src/lenet.cpp:124]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str30) nounwind" [src/lenet.cpp:124]   --->   Operation 29 'specloopname' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str30) nounwind" [src/lenet.cpp:124]   --->   Operation 30 'specregionbegin' 'tmp' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i3 %i_0 to i64" [src/lenet.cpp:137]   --->   Operation 31 'zext' 'zext_ln137' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.76ns)   --->   "br label %2" [src/lenet.cpp:126]   --->   Operation 32 'br' <Predicate = (!icmp_ln124)> <Delay = 1.76>
ST_2 : Operation 33 [1/1] (1.76ns)   --->   "br label %.preheader" [src/lenet.cpp:149]   --->   Operation 33 'br' <Predicate = (icmp_ln124)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %CONV2_SIZE1_begin ], [ %j, %CONV2_SIZE2_end ]"   --->   Operation 34 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i3 %j_0 to i4" [src/lenet.cpp:126]   --->   Operation 35 'zext' 'zext_ln126' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.13ns)   --->   "%icmp_ln126 = icmp eq i3 %j_0, -3" [src/lenet.cpp:126]   --->   Operation 36 'icmp' 'icmp_ln126' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty_155 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind"   --->   Operation 37 'speclooptripcount' 'empty_155' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.65ns)   --->   "%j = add i3 %j_0, 1" [src/lenet.cpp:126]   --->   Operation 38 'add' 'j' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln126, label %CONV2_SIZE1_end, label %CONV2_SIZE2_begin" [src/lenet.cpp:126]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str31) nounwind" [src/lenet.cpp:126]   --->   Operation 40 'specloopname' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str31) nounwind" [src/lenet.cpp:126]   --->   Operation 41 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i3 %j_0 to i13" [src/lenet.cpp:128]   --->   Operation 42 'zext' 'zext_ln128' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.76ns)   --->   "br label %3" [src/lenet.cpp:128]   --->   Operation 43 'br' <Predicate = (!icmp_ln126)> <Delay = 1.76>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty_164 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str30, i32 %tmp) nounwind" [src/lenet.cpp:147]   --->   Operation 44 'specregionend' 'empty_164' <Predicate = (icmp_ln126)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "br label %1" [src/lenet.cpp:124]   --->   Operation 45 'br' <Predicate = (icmp_ln126)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%row_0 = phi i4 [ 0, %CONV2_SIZE2_begin ], [ %row, %CONV2_ROW_end ]"   --->   Operation 46 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.30ns)   --->   "%icmp_ln128 = icmp eq i4 %row_0, -6" [src/lenet.cpp:128]   --->   Operation 47 'icmp' 'icmp_ln128' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%empty_156 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 48 'speclooptripcount' 'empty_156' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.73ns)   --->   "%row = add i4 %row_0, 1" [src/lenet.cpp:128]   --->   Operation 49 'add' 'row' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %icmp_ln128, label %CONV2_SIZE2_end, label %CONV2_ROW_begin" [src/lenet.cpp:128]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str32) nounwind" [src/lenet.cpp:128]   --->   Operation 51 'specloopname' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str32) nounwind" [src/lenet.cpp:128]   --->   Operation 52 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln137_1 = zext i4 %row_0 to i9" [src/lenet.cpp:137]   --->   Operation 53 'zext' 'zext_ln137_1' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (1.73ns)   --->   "%add_ln137 = add i4 %row_0, %zext_ln124" [src/lenet.cpp:137]   --->   Operation 54 'add' 'add_ln137' <Predicate = (!icmp_ln128)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i4 %add_ln137 to i9" [src/lenet.cpp:130]   --->   Operation 55 'zext' 'zext_ln130' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (1.76ns)   --->   "br label %4" [src/lenet.cpp:130]   --->   Operation 56 'br' <Predicate = (!icmp_ln128)> <Delay = 1.76>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%empty_163 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str31, i32 %tmp_s) nounwind" [src/lenet.cpp:146]   --->   Operation 57 'specregionend' 'empty_163' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "br label %2" [src/lenet.cpp:126]   --->   Operation 58 'br' <Predicate = (icmp_ln128)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.76>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%col_0 = phi i4 [ 0, %CONV2_ROW_begin ], [ %col, %CONV2_COL_end ]"   --->   Operation 59 'phi' 'col_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (1.30ns)   --->   "%icmp_ln130 = icmp eq i4 %col_0, -6" [src/lenet.cpp:130]   --->   Operation 60 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%empty_157 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 61 'speclooptripcount' 'empty_157' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (1.73ns)   --->   "%col = add i4 %col_0, 1" [src/lenet.cpp:130]   --->   Operation 62 'add' 'col' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln130, label %CONV2_ROW_end, label %CONV2_COL_begin" [src/lenet.cpp:130]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str33) nounwind" [src/lenet.cpp:130]   --->   Operation 64 'specloopname' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str33) nounwind" [src/lenet.cpp:130]   --->   Operation 65 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln137_2 = zext i4 %col_0 to i12" [src/lenet.cpp:137]   --->   Operation 66 'zext' 'zext_ln137_2' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (1.73ns)   --->   "%add_ln137_1 = add i4 %col_0, %zext_ln126" [src/lenet.cpp:137]   --->   Operation 67 'add' 'add_ln137_1' <Predicate = (!icmp_ln130)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i4 %add_ln137_1 to i12" [src/lenet.cpp:133]   --->   Operation 68 'zext' 'zext_ln133' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.76ns)   --->   "br label %5" [src/lenet.cpp:133]   --->   Operation 69 'br' <Predicate = (!icmp_ln130)> <Delay = 1.76>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%empty_162 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str32, i32 %tmp_2) nounwind" [src/lenet.cpp:145]   --->   Operation 70 'specregionend' 'empty_162' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "br label %3" [src/lenet.cpp:128]   --->   Operation 71 'br' <Predicate = (icmp_ln130)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.48>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%out_d_0 = phi i5 [ 0, %CONV2_COL_begin ], [ %out_d, %CONV2_OUTD_end ]"   --->   Operation 72 'phi' 'out_d_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (1.36ns)   --->   "%icmp_ln133 = icmp eq i5 %out_d_0, -16" [src/lenet.cpp:133]   --->   Operation 73 'icmp' 'icmp_ln133' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%empty_158 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 74 'speclooptripcount' 'empty_158' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (1.78ns)   --->   "%out_d = add i5 %out_d_0, 1" [src/lenet.cpp:133]   --->   Operation 75 'add' 'out_d' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %icmp_ln133, label %CONV2_COL_end, label %CONV2_OUTD_begin" [src/lenet.cpp:133]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str34) nounwind" [src/lenet.cpp:133]   --->   Operation 77 'specloopname' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str34) nounwind" [src/lenet.cpp:133]   --->   Operation 78 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %out_d_0, i3 0)" [src/lenet.cpp:137]   --->   Operation 79 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln1117 = zext i8 %tmp_7 to i9" [src/lenet.cpp:137]   --->   Operation 80 'zext' 'zext_ln1117' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_8 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %out_d_0, i1 false)" [src/lenet.cpp:137]   --->   Operation 81 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln1117_1 = zext i6 %tmp_8 to i9" [src/lenet.cpp:137]   --->   Operation 82 'zext' 'zext_ln1117_1' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.91ns)   --->   "%sub_ln1117 = sub i9 %zext_ln1117, %zext_ln1117_1" [src/lenet.cpp:137]   --->   Operation 83 'sub' 'sub_ln1117' <Predicate = (!icmp_ln133)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln1117 = sext i9 %sub_ln1117 to i10" [src/lenet.cpp:137]   --->   Operation 84 'sext' 'sext_ln1117' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln203 = add i9 %zext_ln1117, %zext_ln1117_1" [src/lenet.cpp:137]   --->   Operation 85 'add' 'add_ln203' <Predicate = (!icmp_ln133)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 86 [1/1] (3.69ns) (root node of TernaryAdder)   --->   "%add_ln203_12 = add i9 %zext_ln137_1, %add_ln203" [src/lenet.cpp:137]   --->   Operation 86 'add' 'add_ln203_12' <Predicate = (!icmp_ln133)> <Delay = 3.69> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%p_shl_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln203_12, i3 0)" [src/lenet.cpp:137]   --->   Operation 87 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_46 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln203_12, i1 false)" [src/lenet.cpp:137]   --->   Operation 88 'bitconcatenate' 'tmp_46' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i10 %tmp_46 to i12" [src/lenet.cpp:137]   --->   Operation 89 'zext' 'zext_ln203' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln203_13 = add i12 %p_shl_cast, %zext_ln203" [src/lenet.cpp:137]   --->   Operation 90 'add' 'add_ln203_13' <Predicate = (!icmp_ln133)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 91 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln203_14 = add i12 %zext_ln137_2, %add_ln203_13" [src/lenet.cpp:137]   --->   Operation 91 'add' 'add_ln203_14' <Predicate = (!icmp_ln133)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln203_13 = zext i12 %add_ln203_14 to i64" [src/lenet.cpp:137]   --->   Operation 92 'zext' 'zext_ln203_13' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%layer4_V_addr_6 = getelementptr [1600 x i12]* @layer4_V, i64 0, i64 %zext_ln203_13" [src/lenet.cpp:137]   --->   Operation 93 'getelementptr' 'layer4_V_addr_6' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (1.76ns)   --->   "br label %6" [src/lenet.cpp:135]   --->   Operation 94 'br' <Predicate = (!icmp_ln133)> <Delay = 1.76>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%empty_161 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str33, i32 %tmp_3) nounwind" [src/lenet.cpp:144]   --->   Operation 95 'specregionend' 'empty_161' <Predicate = (icmp_ln133)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "br label %4" [src/lenet.cpp:130]   --->   Operation 96 'br' <Predicate = (icmp_ln133)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.57>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%in_d_0 = phi i3 [ 0, %CONV2_OUTD_begin ], [ %in_d, %12 ]"   --->   Operation 97 'phi' 'in_d_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (1.13ns)   --->   "%icmp_ln135 = icmp eq i3 %in_d_0, -2" [src/lenet.cpp:135]   --->   Operation 98 'icmp' 'icmp_ln135' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%empty_159 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6) nounwind"   --->   Operation 99 'speclooptripcount' 'empty_159' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (1.65ns)   --->   "%in_d = add i3 %in_d_0, 1" [src/lenet.cpp:135]   --->   Operation 100 'add' 'in_d' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "br i1 %icmp_ln135, label %CONV2_OUTD_end, label %7" [src/lenet.cpp:135]   --->   Operation 101 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln136)   --->   "%or_ln136 = or i3 %i_0, %in_d_0" [src/lenet.cpp:136]   --->   Operation 102 'or' 'or_ln136' <Predicate = (!icmp_ln135)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln136)   --->   "%or_ln136_1 = or i3 %or_ln136, %j_0" [src/lenet.cpp:136]   --->   Operation 103 'or' 'or_ln136_1' <Predicate = (!icmp_ln135)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (1.13ns) (out node of the LUT)   --->   "%icmp_ln136 = icmp eq i3 %or_ln136_1, 0" [src/lenet.cpp:136]   --->   Operation 104 'icmp' 'icmp_ln136' <Predicate = (!icmp_ln135)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln1117_2 = zext i3 %in_d_0 to i10" [src/lenet.cpp:137]   --->   Operation 105 'zext' 'zext_ln1117_2' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 106 [1/1] (1.82ns)   --->   "%add_ln1117 = add i10 %sext_ln1117, %zext_ln1117_2" [src/lenet.cpp:137]   --->   Operation 106 'add' 'add_ln1117' <Predicate = (!icmp_ln135)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%sext_ln1117_1 = sext i10 %add_ln1117 to i64" [src/lenet.cpp:137]   --->   Operation 107 'sext' 'sext_ln1117_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_47 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln1117, i2 0)" [src/lenet.cpp:137]   --->   Operation 108 'bitconcatenate' 'tmp_47' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%sext_ln1117_2 = sext i12 %tmp_47 to i64" [src/lenet.cpp:137]   --->   Operation 109 'sext' 'sext_ln1117_2' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1117_1 = add i64 %sext_ln1117_1, %sext_ln1117_2" [src/lenet.cpp:137]   --->   Operation 110 'add' 'add_ln1117_1' <Predicate = (!icmp_ln135)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 111 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln1117_2 = add i64 %add_ln1117_1, %zext_ln137" [src/lenet.cpp:137]   --->   Operation 111 'add' 'add_ln1117_2' <Predicate = (!icmp_ln135)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln1117 = trunc i64 %add_ln1117_2 to i13" [src/lenet.cpp:137]   --->   Operation 112 'trunc' 'trunc_ln1117' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln1117_1 = trunc i64 %add_ln1117_2 to i11" [src/lenet.cpp:137]   --->   Operation 113 'trunc' 'trunc_ln1117_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_10 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %in_d_0, i4 0)" [src/lenet.cpp:137]   --->   Operation 114 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i7 %tmp_10 to i8" [src/lenet.cpp:137]   --->   Operation 115 'zext' 'zext_ln1116' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_11 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %in_d_0, i1 false)" [src/lenet.cpp:137]   --->   Operation 116 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln1116_3 = zext i4 %tmp_11 to i8" [src/lenet.cpp:137]   --->   Operation 117 'zext' 'zext_ln1116_3' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (1.87ns)   --->   "%sub_ln1116 = sub i8 %zext_ln1116, %zext_ln1116_3" [src/lenet.cpp:137]   --->   Operation 118 'sub' 'sub_ln1116' <Predicate = (!icmp_ln135)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln1116 = sext i8 %sub_ln1116 to i9" [src/lenet.cpp:137]   --->   Operation 119 'sext' 'sext_ln1116' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 120 [1/1] (1.91ns)   --->   "%add_ln1116 = add i9 %sext_ln1116, %zext_ln130" [src/lenet.cpp:137]   --->   Operation 120 'add' 'add_ln1116' <Predicate = (!icmp_ln135)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln1116 = trunc i9 %add_ln1116 to i8" [src/lenet.cpp:137]   --->   Operation 121 'trunc' 'trunc_ln1116' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%p_shl6_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %trunc_ln1116, i4 0)" [src/lenet.cpp:137]   --->   Operation 122 'bitconcatenate' 'p_shl6_cast' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_48 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln1116, i1 false)" [src/lenet.cpp:137]   --->   Operation 123 'bitconcatenate' 'tmp_48' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%sext_ln1116_1 = sext i10 %tmp_48 to i12" [src/lenet.cpp:137]   --->   Operation 124 'sext' 'sext_ln1116_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln1116_1 = sub i12 %p_shl6_cast, %sext_ln1116_1" [src/lenet.cpp:137]   --->   Operation 125 'sub' 'sub_ln1116_1' <Predicate = (!icmp_ln135)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 126 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln1116_1 = add i12 %sub_ln1116_1, %zext_ln133" [src/lenet.cpp:137]   --->   Operation 126 'add' 'add_ln1116_1' <Predicate = (!icmp_ln135)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 127 [1/1] (0.00ns)   --->   "%empty_160 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str34, i32 %tmp_4) nounwind" [src/lenet.cpp:143]   --->   Operation 127 'specregionend' 'empty_160' <Predicate = (icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 128 [1/1] (0.00ns)   --->   "br label %5" [src/lenet.cpp:133]   --->   Operation 128 'br' <Predicate = (icmp_ln135)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.06>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "%p_shl10_cast = call i13 @_ssdm_op_BitConcatenate.i13.i11.i2(i11 %trunc_ln1117_1, i2 0)" [src/lenet.cpp:137]   --->   Operation 129 'bitconcatenate' 'p_shl10_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1117_3 = add i13 %trunc_ln1117, %p_shl10_cast" [src/lenet.cpp:137]   --->   Operation 130 'add' 'add_ln1117_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 131 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln1117_4 = add i13 %add_ln1117_3, %zext_ln128" [src/lenet.cpp:137]   --->   Operation 131 'add' 'add_ln1117_4' <Predicate = true> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln1117_3 = zext i13 %add_ln1117_4 to i64" [src/lenet.cpp:137]   --->   Operation 132 'zext' 'zext_ln1117_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%conv2_V_addr = getelementptr [2400 x i6]* @conv2_V, i64 0, i64 %zext_ln1117_3" [src/lenet.cpp:137]   --->   Operation 133 'getelementptr' 'conv2_V_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln1116_4 = zext i12 %add_ln1116_1 to i64" [src/lenet.cpp:137]   --->   Operation 134 'zext' 'zext_ln1116_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "%layer3_V_addr = getelementptr [1176 x i12]* @layer3_V, i64 0, i64 %zext_ln1116_4" [src/lenet.cpp:137]   --->   Operation 135 'getelementptr' 'layer3_V_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 136 [2/2] (3.25ns)   --->   "%layer3_V_load = load i12* %layer3_V_addr, align 2" [src/lenet.cpp:137]   --->   Operation 136 'load' 'layer3_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_8 : Operation 137 [2/2] (3.25ns)   --->   "%conv2_V_load = load i6* %conv2_V_addr, align 1" [src/lenet.cpp:137]   --->   Operation 137 'load' 'conv2_V_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 16> <ROM>

State 9 <SV = 8> <Delay = 3.25>
ST_9 : Operation 138 [1/2] (3.25ns)   --->   "%layer3_V_load = load i12* %layer3_V_addr, align 2" [src/lenet.cpp:137]   --->   Operation 138 'load' 'layer3_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_9 : Operation 139 [1/2] (3.25ns)   --->   "%conv2_V_load = load i6* %conv2_V_addr, align 1" [src/lenet.cpp:137]   --->   Operation 139 'load' 'conv2_V_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 16> <ROM>

State 10 <SV = 9> <Delay = 6.38>
ST_10 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str35) nounwind" [src/lenet.cpp:135]   --->   Operation 140 'specloopname' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%sext_ln1117_3 = sext i12 %layer3_V_load to i19" [src/lenet.cpp:137]   --->   Operation 141 'sext' 'sext_ln1117_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i6 %conv2_V_load to i19" [src/lenet.cpp:137]   --->   Operation 142 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (6.38ns) (root node of the DSP)   --->   "%r_V = mul i19 %sext_ln1118, %sext_ln1117_3" [src/lenet.cpp:137]   --->   Operation 143 'mul' 'r_V' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %icmp_ln136, label %_ZN13ap_fixed_baseILi12ELi6ELb1EL9ap_q_mode1EL9ap_o_mode0ELi0EE19quantization_adjustEbbb.exit.i.i.i.i_ifconv, label %_ZN13ap_fixed_baseILi25ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi12ELi6ELb1ELS0_1ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv" [src/lenet.cpp:136]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 145 [2/2] (3.25ns)   --->   "%p_Val2_21 = load i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:140]   --->   Operation 145 'load' 'p_Val2_21' <Predicate = (!icmp_ln136)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>

State 11 <SV = 10> <Delay = 7.91>
ST_11 : Operation 146 [1/2] (3.25ns)   --->   "%p_Val2_21 = load i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:140]   --->   Operation 146 'load' 'p_Val2_21' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_11 : Operation 147 [1/1] (0.00ns)   --->   "%lhs_V_1 = call i18 @_ssdm_op_BitConcatenate.i18.i12.i6(i12 %p_Val2_21, i6 0)" [src/lenet.cpp:140]   --->   Operation 147 'bitconcatenate' 'lhs_V_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i18 %lhs_V_1 to i19" [src/lenet.cpp:140]   --->   Operation 148 'sext' 'sext_ln728' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln1192 = trunc i19 %r_V to i18" [src/lenet.cpp:140]   --->   Operation 149 'trunc' 'trunc_ln1192' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 150 [1/1] (2.13ns)   --->   "%ret_V = add i19 %r_V, %sext_ln728" [src/lenet.cpp:140]   --->   Operation 150 'add' 'ret_V' <Predicate = true> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 151 [1/1] (2.13ns)   --->   "%add_ln1192_3 = add i18 %lhs_V_1, %trunc_ln1192" [src/lenet.cpp:140]   --->   Operation 151 'add' 'add_ln1192_3' <Predicate = true> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 152 [1/1] (0.00ns)   --->   "%p_Result_24 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %ret_V, i32 18)" [src/lenet.cpp:140]   --->   Operation 152 'bitselect' 'p_Result_24' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_25)   --->   "%p_Val2_24 = call i12 @_ssdm_op_PartSelect.i12.i18.i32.i32(i18 %add_ln1192_3, i32 6, i32 17)" [src/lenet.cpp:140]   --->   Operation 153 'partselect' 'p_Val2_24' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 154 [1/1] (0.00ns)   --->   "%trunc_ln718_1 = trunc i19 %r_V to i5" [src/lenet.cpp:140]   --->   Operation 154 'trunc' 'trunc_ln718_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 155 [1/1] (1.36ns)   --->   "%r_3 = icmp ne i5 %trunc_ln718_1, 0" [src/lenet.cpp:140]   --->   Operation 155 'icmp' 'r_3' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 156 [1/1] (0.00ns)   --->   "%p_Result_25 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %add_ln1192_3, i32 17)" [src/lenet.cpp:140]   --->   Operation 156 'bitselect' 'p_Result_25' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_25)   --->   "%or_ln406 = or i1 %p_Result_24, %r_3" [src/lenet.cpp:140]   --->   Operation 157 'or' 'or_ln406' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_25)   --->   "%tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 5)" [src/lenet.cpp:140]   --->   Operation 158 'bitselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_25)   --->   "%and_ln415_1 = and i1 %tmp_58, %or_ln406" [src/lenet.cpp:140]   --->   Operation 159 'and' 'and_ln415_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_25)   --->   "%zext_ln415_1 = zext i1 %and_ln415_1 to i12" [src/lenet.cpp:140]   --->   Operation 160 'zext' 'zext_ln415_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 161 [1/1] (1.54ns) (out node of the LUT)   --->   "%p_Val2_25 = add i12 %zext_ln415_1, %p_Val2_24" [src/lenet.cpp:140]   --->   Operation 161 'add' 'p_Val2_25' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_25, i32 11)" [src/lenet.cpp:140]   --->   Operation 162 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node carry_5)   --->   "%xor_ln416_7 = xor i1 %tmp_59, true" [src/lenet.cpp:140]   --->   Operation 163 'xor' 'xor_ln416_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 164 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_5 = and i1 %p_Result_25, %xor_ln416_7" [src/lenet.cpp:140]   --->   Operation 164 'and' 'carry_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 165 [1/1] (0.00ns)   --->   "%p_Result_26 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_25, i32 11)" [src/lenet.cpp:140]   --->   Operation 165 'bitselect' 'p_Result_26' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "%Range2_all_ones_1 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %ret_V, i32 18)" [src/lenet.cpp:140]   --->   Operation 166 'bitselect' 'Range2_all_ones_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%tmp_62 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %ret_V, i32 18)" [src/lenet.cpp:140]   --->   Operation 167 'bitselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%xor_ln779_1 = xor i1 %tmp_62, true" [src/lenet.cpp:140]   --->   Operation 168 'xor' 'xor_ln779_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%xor_ln416_8 = xor i1 %p_Result_25, true" [src/lenet.cpp:140]   --->   Operation 169 'xor' 'xor_ln416_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%or_ln416_5 = or i1 %tmp_59, %xor_ln416_8" [src/lenet.cpp:140]   --->   Operation 170 'or' 'or_ln416_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%or_ln416 = or i1 %or_ln416_5, %xor_ln779_1" [src/lenet.cpp:140]   --->   Operation 171 'or' 'or_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_4)   --->   "%deleted_ones_2 = and i1 %Range2_all_ones_1, %or_ln416" [src/lenet.cpp:140]   --->   Operation 172 'and' 'deleted_ones_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 173 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_4 = and i1 %p_Result_26, %deleted_ones_2" [src/lenet.cpp:140]   --->   Operation 173 'and' 'and_ln786_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 174 [1/1] (3.25ns)   --->   "store i12 %p_Val2_25, i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:140]   --->   Operation 174 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_12 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node underflow_2)   --->   "%and_ln781_1 = and i1 %carry_5, %Range2_all_ones_1" [src/lenet.cpp:140]   --->   Operation 175 'and' 'and_ln781_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node overflow_1)   --->   "%xor_ln785_4 = xor i1 %Range2_all_ones_1, %carry_5" [src/lenet.cpp:140]   --->   Operation 176 'xor' 'xor_ln785_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node overflow_1)   --->   "%or_ln785_1 = or i1 %p_Result_26, %xor_ln785_4" [src/lenet.cpp:140]   --->   Operation 177 'or' 'or_ln785_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node overflow_1)   --->   "%xor_ln785_5 = xor i1 %p_Result_24, true" [src/lenet.cpp:140]   --->   Operation 178 'xor' 'xor_ln785_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 179 [1/1] (0.97ns) (out node of the LUT)   --->   "%overflow_1 = and i1 %or_ln785_1, %xor_ln785_5" [src/lenet.cpp:140]   --->   Operation 179 'and' 'overflow_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node underflow_2)   --->   "%or_ln786_1 = or i1 %and_ln781_1, %and_ln786_4" [src/lenet.cpp:140]   --->   Operation 180 'or' 'or_ln786_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node underflow_2)   --->   "%xor_ln786_2 = xor i1 %or_ln786_1, true" [src/lenet.cpp:140]   --->   Operation 181 'xor' 'xor_ln786_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 182 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow_2 = and i1 %p_Result_24, %xor_ln786_2" [src/lenet.cpp:140]   --->   Operation 182 'and' 'underflow_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 183 [1/1] (0.97ns)   --->   "%or_ln340_4 = or i1 %underflow_2, %overflow_1" [src/lenet.cpp:140]   --->   Operation 183 'or' 'or_ln340_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 184 [1/1] (0.00ns)   --->   "br i1 %or_ln340_4, label %8, label %_ZN13ap_fixed_baseILi12ELi6ELb1EL9ap_q_mode1EL9ap_o_mode0ELi0EEpLILi24ELi12ELb1ELS0_5ELS1_3ELi0EEERS2_RKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit" [src/lenet.cpp:140]   --->   Operation 184 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 185 [1/1] (0.00ns)   --->   "br i1 %overflow_1, label %9, label %10" [src/lenet.cpp:140]   --->   Operation 185 'br' <Predicate = (or_ln340_4)> <Delay = 0.00>
ST_12 : Operation 186 [1/1] (0.00ns)   --->   "br i1 %underflow_2, label %11, label %._crit_edge424" [src/lenet.cpp:140]   --->   Operation 186 'br' <Predicate = (or_ln340_4 & !overflow_1)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 3.25>
ST_13 : Operation 187 [1/1] (3.25ns)   --->   "store i12 -2048, i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:140]   --->   Operation 187 'store' <Predicate = (!icmp_ln136 & or_ln340_4 & !overflow_1 & underflow_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_13 : Operation 188 [1/1] (0.00ns)   --->   "br label %._crit_edge424" [src/lenet.cpp:140]   --->   Operation 188 'br' <Predicate = (!icmp_ln136 & or_ln340_4 & !overflow_1 & underflow_2)> <Delay = 0.00>
ST_13 : Operation 189 [1/1] (0.00ns)   --->   "br label %_ZN13ap_fixed_baseILi12ELi6ELb1EL9ap_q_mode1EL9ap_o_mode0ELi0EEpLILi24ELi12ELb1ELS0_5ELS1_3ELi0EEERS2_RKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit"   --->   Operation 189 'br' <Predicate = (!icmp_ln136 & or_ln340_4 & !overflow_1)> <Delay = 0.00>
ST_13 : Operation 190 [1/1] (3.25ns)   --->   "store i12 2047, i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:140]   --->   Operation 190 'store' <Predicate = (!icmp_ln136 & or_ln340_4 & overflow_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_13 : Operation 191 [1/1] (0.00ns)   --->   "br label %_ZN13ap_fixed_baseILi12ELi6ELb1EL9ap_q_mode1EL9ap_o_mode0ELi0EEpLILi24ELi12ELb1ELS0_5ELS1_3ELi0EEERS2_RKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit" [src/lenet.cpp:140]   --->   Operation 191 'br' <Predicate = (!icmp_ln136 & or_ln340_4 & overflow_1)> <Delay = 0.00>
ST_13 : Operation 192 [1/1] (0.00ns)   --->   "br label %12"   --->   Operation 192 'br' <Predicate = (!icmp_ln136)> <Delay = 0.00>
ST_13 : Operation 193 [1/1] (0.00ns)   --->   "br label %6" [src/lenet.cpp:135]   --->   Operation 193 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 10> <Delay = 8.49>
ST_14 : Operation 194 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 16)" [src/lenet.cpp:137]   --->   Operation 194 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%p_Val2_19 = call i12 @_ssdm_op_PartSelect.i12.i19.i32.i32(i19 %r_V, i32 6, i32 17)" [src/lenet.cpp:137]   --->   Operation 195 'partselect' 'p_Val2_19' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln718 = trunc i19 %r_V to i5" [src/lenet.cpp:137]   --->   Operation 196 'trunc' 'trunc_ln718' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 197 [1/1] (1.36ns)   --->   "%r_2 = icmp ne i5 %trunc_ln718, 0" [src/lenet.cpp:137]   --->   Operation 197 'icmp' 'r_2' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 198 [1/1] (0.00ns)   --->   "%p_Result_22 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 17)" [src/lenet.cpp:137]   --->   Operation 198 'bitselect' 'p_Result_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%r = or i1 %p_Result_s, %r_2" [src/lenet.cpp:137]   --->   Operation 199 'or' 'r' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 5)" [src/lenet.cpp:137]   --->   Operation 200 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%and_ln415 = and i1 %tmp_51, %r" [src/lenet.cpp:137]   --->   Operation 201 'and' 'and_ln415' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%zext_ln415 = zext i1 %and_ln415 to i12" [src/lenet.cpp:137]   --->   Operation 202 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 203 [1/1] (1.54ns) (out node of the LUT)   --->   "%p_Val2_20 = add i12 %zext_ln415, %p_Val2_19" [src/lenet.cpp:137]   --->   Operation 203 'add' 'p_Val2_20' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 204 [1/1] (0.00ns)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_20, i32 11)" [src/lenet.cpp:137]   --->   Operation 204 'bitselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 205 [1/1] (0.97ns)   --->   "%xor_ln416_5 = xor i1 %tmp_52, true" [src/lenet.cpp:137]   --->   Operation 205 'xor' 'xor_ln416_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node and_ln781)   --->   "%carry_3 = and i1 %p_Result_22, %xor_ln416_5" [src/lenet.cpp:137]   --->   Operation 206 'and' 'carry_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 207 [1/1] (0.00ns)   --->   "%p_Result_23 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_20, i32 11)" [src/lenet.cpp:137]   --->   Operation 207 'bitselect' 'p_Result_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 208 [1/1] (0.00ns)   --->   "%Range2_all_ones = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 18)" [src/lenet.cpp:137]   --->   Operation 208 'bitselect' 'Range2_all_ones' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%and_ln777 = and i1 %p_Result_22, %xor_ln416_5" [src/lenet.cpp:137]   --->   Operation 209 'and' 'and_ln777' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 18)" [src/lenet.cpp:137]   --->   Operation 210 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln779 = xor i1 %tmp_55, true" [src/lenet.cpp:137]   --->   Operation 211 'xor' 'xor_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln416_6 = xor i1 %p_Result_22, true" [src/lenet.cpp:137]   --->   Operation 212 'xor' 'xor_ln416_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%or_ln416_3 = or i1 %tmp_52, %xor_ln416_6" [src/lenet.cpp:137]   --->   Operation 213 'or' 'or_ln416_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%or_ln416_4 = or i1 %or_ln416_3, %xor_ln779" [src/lenet.cpp:137]   --->   Operation 214 'or' 'or_ln416_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%deleted_ones = and i1 %Range2_all_ones, %or_ln416_4" [src/lenet.cpp:137]   --->   Operation 215 'and' 'deleted_ones' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 216 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln781 = and i1 %carry_3, %Range2_all_ones" [src/lenet.cpp:137]   --->   Operation 216 'and' 'and_ln781' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%xor_ln785 = xor i1 %Range2_all_ones, %and_ln777" [src/lenet.cpp:137]   --->   Operation 217 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%or_ln785 = or i1 %p_Result_23, %xor_ln785" [src/lenet.cpp:137]   --->   Operation 218 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 219 [1/1] (0.97ns)   --->   "%xor_ln785_3 = xor i1 %p_Result_s, true" [src/lenet.cpp:137]   --->   Operation 219 'xor' 'xor_ln785_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_1)   --->   "%overflow = and i1 %or_ln785, %xor_ln785_3" [src/lenet.cpp:137]   --->   Operation 220 'and' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 221 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %p_Result_23, %deleted_ones" [src/lenet.cpp:137]   --->   Operation 221 'and' 'and_ln786' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%or_ln786 = or i1 %and_ln781, %and_ln786" [src/lenet.cpp:137]   --->   Operation 222 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%xor_ln786_1 = xor i1 %or_ln786, true" [src/lenet.cpp:137]   --->   Operation 223 'xor' 'xor_ln786_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 224 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786_1" [src/lenet.cpp:137]   --->   Operation 224 'and' 'underflow' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 225 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln340_1 = or i1 %underflow, %overflow" [src/lenet.cpp:137]   --->   Operation 225 'or' 'or_ln340_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%or_ln340_3 = or i1 %and_ln786, %xor_ln785_3" [src/lenet.cpp:137]   --->   Operation 226 'or' 'or_ln340_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%or_ln340_2 = or i1 %or_ln340_3, %and_ln781" [src/lenet.cpp:137]   --->   Operation 227 'or' 'or_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 228 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln340 = select i1 %or_ln340_1, i12 2047, i12 %p_Val2_20" [src/lenet.cpp:137]   --->   Operation 228 'select' 'select_ln340' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_3)   --->   "%select_ln388 = select i1 %underflow, i12 -2048, i12 %p_Val2_20" [src/lenet.cpp:137]   --->   Operation 229 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 230 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_3 = select i1 %or_ln340_2, i12 %select_ln340, i12 %select_ln388" [src/lenet.cpp:137]   --->   Operation 230 'select' 'select_ln340_3' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 11> <Delay = 3.25>
ST_15 : Operation 231 [1/1] (3.25ns)   --->   "store i12 %select_ln340_3, i12* %layer4_V_addr_6, align 2" [src/lenet.cpp:137]   --->   Operation 231 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_15 : Operation 232 [1/1] (0.00ns)   --->   "br label %12" [src/lenet.cpp:138]   --->   Operation 232 'br' <Predicate = true> <Delay = 0.00>

State 16 <SV = 2> <Delay = 1.76>
ST_16 : Operation 233 [1/1] (0.00ns)   --->   "%i1_0 = phi i4 [ %i_3, %CONV2_BIAS_SIZE1_end ], [ 0, %.preheader.preheader ]"   --->   Operation 233 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 234 [1/1] (1.30ns)   --->   "%icmp_ln149 = icmp eq i4 %i1_0, -6" [src/lenet.cpp:149]   --->   Operation 234 'icmp' 'icmp_ln149' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 235 [1/1] (0.00ns)   --->   "%empty_165 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 235 'speclooptripcount' 'empty_165' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 236 [1/1] (1.73ns)   --->   "%i_3 = add i4 %i1_0, 1" [src/lenet.cpp:149]   --->   Operation 236 'add' 'i_3' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 237 [1/1] (0.00ns)   --->   "br i1 %icmp_ln149, label %15, label %CONV2_BIAS_SIZE1_begin" [src/lenet.cpp:149]   --->   Operation 237 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 238 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str36) nounwind" [src/lenet.cpp:149]   --->   Operation 238 'specloopname' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_16 : Operation 239 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str36) nounwind" [src/lenet.cpp:149]   --->   Operation 239 'specregionbegin' 'tmp_9' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_16 : Operation 240 [1/1] (0.00ns)   --->   "%zext_ln151 = zext i4 %i1_0 to i9" [src/lenet.cpp:151]   --->   Operation 240 'zext' 'zext_ln151' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_16 : Operation 241 [1/1] (1.76ns)   --->   "br label %13" [src/lenet.cpp:151]   --->   Operation 241 'br' <Predicate = (!icmp_ln149)> <Delay = 1.76>
ST_16 : Operation 242 [1/1] (0.00ns)   --->   "ret void" [src/lenet.cpp:157]   --->   Operation 242 'ret' <Predicate = (icmp_ln149)> <Delay = 0.00>

State 17 <SV = 3> <Delay = 1.76>
ST_17 : Operation 243 [1/1] (0.00ns)   --->   "%j2_0 = phi i4 [ 0, %CONV2_BIAS_SIZE1_begin ], [ %j_1, %CONV2_BIAS_SIZE2_end ]"   --->   Operation 243 'phi' 'j2_0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 244 [1/1] (1.30ns)   --->   "%icmp_ln151 = icmp eq i4 %j2_0, -6" [src/lenet.cpp:151]   --->   Operation 244 'icmp' 'icmp_ln151' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 245 [1/1] (0.00ns)   --->   "%empty_166 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 245 'speclooptripcount' 'empty_166' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 246 [1/1] (1.73ns)   --->   "%j_1 = add i4 %j2_0, 1" [src/lenet.cpp:151]   --->   Operation 246 'add' 'j_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 247 [1/1] (0.00ns)   --->   "br i1 %icmp_ln151, label %CONV2_BIAS_SIZE1_end, label %CONV2_BIAS_SIZE2_begin" [src/lenet.cpp:151]   --->   Operation 247 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 248 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str37) nounwind" [src/lenet.cpp:151]   --->   Operation 248 'specloopname' <Predicate = (!icmp_ln151)> <Delay = 0.00>
ST_17 : Operation 249 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str37) nounwind" [src/lenet.cpp:151]   --->   Operation 249 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln151)> <Delay = 0.00>
ST_17 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln153 = zext i4 %j2_0 to i12" [src/lenet.cpp:153]   --->   Operation 250 'zext' 'zext_ln153' <Predicate = (!icmp_ln151)> <Delay = 0.00>
ST_17 : Operation 251 [1/1] (1.76ns)   --->   "br label %14" [src/lenet.cpp:153]   --->   Operation 251 'br' <Predicate = (!icmp_ln151)> <Delay = 1.76>
ST_17 : Operation 252 [1/1] (0.00ns)   --->   "%empty_169 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str36, i32 %tmp_9) nounwind" [src/lenet.cpp:156]   --->   Operation 252 'specregionend' 'empty_169' <Predicate = (icmp_ln151)> <Delay = 0.00>
ST_17 : Operation 253 [1/1] (0.00ns)   --->   "br label %.preheader" [src/lenet.cpp:149]   --->   Operation 253 'br' <Predicate = (icmp_ln151)> <Delay = 0.00>

State 18 <SV = 4> <Delay = 7.48>
ST_18 : Operation 254 [1/1] (0.00ns)   --->   "%out_d3_0 = phi i5 [ 0, %CONV2_BIAS_SIZE2_begin ], [ %out_d_1, %_ZN13ap_fixed_baseILi13ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi12ELi6ELb1ELS0_1ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv ]"   --->   Operation 254 'phi' 'out_d3_0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 255 [1/1] (1.36ns)   --->   "%icmp_ln153 = icmp eq i5 %out_d3_0, -16" [src/lenet.cpp:153]   --->   Operation 255 'icmp' 'icmp_ln153' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 256 [1/1] (0.00ns)   --->   "%empty_167 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 256 'speclooptripcount' 'empty_167' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 257 [1/1] (1.78ns)   --->   "%out_d_1 = add i5 %out_d3_0, 1" [src/lenet.cpp:153]   --->   Operation 257 'add' 'out_d_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 258 [1/1] (0.00ns)   --->   "br i1 %icmp_ln153, label %CONV2_BIAS_SIZE2_end, label %_ZN13ap_fixed_baseILi13ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi12ELi6ELb1ELS0_1ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv" [src/lenet.cpp:153]   --->   Operation 258 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln154 = zext i5 %out_d3_0 to i64" [src/lenet.cpp:154]   --->   Operation 259 'zext' 'zext_ln154' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 260 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %out_d3_0, i3 0)" [src/lenet.cpp:154]   --->   Operation 260 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln1265 = zext i8 %tmp_5 to i9" [src/lenet.cpp:154]   --->   Operation 261 'zext' 'zext_ln1265' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 262 [1/1] (0.00ns)   --->   "%tmp_6 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %out_d3_0, i1 false)" [src/lenet.cpp:154]   --->   Operation 262 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 263 [1/1] (0.00ns)   --->   "%zext_ln1265_1 = zext i6 %tmp_6 to i9" [src/lenet.cpp:154]   --->   Operation 263 'zext' 'zext_ln1265_1' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 264 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1265 = add i9 %zext_ln1265_1, %zext_ln1265" [src/lenet.cpp:154]   --->   Operation 264 'add' 'add_ln1265' <Predicate = (!icmp_ln153)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 265 [1/1] (3.69ns) (root node of TernaryAdder)   --->   "%add_ln1265_1 = add i9 %add_ln1265, %zext_ln151" [src/lenet.cpp:154]   --->   Operation 265 'add' 'add_ln1265_1' <Predicate = (!icmp_ln153)> <Delay = 3.69> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 266 [1/1] (0.00ns)   --->   "%p_shl12_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln1265_1, i3 0)" [src/lenet.cpp:154]   --->   Operation 266 'bitconcatenate' 'p_shl12_cast' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 267 [1/1] (0.00ns)   --->   "%tmp_43 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln1265_1, i1 false)" [src/lenet.cpp:154]   --->   Operation 267 'bitconcatenate' 'tmp_43' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln1265_2 = zext i10 %tmp_43 to i12" [src/lenet.cpp:154]   --->   Operation 268 'zext' 'zext_ln1265_2' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 269 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1265_2 = add i12 %zext_ln1265_2, %p_shl12_cast" [src/lenet.cpp:154]   --->   Operation 269 'add' 'add_ln1265_2' <Predicate = (!icmp_ln153)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 270 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln1265_3 = add i12 %add_ln1265_2, %zext_ln153" [src/lenet.cpp:154]   --->   Operation 270 'add' 'add_ln1265_3' <Predicate = (!icmp_ln153)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 271 [1/1] (0.00ns)   --->   "%zext_ln1265_3 = zext i12 %add_ln1265_3 to i64" [src/lenet.cpp:154]   --->   Operation 271 'zext' 'zext_ln1265_3' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 272 [1/1] (0.00ns)   --->   "%layer4_V_addr = getelementptr [1600 x i12]* @layer4_V, i64 0, i64 %zext_ln1265_3" [src/lenet.cpp:154]   --->   Operation 272 'getelementptr' 'layer4_V_addr' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 273 [1/1] (0.00ns)   --->   "%conv2_bias_V_addr = getelementptr [16 x i3]* @conv2_bias_V, i64 0, i64 %zext_ln154" [src/lenet.cpp:154]   --->   Operation 273 'getelementptr' 'conv2_bias_V_addr' <Predicate = (!icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 274 [2/2] (3.25ns)   --->   "%p_Val2_15 = load i3* %conv2_bias_V_addr, align 1" [src/lenet.cpp:154]   --->   Operation 274 'load' 'p_Val2_15' <Predicate = (!icmp_ln153)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 16> <ROM>
ST_18 : Operation 275 [1/1] (0.00ns)   --->   "%empty_168 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str37, i32 %tmp_1) nounwind" [src/lenet.cpp:155]   --->   Operation 275 'specregionend' 'empty_168' <Predicate = (icmp_ln153)> <Delay = 0.00>
ST_18 : Operation 276 [1/1] (0.00ns)   --->   "br label %13" [src/lenet.cpp:151]   --->   Operation 276 'br' <Predicate = (icmp_ln153)> <Delay = 0.00>

State 19 <SV = 5> <Delay = 3.25>
ST_19 : Operation 277 [2/2] (3.25ns)   --->   "%p_Val2_s = load i12* %layer4_V_addr, align 2" [src/lenet.cpp:154]   --->   Operation 277 'load' 'p_Val2_s' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_19 : Operation 278 [1/2] (3.25ns)   --->   "%p_Val2_15 = load i3* %conv2_bias_V_addr, align 1" [src/lenet.cpp:154]   --->   Operation 278 'load' 'p_Val2_15' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 16> <ROM>

State 20 <SV = 6> <Delay = 8.74>
ST_20 : Operation 279 [1/2] (3.25ns)   --->   "%p_Val2_s = load i12* %layer4_V_addr, align 2" [src/lenet.cpp:154]   --->   Operation 279 'load' 'p_Val2_s' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_20 : Operation 280 [1/1] (0.00ns)   --->   "%lhs_V = sext i12 %p_Val2_s to i13" [src/lenet.cpp:154]   --->   Operation 280 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 281 [1/1] (0.00ns)   --->   "%sext_ln1265 = sext i3 %p_Val2_15 to i12" [src/lenet.cpp:154]   --->   Operation 281 'sext' 'sext_ln1265' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 282 [1/1] (0.00ns)   --->   "%rhs_V = sext i3 %p_Val2_15 to i13" [src/lenet.cpp:154]   --->   Operation 282 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 283 [1/1] (1.54ns)   --->   "%ret_V_2 = add nsw i13 %lhs_V, %rhs_V" [src/lenet.cpp:154]   --->   Operation 283 'add' 'ret_V_2' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 284 [1/1] (0.00ns)   --->   "%p_Result_27 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ret_V_2, i32 12)" [src/lenet.cpp:154]   --->   Operation 284 'bitselect' 'p_Result_27' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 285 [1/1] (1.54ns)   --->   "%p_Val2_17 = add i12 %sext_ln1265, %p_Val2_s" [src/lenet.cpp:154]   --->   Operation 285 'add' 'p_Val2_17' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 286 [1/1] (0.00ns)   --->   "%p_Result_28 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_17, i32 11)" [src/lenet.cpp:154]   --->   Operation 286 'bitselect' 'p_Result_28' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%xor_ln786 = xor i1 %p_Result_28, true" [src/lenet.cpp:154]   --->   Operation 287 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_1)   --->   "%underflow_1 = and i1 %p_Result_27, %xor_ln786" [src/lenet.cpp:154]   --->   Operation 288 'and' 'underflow_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_2)   --->   "%xor_ln340 = xor i1 %p_Result_27, %p_Result_28" [src/lenet.cpp:154]   --->   Operation 289 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_2)   --->   "%xor_ln340_1 = xor i1 %p_Result_27, true" [src/lenet.cpp:154]   --->   Operation 290 'xor' 'xor_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_2)   --->   "%or_ln340 = or i1 %p_Result_28, %xor_ln340_1" [src/lenet.cpp:154]   --->   Operation 291 'or' 'or_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_2)   --->   "%select_ln340_1 = select i1 %xor_ln340, i12 2047, i12 %p_Val2_17" [src/lenet.cpp:154]   --->   Operation 292 'select' 'select_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 293 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln388_1 = select i1 %underflow_1, i12 -2048, i12 %p_Val2_17" [src/lenet.cpp:154]   --->   Operation 293 'select' 'select_ln388_1' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 294 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_2 = select i1 %or_ln340, i12 %select_ln340_1, i12 %select_ln388_1" [src/lenet.cpp:154]   --->   Operation 294 'select' 'select_ln340_2' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln1494 = trunc i12 %select_ln340_2 to i11" [src/lenet.cpp:46->src/lenet.cpp:154]   --->   Operation 295 'trunc' 'trunc_ln1494' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 296 [1/1] (1.99ns)   --->   "%icmp_ln1494 = icmp sgt i12 %select_ln340_2, 0" [src/lenet.cpp:46->src/lenet.cpp:154]   --->   Operation 296 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 7> <Delay = 3.94>
ST_21 : Operation 297 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str38) nounwind" [src/lenet.cpp:154]   --->   Operation 297 'specloopname' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 298 [1/1] (0.69ns)   --->   "%select_ln46 = select i1 %icmp_ln1494, i11 %trunc_ln1494, i11 0" [src/lenet.cpp:46->src/lenet.cpp:154]   --->   Operation 298 'select' 'select_ln46' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i11 %select_ln46 to i12" [src/lenet.cpp:46->src/lenet.cpp:154]   --->   Operation 299 'zext' 'zext_ln46' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 300 [1/1] (3.25ns)   --->   "store i12 %zext_ln46, i12* %layer4_V_addr, align 2" [src/lenet.cpp:154]   --->   Operation 300 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 1600> <RAM>
ST_21 : Operation 301 [1/1] (0.00ns)   --->   "br label %14" [src/lenet.cpp:153]   --->   Operation 301 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', src/lenet.cpp:124) [11]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', src/lenet.cpp:126) [23]  (1.77 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('row') with incoming values : ('row', src/lenet.cpp:128) [35]  (1.77 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('col') with incoming values : ('col', src/lenet.cpp:130) [48]  (1.77 ns)

 <State 5>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('out_d') with incoming values : ('out_d', src/lenet.cpp:133) [61]  (1.77 ns)

 <State 6>: 7.48ns
The critical path consists of the following:
	'phi' operation ('out_d') with incoming values : ('out_d', src/lenet.cpp:133) [61]  (0 ns)
	'add' operation ('add_ln203', src/lenet.cpp:137) [75]  (0 ns)
	'add' operation ('add_ln203_12', src/lenet.cpp:137) [76]  (3.7 ns)
	'add' operation ('add_ln203_13', src/lenet.cpp:137) [80]  (0 ns)
	'add' operation ('add_ln203_14', src/lenet.cpp:137) [81]  (3.79 ns)

 <State 7>: 7.57ns
The critical path consists of the following:
	'phi' operation ('in_d') with incoming values : ('in_d', src/lenet.cpp:135) [86]  (0 ns)
	'sub' operation ('sub_ln1116', src/lenet.cpp:137) [114]  (1.87 ns)
	'add' operation ('add_ln1116', src/lenet.cpp:137) [116]  (1.92 ns)
	'sub' operation ('sub_ln1116_1', src/lenet.cpp:137) [121]  (0 ns)
	'add' operation ('add_ln1116_1', src/lenet.cpp:137) [122]  (3.79 ns)

 <State 8>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln1117_3', src/lenet.cpp:137) [106]  (0 ns)
	'add' operation ('add_ln1117_4', src/lenet.cpp:137) [107]  (3.82 ns)
	'getelementptr' operation ('conv2_V_addr', src/lenet.cpp:137) [109]  (0 ns)
	'load' operation ('conv2_V_load', src/lenet.cpp:137) on array 'conv2_V' [127]  (3.25 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	'load' operation ('layer3_V_load', src/lenet.cpp:137) on array 'layer3_V' [125]  (3.25 ns)

 <State 10>: 6.38ns
The critical path consists of the following:
	'mul' operation of DSP[129] ('r.V', src/lenet.cpp:137) [129]  (6.38 ns)

 <State 11>: 7.92ns
The critical path consists of the following:
	'load' operation ('__Val2__', src/lenet.cpp:140) on array 'layer4_V' [132]  (3.25 ns)
	'add' operation ('ret.V', src/lenet.cpp:140) [136]  (2.14 ns)
	'or' operation ('r', src/lenet.cpp:140) [143]  (0 ns)
	'and' operation ('and_ln415_1', src/lenet.cpp:140) [145]  (0 ns)
	'add' operation ('__Val2__', src/lenet.cpp:140) [147]  (1.55 ns)
	'xor' operation ('xor_ln416_7', src/lenet.cpp:140) [150]  (0 ns)
	'and' operation ('carry', src/lenet.cpp:140) [151]  (0.978 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln140', src/lenet.cpp:140) of variable '__Val2__', src/lenet.cpp:140 on array 'layer4_V' [148]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln140', src/lenet.cpp:140) of constant 2048 on array 'layer4_V' [176]  (3.25 ns)

 <State 14>: 8.5ns
The critical path consists of the following:
	'icmp' operation ('r', src/lenet.cpp:137) [189]  (1.36 ns)
	'or' operation ('r', src/lenet.cpp:137) [191]  (0 ns)
	'and' operation ('and_ln415', src/lenet.cpp:137) [193]  (0 ns)
	'add' operation ('__Val2__', src/lenet.cpp:137) [195]  (1.55 ns)
	'xor' operation ('xor_ln416_5', src/lenet.cpp:137) [197]  (0.978 ns)
	'and' operation ('carry', src/lenet.cpp:137) [198]  (0 ns)
	'and' operation ('and_ln781', src/lenet.cpp:137) [208]  (0.978 ns)
	'or' operation ('or_ln786', src/lenet.cpp:137) [214]  (0 ns)
	'xor' operation ('xor_ln786_1', src/lenet.cpp:137) [215]  (0 ns)
	'and' operation ('underflow', src/lenet.cpp:137) [216]  (0.978 ns)
	'or' operation ('or_ln340_1', src/lenet.cpp:137) [217]  (0.978 ns)
	'select' operation ('select_ln340', src/lenet.cpp:137) [220]  (0.697 ns)
	'select' operation ('select_ln340_3', src/lenet.cpp:137) [222]  (0.978 ns)

 <State 15>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln137', src/lenet.cpp:137) of variable 'select_ln340_3', src/lenet.cpp:137 on array 'layer4_V' [223]  (3.25 ns)

 <State 16>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', src/lenet.cpp:151) [256]  (1.77 ns)

 <State 17>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('out_d') with incoming values : ('out_d', src/lenet.cpp:153) [267]  (1.77 ns)

 <State 18>: 7.48ns
The critical path consists of the following:
	'phi' operation ('out_d') with incoming values : ('out_d', src/lenet.cpp:153) [267]  (0 ns)
	'add' operation ('add_ln1265', src/lenet.cpp:154) [279]  (0 ns)
	'add' operation ('add_ln1265_1', src/lenet.cpp:154) [280]  (3.7 ns)
	'add' operation ('add_ln1265_2', src/lenet.cpp:154) [284]  (0 ns)
	'add' operation ('add_ln1265_3', src/lenet.cpp:154) [285]  (3.79 ns)

 <State 19>: 3.25ns
The critical path consists of the following:
	'load' operation ('__Val2__', src/lenet.cpp:154) on array 'layer4_V' [288]  (3.25 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	'load' operation ('__Val2__', src/lenet.cpp:154) on array 'layer4_V' [288]  (3.25 ns)
	'add' operation ('__Val2__', src/lenet.cpp:154) [296]  (1.55 ns)
	'select' operation ('select_ln388_1', src/lenet.cpp:154) [304]  (0.978 ns)
	'select' operation ('select_ln340_2', src/lenet.cpp:154) [305]  (0.978 ns)
	'icmp' operation ('icmp_ln1494', src/lenet.cpp:46->src/lenet.cpp:154) [307]  (1.99 ns)

 <State 21>: 3.95ns
The critical path consists of the following:
	'select' operation ('select_ln46', src/lenet.cpp:46->src/lenet.cpp:154) [308]  (0.692 ns)
	'store' operation ('store_ln154', src/lenet.cpp:154) of variable 'zext_ln46', src/lenet.cpp:46->src/lenet.cpp:154 on array 'layer4_V' [310]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
