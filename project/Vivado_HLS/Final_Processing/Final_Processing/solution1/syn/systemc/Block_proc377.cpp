// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_proc377.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_proc377::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_proc377::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> Block_proc377::ap_ST_fsm_state1 = "1";
const sc_lv<32> Block_proc377::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<11> Block_proc377::ap_const_lv11_2D0 = "1011010000";
const sc_lv<12> Block_proc377::ap_const_lv12_500 = "10100000000";
const sc_lv<9> Block_proc377::ap_const_lv9_B4 = "10110100";
const sc_lv<10> Block_proc377::ap_const_lv10_140 = "101000000";
const bool Block_proc377::ap_const_boolean_1 = true;

Block_proc377::Block_proc377(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_dilate1_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dilate1_cols_V_out_full_n );

    SC_METHOD(thread_dilate1_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate1_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate1_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dilate1_rows_V_out_full_n );

    SC_METHOD(thread_dilate1_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate1_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate_copy2_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dilate_copy2_cols_V_out_full_n );

    SC_METHOD(thread_dilate_copy2_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate_copy2_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate_copy2_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dilate_copy2_rows_V_out_full_n );

    SC_METHOD(thread_dilate_copy2_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_dilate_copy2_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_erode_blur_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( erode_blur_cols_V_out_full_n );

    SC_METHOD(thread_erode_blur_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_erode_blur_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_erode_blur_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( erode_blur_rows_V_out_full_n );

    SC_METHOD(thread_erode_blur_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_erode_blur_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate2_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate2_cols_V_out_full_n );

    SC_METHOD(thread_rdilate2_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate2_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate2_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate2_rows_V_out_full_n );

    SC_METHOD(thread_rdilate2_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate2_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate3_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate3_cols_V_out_full_n );

    SC_METHOD(thread_rdilate3_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate3_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate3_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate3_rows_V_out_full_n );

    SC_METHOD(thread_rdilate3_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate3_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate4_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate4_cols_V_out_full_n );

    SC_METHOD(thread_rdilate4_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate4_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate4_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate4_rows_V_out_full_n );

    SC_METHOD(thread_rdilate4_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate4_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate5_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate5_cols_V_out_full_n );

    SC_METHOD(thread_rdilate5_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate5_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate5_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rdilate5_rows_V_out_full_n );

    SC_METHOD(thread_rdilate5_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rdilate5_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_resize_dilate_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( resize_dilate_cols_V_out_full_n );

    SC_METHOD(thread_resize_dilate_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_resize_dilate_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_resize_dilate_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( resize_dilate_rows_V_out_full_n );

    SC_METHOD(thread_resize_dilate_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_resize_dilate_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rgb_img_cols_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_cols_V_out_full_n );

    SC_METHOD(thread_rgb_img_cols_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rgb_img_cols_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rgb_img_rows_V_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );

    SC_METHOD(thread_rgb_img_rows_V_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_rgb_img_rows_V_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_xleft_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_out_full_n );

    SC_METHOD(thread_xleft_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xleft_s );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_xleft_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_xright_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xright_out_full_n );

    SC_METHOD(thread_xright_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( xright_s );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_xright_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ydown_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ydown_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ydown_s );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ydown_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ytop_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ytop_out_full_n );

    SC_METHOD(thread_ytop_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ytop_s );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ytop_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rgb_img_rows_V_out_full_n );
    sensitive << ( rgb_img_cols_V_out_full_n );
    sensitive << ( erode_blur_rows_V_out_full_n );
    sensitive << ( erode_blur_cols_V_out_full_n );
    sensitive << ( dilate1_rows_V_out_full_n );
    sensitive << ( dilate1_cols_V_out_full_n );
    sensitive << ( rdilate2_rows_V_out_full_n );
    sensitive << ( rdilate2_cols_V_out_full_n );
    sensitive << ( rdilate3_rows_V_out_full_n );
    sensitive << ( rdilate3_cols_V_out_full_n );
    sensitive << ( rdilate4_rows_V_out_full_n );
    sensitive << ( rdilate4_cols_V_out_full_n );
    sensitive << ( rdilate5_rows_V_out_full_n );
    sensitive << ( rdilate5_cols_V_out_full_n );
    sensitive << ( dilate_copy2_rows_V_out_full_n );
    sensitive << ( dilate_copy2_cols_V_out_full_n );
    sensitive << ( resize_dilate_rows_V_out_full_n );
    sensitive << ( resize_dilate_cols_V_out_full_n );
    sensitive << ( xleft_out_full_n );
    sensitive << ( xright_out_full_n );
    sensitive << ( ytop_out_full_n );
    sensitive << ( ydown_out_full_n );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_proc377_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, xleft_s, "(port)xleft_s");
    sc_trace(mVcdFile, xright_s, "(port)xright_s");
    sc_trace(mVcdFile, ytop_s, "(port)ytop_s");
    sc_trace(mVcdFile, ydown_s, "(port)ydown_s");
    sc_trace(mVcdFile, rgb_img_rows_V_out_din, "(port)rgb_img_rows_V_out_din");
    sc_trace(mVcdFile, rgb_img_rows_V_out_full_n, "(port)rgb_img_rows_V_out_full_n");
    sc_trace(mVcdFile, rgb_img_rows_V_out_write, "(port)rgb_img_rows_V_out_write");
    sc_trace(mVcdFile, rgb_img_cols_V_out_din, "(port)rgb_img_cols_V_out_din");
    sc_trace(mVcdFile, rgb_img_cols_V_out_full_n, "(port)rgb_img_cols_V_out_full_n");
    sc_trace(mVcdFile, rgb_img_cols_V_out_write, "(port)rgb_img_cols_V_out_write");
    sc_trace(mVcdFile, erode_blur_rows_V_out_din, "(port)erode_blur_rows_V_out_din");
    sc_trace(mVcdFile, erode_blur_rows_V_out_full_n, "(port)erode_blur_rows_V_out_full_n");
    sc_trace(mVcdFile, erode_blur_rows_V_out_write, "(port)erode_blur_rows_V_out_write");
    sc_trace(mVcdFile, erode_blur_cols_V_out_din, "(port)erode_blur_cols_V_out_din");
    sc_trace(mVcdFile, erode_blur_cols_V_out_full_n, "(port)erode_blur_cols_V_out_full_n");
    sc_trace(mVcdFile, erode_blur_cols_V_out_write, "(port)erode_blur_cols_V_out_write");
    sc_trace(mVcdFile, dilate1_rows_V_out_din, "(port)dilate1_rows_V_out_din");
    sc_trace(mVcdFile, dilate1_rows_V_out_full_n, "(port)dilate1_rows_V_out_full_n");
    sc_trace(mVcdFile, dilate1_rows_V_out_write, "(port)dilate1_rows_V_out_write");
    sc_trace(mVcdFile, dilate1_cols_V_out_din, "(port)dilate1_cols_V_out_din");
    sc_trace(mVcdFile, dilate1_cols_V_out_full_n, "(port)dilate1_cols_V_out_full_n");
    sc_trace(mVcdFile, dilate1_cols_V_out_write, "(port)dilate1_cols_V_out_write");
    sc_trace(mVcdFile, rdilate2_rows_V_out_din, "(port)rdilate2_rows_V_out_din");
    sc_trace(mVcdFile, rdilate2_rows_V_out_full_n, "(port)rdilate2_rows_V_out_full_n");
    sc_trace(mVcdFile, rdilate2_rows_V_out_write, "(port)rdilate2_rows_V_out_write");
    sc_trace(mVcdFile, rdilate2_cols_V_out_din, "(port)rdilate2_cols_V_out_din");
    sc_trace(mVcdFile, rdilate2_cols_V_out_full_n, "(port)rdilate2_cols_V_out_full_n");
    sc_trace(mVcdFile, rdilate2_cols_V_out_write, "(port)rdilate2_cols_V_out_write");
    sc_trace(mVcdFile, rdilate3_rows_V_out_din, "(port)rdilate3_rows_V_out_din");
    sc_trace(mVcdFile, rdilate3_rows_V_out_full_n, "(port)rdilate3_rows_V_out_full_n");
    sc_trace(mVcdFile, rdilate3_rows_V_out_write, "(port)rdilate3_rows_V_out_write");
    sc_trace(mVcdFile, rdilate3_cols_V_out_din, "(port)rdilate3_cols_V_out_din");
    sc_trace(mVcdFile, rdilate3_cols_V_out_full_n, "(port)rdilate3_cols_V_out_full_n");
    sc_trace(mVcdFile, rdilate3_cols_V_out_write, "(port)rdilate3_cols_V_out_write");
    sc_trace(mVcdFile, rdilate4_rows_V_out_din, "(port)rdilate4_rows_V_out_din");
    sc_trace(mVcdFile, rdilate4_rows_V_out_full_n, "(port)rdilate4_rows_V_out_full_n");
    sc_trace(mVcdFile, rdilate4_rows_V_out_write, "(port)rdilate4_rows_V_out_write");
    sc_trace(mVcdFile, rdilate4_cols_V_out_din, "(port)rdilate4_cols_V_out_din");
    sc_trace(mVcdFile, rdilate4_cols_V_out_full_n, "(port)rdilate4_cols_V_out_full_n");
    sc_trace(mVcdFile, rdilate4_cols_V_out_write, "(port)rdilate4_cols_V_out_write");
    sc_trace(mVcdFile, rdilate5_rows_V_out_din, "(port)rdilate5_rows_V_out_din");
    sc_trace(mVcdFile, rdilate5_rows_V_out_full_n, "(port)rdilate5_rows_V_out_full_n");
    sc_trace(mVcdFile, rdilate5_rows_V_out_write, "(port)rdilate5_rows_V_out_write");
    sc_trace(mVcdFile, rdilate5_cols_V_out_din, "(port)rdilate5_cols_V_out_din");
    sc_trace(mVcdFile, rdilate5_cols_V_out_full_n, "(port)rdilate5_cols_V_out_full_n");
    sc_trace(mVcdFile, rdilate5_cols_V_out_write, "(port)rdilate5_cols_V_out_write");
    sc_trace(mVcdFile, dilate_copy2_rows_V_out_din, "(port)dilate_copy2_rows_V_out_din");
    sc_trace(mVcdFile, dilate_copy2_rows_V_out_full_n, "(port)dilate_copy2_rows_V_out_full_n");
    sc_trace(mVcdFile, dilate_copy2_rows_V_out_write, "(port)dilate_copy2_rows_V_out_write");
    sc_trace(mVcdFile, dilate_copy2_cols_V_out_din, "(port)dilate_copy2_cols_V_out_din");
    sc_trace(mVcdFile, dilate_copy2_cols_V_out_full_n, "(port)dilate_copy2_cols_V_out_full_n");
    sc_trace(mVcdFile, dilate_copy2_cols_V_out_write, "(port)dilate_copy2_cols_V_out_write");
    sc_trace(mVcdFile, resize_dilate_rows_V_out_din, "(port)resize_dilate_rows_V_out_din");
    sc_trace(mVcdFile, resize_dilate_rows_V_out_full_n, "(port)resize_dilate_rows_V_out_full_n");
    sc_trace(mVcdFile, resize_dilate_rows_V_out_write, "(port)resize_dilate_rows_V_out_write");
    sc_trace(mVcdFile, resize_dilate_cols_V_out_din, "(port)resize_dilate_cols_V_out_din");
    sc_trace(mVcdFile, resize_dilate_cols_V_out_full_n, "(port)resize_dilate_cols_V_out_full_n");
    sc_trace(mVcdFile, resize_dilate_cols_V_out_write, "(port)resize_dilate_cols_V_out_write");
    sc_trace(mVcdFile, xleft_out_din, "(port)xleft_out_din");
    sc_trace(mVcdFile, xleft_out_full_n, "(port)xleft_out_full_n");
    sc_trace(mVcdFile, xleft_out_write, "(port)xleft_out_write");
    sc_trace(mVcdFile, xright_out_din, "(port)xright_out_din");
    sc_trace(mVcdFile, xright_out_full_n, "(port)xright_out_full_n");
    sc_trace(mVcdFile, xright_out_write, "(port)xright_out_write");
    sc_trace(mVcdFile, ytop_out_din, "(port)ytop_out_din");
    sc_trace(mVcdFile, ytop_out_full_n, "(port)ytop_out_full_n");
    sc_trace(mVcdFile, ytop_out_write, "(port)ytop_out_write");
    sc_trace(mVcdFile, ydown_out_din, "(port)ydown_out_din");
    sc_trace(mVcdFile, ydown_out_full_n, "(port)ydown_out_full_n");
    sc_trace(mVcdFile, ydown_out_write, "(port)ydown_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, rgb_img_rows_V_out_blk_n, "rgb_img_rows_V_out_blk_n");
    sc_trace(mVcdFile, rgb_img_cols_V_out_blk_n, "rgb_img_cols_V_out_blk_n");
    sc_trace(mVcdFile, erode_blur_rows_V_out_blk_n, "erode_blur_rows_V_out_blk_n");
    sc_trace(mVcdFile, erode_blur_cols_V_out_blk_n, "erode_blur_cols_V_out_blk_n");
    sc_trace(mVcdFile, dilate1_rows_V_out_blk_n, "dilate1_rows_V_out_blk_n");
    sc_trace(mVcdFile, dilate1_cols_V_out_blk_n, "dilate1_cols_V_out_blk_n");
    sc_trace(mVcdFile, rdilate2_rows_V_out_blk_n, "rdilate2_rows_V_out_blk_n");
    sc_trace(mVcdFile, rdilate2_cols_V_out_blk_n, "rdilate2_cols_V_out_blk_n");
    sc_trace(mVcdFile, rdilate3_rows_V_out_blk_n, "rdilate3_rows_V_out_blk_n");
    sc_trace(mVcdFile, rdilate3_cols_V_out_blk_n, "rdilate3_cols_V_out_blk_n");
    sc_trace(mVcdFile, rdilate4_rows_V_out_blk_n, "rdilate4_rows_V_out_blk_n");
    sc_trace(mVcdFile, rdilate4_cols_V_out_blk_n, "rdilate4_cols_V_out_blk_n");
    sc_trace(mVcdFile, rdilate5_rows_V_out_blk_n, "rdilate5_rows_V_out_blk_n");
    sc_trace(mVcdFile, rdilate5_cols_V_out_blk_n, "rdilate5_cols_V_out_blk_n");
    sc_trace(mVcdFile, dilate_copy2_rows_V_out_blk_n, "dilate_copy2_rows_V_out_blk_n");
    sc_trace(mVcdFile, dilate_copy2_cols_V_out_blk_n, "dilate_copy2_cols_V_out_blk_n");
    sc_trace(mVcdFile, resize_dilate_rows_V_out_blk_n, "resize_dilate_rows_V_out_blk_n");
    sc_trace(mVcdFile, resize_dilate_cols_V_out_blk_n, "resize_dilate_cols_V_out_blk_n");
    sc_trace(mVcdFile, xleft_out_blk_n, "xleft_out_blk_n");
    sc_trace(mVcdFile, xright_out_blk_n, "xright_out_blk_n");
    sc_trace(mVcdFile, ytop_out_blk_n, "ytop_out_blk_n");
    sc_trace(mVcdFile, ydown_out_blk_n, "ydown_out_blk_n");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Block_proc377::~Block_proc377() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Block_proc377::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
}

void Block_proc377::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_proc377::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read()));
}

void Block_proc377::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_proc377::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_proc377::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Block_proc377::thread_dilate1_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dilate1_cols_V_out_blk_n = dilate1_cols_V_out_full_n.read();
    } else {
        dilate1_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_dilate1_cols_V_out_din() {
    dilate1_cols_V_out_din = ap_const_lv12_500;
}

void Block_proc377::thread_dilate1_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        dilate1_cols_V_out_write = ap_const_logic_1;
    } else {
        dilate1_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_dilate1_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dilate1_rows_V_out_blk_n = dilate1_rows_V_out_full_n.read();
    } else {
        dilate1_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_dilate1_rows_V_out_din() {
    dilate1_rows_V_out_din = ap_const_lv11_2D0;
}

void Block_proc377::thread_dilate1_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        dilate1_rows_V_out_write = ap_const_logic_1;
    } else {
        dilate1_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_dilate_copy2_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dilate_copy2_cols_V_out_blk_n = dilate_copy2_cols_V_out_full_n.read();
    } else {
        dilate_copy2_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_dilate_copy2_cols_V_out_din() {
    dilate_copy2_cols_V_out_din = ap_const_lv10_140;
}

void Block_proc377::thread_dilate_copy2_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        dilate_copy2_cols_V_out_write = ap_const_logic_1;
    } else {
        dilate_copy2_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_dilate_copy2_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dilate_copy2_rows_V_out_blk_n = dilate_copy2_rows_V_out_full_n.read();
    } else {
        dilate_copy2_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_dilate_copy2_rows_V_out_din() {
    dilate_copy2_rows_V_out_din = ap_const_lv9_B4;
}

void Block_proc377::thread_dilate_copy2_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        dilate_copy2_rows_V_out_write = ap_const_logic_1;
    } else {
        dilate_copy2_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_erode_blur_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        erode_blur_cols_V_out_blk_n = erode_blur_cols_V_out_full_n.read();
    } else {
        erode_blur_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_erode_blur_cols_V_out_din() {
    erode_blur_cols_V_out_din = ap_const_lv12_500;
}

void Block_proc377::thread_erode_blur_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        erode_blur_cols_V_out_write = ap_const_logic_1;
    } else {
        erode_blur_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_erode_blur_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        erode_blur_rows_V_out_blk_n = erode_blur_rows_V_out_full_n.read();
    } else {
        erode_blur_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_erode_blur_rows_V_out_din() {
    erode_blur_rows_V_out_din = ap_const_lv11_2D0;
}

void Block_proc377::thread_erode_blur_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        erode_blur_rows_V_out_write = ap_const_logic_1;
    } else {
        erode_blur_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate2_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate2_cols_V_out_blk_n = rdilate2_cols_V_out_full_n.read();
    } else {
        rdilate2_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate2_cols_V_out_din() {
    rdilate2_cols_V_out_din = ap_const_lv10_140;
}

void Block_proc377::thread_rdilate2_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate2_cols_V_out_write = ap_const_logic_1;
    } else {
        rdilate2_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate2_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate2_rows_V_out_blk_n = rdilate2_rows_V_out_full_n.read();
    } else {
        rdilate2_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate2_rows_V_out_din() {
    rdilate2_rows_V_out_din = ap_const_lv9_B4;
}

void Block_proc377::thread_rdilate2_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate2_rows_V_out_write = ap_const_logic_1;
    } else {
        rdilate2_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate3_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate3_cols_V_out_blk_n = rdilate3_cols_V_out_full_n.read();
    } else {
        rdilate3_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate3_cols_V_out_din() {
    rdilate3_cols_V_out_din = ap_const_lv10_140;
}

void Block_proc377::thread_rdilate3_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate3_cols_V_out_write = ap_const_logic_1;
    } else {
        rdilate3_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate3_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate3_rows_V_out_blk_n = rdilate3_rows_V_out_full_n.read();
    } else {
        rdilate3_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate3_rows_V_out_din() {
    rdilate3_rows_V_out_din = ap_const_lv9_B4;
}

void Block_proc377::thread_rdilate3_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate3_rows_V_out_write = ap_const_logic_1;
    } else {
        rdilate3_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate4_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate4_cols_V_out_blk_n = rdilate4_cols_V_out_full_n.read();
    } else {
        rdilate4_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate4_cols_V_out_din() {
    rdilate4_cols_V_out_din = ap_const_lv10_140;
}

void Block_proc377::thread_rdilate4_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate4_cols_V_out_write = ap_const_logic_1;
    } else {
        rdilate4_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate4_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate4_rows_V_out_blk_n = rdilate4_rows_V_out_full_n.read();
    } else {
        rdilate4_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate4_rows_V_out_din() {
    rdilate4_rows_V_out_din = ap_const_lv9_B4;
}

void Block_proc377::thread_rdilate4_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate4_rows_V_out_write = ap_const_logic_1;
    } else {
        rdilate4_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate5_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate5_cols_V_out_blk_n = rdilate5_cols_V_out_full_n.read();
    } else {
        rdilate5_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate5_cols_V_out_din() {
    rdilate5_cols_V_out_din = ap_const_lv10_140;
}

void Block_proc377::thread_rdilate5_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate5_cols_V_out_write = ap_const_logic_1;
    } else {
        rdilate5_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rdilate5_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rdilate5_rows_V_out_blk_n = rdilate5_rows_V_out_full_n.read();
    } else {
        rdilate5_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rdilate5_rows_V_out_din() {
    rdilate5_rows_V_out_din = ap_const_lv9_B4;
}

void Block_proc377::thread_rdilate5_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rdilate5_rows_V_out_write = ap_const_logic_1;
    } else {
        rdilate5_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Block_proc377::thread_resize_dilate_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        resize_dilate_cols_V_out_blk_n = resize_dilate_cols_V_out_full_n.read();
    } else {
        resize_dilate_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_resize_dilate_cols_V_out_din() {
    resize_dilate_cols_V_out_din = ap_const_lv12_500;
}

void Block_proc377::thread_resize_dilate_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        resize_dilate_cols_V_out_write = ap_const_logic_1;
    } else {
        resize_dilate_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_resize_dilate_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        resize_dilate_rows_V_out_blk_n = resize_dilate_rows_V_out_full_n.read();
    } else {
        resize_dilate_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_resize_dilate_rows_V_out_din() {
    resize_dilate_rows_V_out_din = ap_const_lv11_2D0;
}

void Block_proc377::thread_resize_dilate_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        resize_dilate_rows_V_out_write = ap_const_logic_1;
    } else {
        resize_dilate_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rgb_img_cols_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rgb_img_cols_V_out_blk_n = rgb_img_cols_V_out_full_n.read();
    } else {
        rgb_img_cols_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rgb_img_cols_V_out_din() {
    rgb_img_cols_V_out_din = ap_const_lv12_500;
}

void Block_proc377::thread_rgb_img_cols_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rgb_img_cols_V_out_write = ap_const_logic_1;
    } else {
        rgb_img_cols_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_rgb_img_rows_V_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rgb_img_rows_V_out_blk_n = rgb_img_rows_V_out_full_n.read();
    } else {
        rgb_img_rows_V_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_rgb_img_rows_V_out_din() {
    rgb_img_rows_V_out_din = ap_const_lv11_2D0;
}

void Block_proc377::thread_rgb_img_rows_V_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        rgb_img_rows_V_out_write = ap_const_logic_1;
    } else {
        rgb_img_rows_V_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_start_out() {
    start_out = real_start.read();
}

void Block_proc377::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_xleft_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        xleft_out_blk_n = xleft_out_full_n.read();
    } else {
        xleft_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_xleft_out_din() {
    xleft_out_din = xleft_s.read();
}

void Block_proc377::thread_xleft_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        xleft_out_write = ap_const_logic_1;
    } else {
        xleft_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_xright_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        xright_out_blk_n = xright_out_full_n.read();
    } else {
        xright_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_xright_out_din() {
    xright_out_din = xright_s.read();
}

void Block_proc377::thread_xright_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        xright_out_write = ap_const_logic_1;
    } else {
        xright_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_ydown_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ydown_out_blk_n = ydown_out_full_n.read();
    } else {
        ydown_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_ydown_out_din() {
    ydown_out_din = ydown_s.read();
}

void Block_proc377::thread_ydown_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        ydown_out_write = ap_const_logic_1;
    } else {
        ydown_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_ytop_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ytop_out_blk_n = ytop_out_full_n.read();
    } else {
        ytop_out_blk_n = ap_const_logic_1;
    }
}

void Block_proc377::thread_ytop_out_din() {
    ytop_out_din = ytop_s.read();
}

void Block_proc377::thread_ytop_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, xleft_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, xright_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ydown_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rgb_img_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, erode_blur_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate1_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate3_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate4_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, rdilate5_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy2_cols_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_rows_V_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, resize_dilate_cols_V_out_full_n.read())))) {
        ytop_out_write = ap_const_logic_1;
    } else {
        ytop_out_write = ap_const_logic_0;
    }
}

void Block_proc377::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

