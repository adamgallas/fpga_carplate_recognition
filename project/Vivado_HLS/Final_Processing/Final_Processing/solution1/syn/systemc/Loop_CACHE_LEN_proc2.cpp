// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_CACHE_LEN_proc2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_CACHE_LEN_proc2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_CACHE_LEN_proc2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_ST_fsm_state1 = "1";
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_ST_fsm_state2 = "10";
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_ST_fsm_state5 = "1000";
const sc_lv<32> Loop_CACHE_LEN_proc2::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_CACHE_LEN_proc2::ap_const_boolean_1 = true;
const sc_lv<32> Loop_CACHE_LEN_proc2::ap_const_lv32_2 = "10";
const bool Loop_CACHE_LEN_proc2::ap_const_boolean_0 = false;
const sc_lv<1> Loop_CACHE_LEN_proc2::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_CACHE_LEN_proc2::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_CACHE_LEN_proc2::ap_const_lv1_1 = "1";
const sc_lv<11> Loop_CACHE_LEN_proc2::ap_const_lv11_0 = "00000000000";
const sc_lv<32> Loop_CACHE_LEN_proc2::ap_const_lv32_3 = "11";
const sc_lv<6> Loop_CACHE_LEN_proc2::ap_const_lv6_0 = "000000";
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_const_lv4_0 = "0000";
const sc_lv<4> Loop_CACHE_LEN_proc2::ap_const_lv4_F = "1111";
const sc_lv<11> Loop_CACHE_LEN_proc2::ap_const_lv11_708 = "11100001000";
const sc_lv<11> Loop_CACHE_LEN_proc2::ap_const_lv11_1 = "1";
const sc_lv<6> Loop_CACHE_LEN_proc2::ap_const_lv6_20 = "100000";
const sc_lv<6> Loop_CACHE_LEN_proc2::ap_const_lv6_1 = "1";
const sc_lv<6> Loop_CACHE_LEN_proc2::ap_const_lv6_1F = "11111";
const sc_lv<8> Loop_CACHE_LEN_proc2::ap_const_lv8_0 = "00000000";

Loop_CACHE_LEN_proc2::Loop_CACHE_LEN_proc2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( dilate_copy1_data_stream_0_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln66_reg_206 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( dilate_copy1_data_stream_0_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln66_reg_206 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( dilate_copy1_data_stream_0_V_empty_n );
    sensitive << ( icmp_ln66_reg_206 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln66_fu_141_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln63_fu_129_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln63_fu_129_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_buffer_V_Addr_A);
    sensitive << ( buffer_V_Addr_A_orig );

    SC_METHOD(thread_buffer_V_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln73_fu_192_p1 );

    SC_METHOD(thread_buffer_V_Din_A);
    sensitive << ( p_0_1_reg_105 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_buffer_V_EN_A);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_buffer_V_WEN_A);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dilate_copy1_data_stream_0_V_blk_n);
    sensitive << ( dilate_copy1_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln66_reg_206 );

    SC_METHOD(thread_dilate_copy1_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln66_reg_206 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_135_p2);
    sensitive << ( i_0_reg_93 );

    SC_METHOD(thread_icmp_ln63_fu_129_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_93 );

    SC_METHOD(thread_icmp_ln66_fu_141_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_0_reg_118 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln70_fu_159_p2);
    sensitive << ( dilate_copy1_data_stream_0_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln66_reg_206 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln71_fu_153_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_0_reg_118 );
    sensitive << ( icmp_ln66_fu_141_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_147_p2);
    sensitive << ( j_0_reg_118 );

    SC_METHOD(thread_select_ln70_fu_171_p3);
    sensitive << ( p_0_1_reg_105 );
    sensitive << ( icmp_ln70_fu_159_p2 );
    sensitive << ( store_V_fu_165_p2 );

    SC_METHOD(thread_store_V_1_fu_179_p2);
    sensitive << ( select_ln70_fu_171_p3 );

    SC_METHOD(thread_store_V_2_fu_185_p3);
    sensitive << ( icmp_ln71_reg_215 );
    sensitive << ( select_ln70_fu_171_p3 );
    sensitive << ( store_V_1_fu_179_p2 );

    SC_METHOD(thread_store_V_fu_165_p2);
    sensitive << ( p_0_1_reg_105 );

    SC_METHOD(thread_zext_ln73_fu_192_p1);
    sensitive << ( i_0_reg_93 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln63_fu_129_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln66_fu_141_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_CACHE_LEN_proc2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, buffer_V_Addr_A, "(port)buffer_V_Addr_A");
    sc_trace(mVcdFile, buffer_V_EN_A, "(port)buffer_V_EN_A");
    sc_trace(mVcdFile, buffer_V_WEN_A, "(port)buffer_V_WEN_A");
    sc_trace(mVcdFile, buffer_V_Din_A, "(port)buffer_V_Din_A");
    sc_trace(mVcdFile, buffer_V_Dout_A, "(port)buffer_V_Dout_A");
    sc_trace(mVcdFile, dilate_copy1_data_stream_0_V_dout, "(port)dilate_copy1_data_stream_0_V_dout");
    sc_trace(mVcdFile, dilate_copy1_data_stream_0_V_empty_n, "(port)dilate_copy1_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, dilate_copy1_data_stream_0_V_read, "(port)dilate_copy1_data_stream_0_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dilate_copy1_data_stream_0_V_blk_n, "dilate_copy1_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln66_reg_206, "icmp_ln66_reg_206");
    sc_trace(mVcdFile, p_0_1_reg_105, "p_0_1_reg_105");
    sc_trace(mVcdFile, j_0_reg_118, "j_0_reg_118");
    sc_trace(mVcdFile, icmp_ln63_fu_129_p2, "icmp_ln63_fu_129_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_135_p2, "i_fu_135_p2");
    sc_trace(mVcdFile, i_reg_201, "i_reg_201");
    sc_trace(mVcdFile, icmp_ln66_fu_141_p2, "icmp_ln66_fu_141_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_147_p2, "j_fu_147_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln71_fu_153_p2, "icmp_ln71_fu_153_p2");
    sc_trace(mVcdFile, icmp_ln71_reg_215, "icmp_ln71_reg_215");
    sc_trace(mVcdFile, store_V_2_fu_185_p3, "store_V_2_fu_185_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, i_0_reg_93, "i_0_reg_93");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln73_fu_192_p1, "zext_ln73_fu_192_p1");
    sc_trace(mVcdFile, buffer_V_Addr_A_orig, "buffer_V_Addr_A_orig");
    sc_trace(mVcdFile, icmp_ln70_fu_159_p2, "icmp_ln70_fu_159_p2");
    sc_trace(mVcdFile, store_V_fu_165_p2, "store_V_fu_165_p2");
    sc_trace(mVcdFile, select_ln70_fu_171_p3, "select_ln70_fu_171_p3");
    sc_trace(mVcdFile, store_V_1_fu_179_p2, "store_V_1_fu_179_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_CACHE_LEN_proc2::~Loop_CACHE_LEN_proc2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_CACHE_LEN_proc2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln63_fu_129_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_129_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_129_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_reg_93 = i_reg_201.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_93 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln66_fu_141_p2.read()))) {
        j_0_reg_118 = j_fu_147_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_129_p2.read()))) {
        j_0_reg_118 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_0_1_reg_105 = store_V_2_fu_185_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_129_p2.read()))) {
        p_0_1_reg_105 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_201 = i_fu_135_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln66_reg_206 = icmp_ln66_fu_141_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln66_fu_141_p2.read()))) {
        icmp_ln71_reg_215 = icmp_ln71_fu_153_p2.read();
    }
}

void Loop_CACHE_LEN_proc2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Loop_CACHE_LEN_proc2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_CACHE_LEN_proc2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_CACHE_LEN_proc2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Loop_CACHE_LEN_proc2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_CACHE_LEN_proc2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy1_data_stream_0_V_empty_n.read()));
}

void Loop_CACHE_LEN_proc2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy1_data_stream_0_V_empty_n.read()));
}

void Loop_CACHE_LEN_proc2::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_CACHE_LEN_proc2::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_CACHE_LEN_proc2::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, dilate_copy1_data_stream_0_V_empty_n.read()));
}

void Loop_CACHE_LEN_proc2::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln66_fu_141_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_129_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_CACHE_LEN_proc2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_CACHE_LEN_proc2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_129_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_buffer_V_Addr_A() {
    buffer_V_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): buffer_V_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Loop_CACHE_LEN_proc2::thread_buffer_V_Addr_A_orig() {
    buffer_V_Addr_A_orig =  (sc_lv<32>) (zext_ln73_fu_192_p1.read());
}

void Loop_CACHE_LEN_proc2::thread_buffer_V_Din_A() {
    buffer_V_Din_A = p_0_1_reg_105.read();
}

void Loop_CACHE_LEN_proc2::thread_buffer_V_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_V_EN_A = ap_const_logic_1;
    } else {
        buffer_V_EN_A = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_buffer_V_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_V_WEN_A = ap_const_lv4_F;
    } else {
        buffer_V_WEN_A = ap_const_lv4_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_dilate_copy1_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0))) {
        dilate_copy1_data_stream_0_V_blk_n = dilate_copy1_data_stream_0_V_empty_n.read();
    } else {
        dilate_copy1_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Loop_CACHE_LEN_proc2::thread_dilate_copy1_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln66_reg_206.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dilate_copy1_data_stream_0_V_read = ap_const_logic_1;
    } else {
        dilate_copy1_data_stream_0_V_read = ap_const_logic_0;
    }
}

void Loop_CACHE_LEN_proc2::thread_i_fu_135_p2() {
    i_fu_135_p2 = (!i_0_reg_93.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_0_reg_93.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_CACHE_LEN_proc2::thread_icmp_ln63_fu_129_p2() {
    icmp_ln63_fu_129_p2 = (!i_0_reg_93.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_93.read() == ap_const_lv11_708);
}

void Loop_CACHE_LEN_proc2::thread_icmp_ln66_fu_141_p2() {
    icmp_ln66_fu_141_p2 = (!j_0_reg_118.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_118.read() == ap_const_lv6_20);
}

void Loop_CACHE_LEN_proc2::thread_icmp_ln70_fu_159_p2() {
    icmp_ln70_fu_159_p2 = (!dilate_copy1_data_stream_0_V_dout.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(dilate_copy1_data_stream_0_V_dout.read() == ap_const_lv8_0);
}

void Loop_CACHE_LEN_proc2::thread_icmp_ln71_fu_153_p2() {
    icmp_ln71_fu_153_p2 = (!j_0_reg_118.read().is_01() || !ap_const_lv6_1F.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_118.read() == ap_const_lv6_1F);
}

void Loop_CACHE_LEN_proc2::thread_j_fu_147_p2() {
    j_fu_147_p2 = (!j_0_reg_118.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_118.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Loop_CACHE_LEN_proc2::thread_select_ln70_fu_171_p3() {
    select_ln70_fu_171_p3 = (!icmp_ln70_fu_159_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_fu_159_p2.read()[0].to_bool())? p_0_1_reg_105.read(): store_V_fu_165_p2.read());
}

void Loop_CACHE_LEN_proc2::thread_store_V_1_fu_179_p2() {
    store_V_1_fu_179_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): select_ln70_fu_171_p3.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void Loop_CACHE_LEN_proc2::thread_store_V_2_fu_185_p3() {
    store_V_2_fu_185_p3 = (!icmp_ln71_reg_215.read()[0].is_01())? sc_lv<32>(): ((icmp_ln71_reg_215.read()[0].to_bool())? select_ln70_fu_171_p3.read(): store_V_1_fu_179_p2.read());
}

void Loop_CACHE_LEN_proc2::thread_store_V_fu_165_p2() {
    store_V_fu_165_p2 = (!ap_const_lv32_1.is_01() || !p_0_1_reg_105.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_0_1_reg_105.read()));
}

void Loop_CACHE_LEN_proc2::thread_zext_ln73_fu_192_p1() {
    zext_ln73_fu_192_p1 = esl_zext<64,11>(i_0_reg_93.read());
}

void Loop_CACHE_LEN_proc2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_129_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln66_fu_141_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln66_fu_141_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

