// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_proc377_HH_
#define _Block_proc377_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Block_proc377 : public sc_module {
    // Port declarations 80
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > xleft_s;
    sc_in< sc_lv<32> > xright_s;
    sc_in< sc_lv<32> > ytop_s;
    sc_in< sc_lv<32> > ydown_s;
    sc_out< sc_lv<11> > rgb_img_rows_V_out_din;
    sc_in< sc_logic > rgb_img_rows_V_out_full_n;
    sc_out< sc_logic > rgb_img_rows_V_out_write;
    sc_out< sc_lv<12> > rgb_img_cols_V_out_din;
    sc_in< sc_logic > rgb_img_cols_V_out_full_n;
    sc_out< sc_logic > rgb_img_cols_V_out_write;
    sc_out< sc_lv<11> > erode_blur_rows_V_out_din;
    sc_in< sc_logic > erode_blur_rows_V_out_full_n;
    sc_out< sc_logic > erode_blur_rows_V_out_write;
    sc_out< sc_lv<12> > erode_blur_cols_V_out_din;
    sc_in< sc_logic > erode_blur_cols_V_out_full_n;
    sc_out< sc_logic > erode_blur_cols_V_out_write;
    sc_out< sc_lv<11> > dilate1_rows_V_out_din;
    sc_in< sc_logic > dilate1_rows_V_out_full_n;
    sc_out< sc_logic > dilate1_rows_V_out_write;
    sc_out< sc_lv<12> > dilate1_cols_V_out_din;
    sc_in< sc_logic > dilate1_cols_V_out_full_n;
    sc_out< sc_logic > dilate1_cols_V_out_write;
    sc_out< sc_lv<9> > rdilate2_rows_V_out_din;
    sc_in< sc_logic > rdilate2_rows_V_out_full_n;
    sc_out< sc_logic > rdilate2_rows_V_out_write;
    sc_out< sc_lv<10> > rdilate2_cols_V_out_din;
    sc_in< sc_logic > rdilate2_cols_V_out_full_n;
    sc_out< sc_logic > rdilate2_cols_V_out_write;
    sc_out< sc_lv<9> > rdilate3_rows_V_out_din;
    sc_in< sc_logic > rdilate3_rows_V_out_full_n;
    sc_out< sc_logic > rdilate3_rows_V_out_write;
    sc_out< sc_lv<10> > rdilate3_cols_V_out_din;
    sc_in< sc_logic > rdilate3_cols_V_out_full_n;
    sc_out< sc_logic > rdilate3_cols_V_out_write;
    sc_out< sc_lv<9> > rdilate4_rows_V_out_din;
    sc_in< sc_logic > rdilate4_rows_V_out_full_n;
    sc_out< sc_logic > rdilate4_rows_V_out_write;
    sc_out< sc_lv<10> > rdilate4_cols_V_out_din;
    sc_in< sc_logic > rdilate4_cols_V_out_full_n;
    sc_out< sc_logic > rdilate4_cols_V_out_write;
    sc_out< sc_lv<9> > rdilate5_rows_V_out_din;
    sc_in< sc_logic > rdilate5_rows_V_out_full_n;
    sc_out< sc_logic > rdilate5_rows_V_out_write;
    sc_out< sc_lv<10> > rdilate5_cols_V_out_din;
    sc_in< sc_logic > rdilate5_cols_V_out_full_n;
    sc_out< sc_logic > rdilate5_cols_V_out_write;
    sc_out< sc_lv<9> > dilate_copy2_rows_V_out_din;
    sc_in< sc_logic > dilate_copy2_rows_V_out_full_n;
    sc_out< sc_logic > dilate_copy2_rows_V_out_write;
    sc_out< sc_lv<10> > dilate_copy2_cols_V_out_din;
    sc_in< sc_logic > dilate_copy2_cols_V_out_full_n;
    sc_out< sc_logic > dilate_copy2_cols_V_out_write;
    sc_out< sc_lv<11> > resize_dilate_rows_V_out_din;
    sc_in< sc_logic > resize_dilate_rows_V_out_full_n;
    sc_out< sc_logic > resize_dilate_rows_V_out_write;
    sc_out< sc_lv<12> > resize_dilate_cols_V_out_din;
    sc_in< sc_logic > resize_dilate_cols_V_out_full_n;
    sc_out< sc_logic > resize_dilate_cols_V_out_write;
    sc_out< sc_lv<32> > xleft_out_din;
    sc_in< sc_logic > xleft_out_full_n;
    sc_out< sc_logic > xleft_out_write;
    sc_out< sc_lv<32> > xright_out_din;
    sc_in< sc_logic > xright_out_full_n;
    sc_out< sc_logic > xright_out_write;
    sc_out< sc_lv<32> > ytop_out_din;
    sc_in< sc_logic > ytop_out_full_n;
    sc_out< sc_logic > ytop_out_write;
    sc_out< sc_lv<32> > ydown_out_din;
    sc_in< sc_logic > ydown_out_full_n;
    sc_out< sc_logic > ydown_out_write;


    // Module declarations
    Block_proc377(sc_module_name name);
    SC_HAS_PROCESS(Block_proc377);

    ~Block_proc377();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > rgb_img_rows_V_out_blk_n;
    sc_signal< sc_logic > rgb_img_cols_V_out_blk_n;
    sc_signal< sc_logic > erode_blur_rows_V_out_blk_n;
    sc_signal< sc_logic > erode_blur_cols_V_out_blk_n;
    sc_signal< sc_logic > dilate1_rows_V_out_blk_n;
    sc_signal< sc_logic > dilate1_cols_V_out_blk_n;
    sc_signal< sc_logic > rdilate2_rows_V_out_blk_n;
    sc_signal< sc_logic > rdilate2_cols_V_out_blk_n;
    sc_signal< sc_logic > rdilate3_rows_V_out_blk_n;
    sc_signal< sc_logic > rdilate3_cols_V_out_blk_n;
    sc_signal< sc_logic > rdilate4_rows_V_out_blk_n;
    sc_signal< sc_logic > rdilate4_cols_V_out_blk_n;
    sc_signal< sc_logic > rdilate5_rows_V_out_blk_n;
    sc_signal< sc_logic > rdilate5_cols_V_out_blk_n;
    sc_signal< sc_logic > dilate_copy2_rows_V_out_blk_n;
    sc_signal< sc_logic > dilate_copy2_cols_V_out_blk_n;
    sc_signal< sc_logic > resize_dilate_rows_V_out_blk_n;
    sc_signal< sc_logic > resize_dilate_cols_V_out_blk_n;
    sc_signal< sc_logic > xleft_out_blk_n;
    sc_signal< sc_logic > xright_out_blk_n;
    sc_signal< sc_logic > ytop_out_blk_n;
    sc_signal< sc_logic > ydown_out_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<11> ap_const_lv11_2D0;
    static const sc_lv<12> ap_const_lv12_500;
    static const sc_lv<9> ap_const_lv9_B4;
    static const sc_lv<10> ap_const_lv10_140;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dilate1_cols_V_out_blk_n();
    void thread_dilate1_cols_V_out_din();
    void thread_dilate1_cols_V_out_write();
    void thread_dilate1_rows_V_out_blk_n();
    void thread_dilate1_rows_V_out_din();
    void thread_dilate1_rows_V_out_write();
    void thread_dilate_copy2_cols_V_out_blk_n();
    void thread_dilate_copy2_cols_V_out_din();
    void thread_dilate_copy2_cols_V_out_write();
    void thread_dilate_copy2_rows_V_out_blk_n();
    void thread_dilate_copy2_rows_V_out_din();
    void thread_dilate_copy2_rows_V_out_write();
    void thread_erode_blur_cols_V_out_blk_n();
    void thread_erode_blur_cols_V_out_din();
    void thread_erode_blur_cols_V_out_write();
    void thread_erode_blur_rows_V_out_blk_n();
    void thread_erode_blur_rows_V_out_din();
    void thread_erode_blur_rows_V_out_write();
    void thread_internal_ap_ready();
    void thread_rdilate2_cols_V_out_blk_n();
    void thread_rdilate2_cols_V_out_din();
    void thread_rdilate2_cols_V_out_write();
    void thread_rdilate2_rows_V_out_blk_n();
    void thread_rdilate2_rows_V_out_din();
    void thread_rdilate2_rows_V_out_write();
    void thread_rdilate3_cols_V_out_blk_n();
    void thread_rdilate3_cols_V_out_din();
    void thread_rdilate3_cols_V_out_write();
    void thread_rdilate3_rows_V_out_blk_n();
    void thread_rdilate3_rows_V_out_din();
    void thread_rdilate3_rows_V_out_write();
    void thread_rdilate4_cols_V_out_blk_n();
    void thread_rdilate4_cols_V_out_din();
    void thread_rdilate4_cols_V_out_write();
    void thread_rdilate4_rows_V_out_blk_n();
    void thread_rdilate4_rows_V_out_din();
    void thread_rdilate4_rows_V_out_write();
    void thread_rdilate5_cols_V_out_blk_n();
    void thread_rdilate5_cols_V_out_din();
    void thread_rdilate5_cols_V_out_write();
    void thread_rdilate5_rows_V_out_blk_n();
    void thread_rdilate5_rows_V_out_din();
    void thread_rdilate5_rows_V_out_write();
    void thread_real_start();
    void thread_resize_dilate_cols_V_out_blk_n();
    void thread_resize_dilate_cols_V_out_din();
    void thread_resize_dilate_cols_V_out_write();
    void thread_resize_dilate_rows_V_out_blk_n();
    void thread_resize_dilate_rows_V_out_din();
    void thread_resize_dilate_rows_V_out_write();
    void thread_rgb_img_cols_V_out_blk_n();
    void thread_rgb_img_cols_V_out_din();
    void thread_rgb_img_cols_V_out_write();
    void thread_rgb_img_rows_V_out_blk_n();
    void thread_rgb_img_rows_V_out_din();
    void thread_rgb_img_rows_V_out_write();
    void thread_start_out();
    void thread_start_write();
    void thread_xleft_out_blk_n();
    void thread_xleft_out_din();
    void thread_xleft_out_write();
    void thread_xright_out_blk_n();
    void thread_xright_out_din();
    void thread_xright_out_write();
    void thread_ydown_out_blk_n();
    void thread_ydown_out_din();
    void thread_ydown_out_write();
    void thread_ytop_out_blk_n();
    void thread_ytop_out_din();
    void thread_ytop_out_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
