// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MedianBlur_5_HH_
#define _MedianBlur_5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "median_5.h"
#include "MedianBlur_5_linedEe.h"

namespace ap_rtl {

struct MedianBlur_5 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_data_stream_V_dout;
    sc_in< sc_logic > src_data_stream_V_empty_n;
    sc_out< sc_logic > src_data_stream_V_read;
    sc_out< sc_lv<8> > dst_data_stream_V_din;
    sc_in< sc_logic > dst_data_stream_V_full_n;
    sc_out< sc_logic > dst_data_stream_V_write;


    // Module declarations
    MedianBlur_5(sc_module_name name);
    SC_HAS_PROCESS(MedianBlur_5);

    ~MedianBlur_5();

    sc_trace_file* mVcdFile;

    MedianBlur_5_linedEe* line_buffer_1_U;
    MedianBlur_5_linedEe* line_buffer_2_U;
    MedianBlur_5_linedEe* line_buffer_3_U;
    MedianBlur_5_linedEe* line_buffer_4_U;
    median_5* grp_median_5_fu_254;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<11> > line_buffer_1_address0;
    sc_signal< sc_logic > line_buffer_1_ce0;
    sc_signal< sc_lv<8> > line_buffer_1_q0;
    sc_signal< sc_logic > line_buffer_1_ce1;
    sc_signal< sc_logic > line_buffer_1_we1;
    sc_signal< sc_lv<11> > line_buffer_2_address0;
    sc_signal< sc_logic > line_buffer_2_ce0;
    sc_signal< sc_lv<8> > line_buffer_2_q0;
    sc_signal< sc_logic > line_buffer_2_ce1;
    sc_signal< sc_logic > line_buffer_2_we1;
    sc_signal< sc_lv<11> > line_buffer_3_address0;
    sc_signal< sc_logic > line_buffer_3_ce0;
    sc_signal< sc_lv<8> > line_buffer_3_q0;
    sc_signal< sc_logic > line_buffer_3_ce1;
    sc_signal< sc_logic > line_buffer_3_we1;
    sc_signal< sc_lv<11> > line_buffer_4_address0;
    sc_signal< sc_logic > line_buffer_4_ce0;
    sc_signal< sc_lv<8> > line_buffer_4_q0;
    sc_signal< sc_logic > line_buffer_4_ce1;
    sc_signal< sc_logic > line_buffer_4_we1;
    sc_signal< sc_logic > src_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464;
    sc_signal< sc_logic > dst_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter10_reg;
    sc_signal< sc_lv<20> > indvar_flatten_reg_221;
    sc_signal< sc_lv<10> > r_0_reg_232;
    sc_signal< sc_lv<11> > c_0_reg_243;
    sc_signal< sc_lv<1> > icmp_ln149_fu_259_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln149_reg_464_pp0_iter9_reg;
    sc_signal< sc_lv<20> > add_ln149_fu_265_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln151_fu_271_p2;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln151_reg_473_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln172_fu_301_p2;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln172_reg_478_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_fu_317_p2;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln172_1_reg_483_pp0_iter10_reg;
    sc_signal< sc_lv<10> > select_ln149_fu_323_p3;
    sc_signal< sc_lv<11> > line_buffer_1_addr_reg_493;
    sc_signal< sc_lv<11> > line_buffer_2_addr_reg_499;
    sc_signal< sc_lv<11> > line_buffer_3_addr_reg_505;
    sc_signal< sc_lv<11> > line_buffer_4_addr_reg_511;
    sc_signal< sc_lv<1> > icmp_ln172_2_fu_349_p2;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln172_2_reg_517_pp0_iter10_reg;
    sc_signal< sc_lv<11> > c_fu_355_p2;
    sc_signal< sc_lv<8> > line_buffer_1_load_reg_527;
    sc_signal< sc_lv<8> > line_buffer_2_load_reg_532;
    sc_signal< sc_lv<8> > line_buffer_3_load_reg_537;
    sc_signal< sc_lv<8> > line_buffer_4_load_reg_542;
    sc_signal< sc_lv<8> > tmp_19_reg_547;
    sc_signal< sc_lv<200> > window_fu_414_p11;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<200> > grp_median_5_fu_254_window_read;
    sc_signal< sc_lv<8> > grp_median_5_fu_254_ap_return;
    sc_signal< sc_logic > grp_median_5_fu_254_ap_ce;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0_ignore_call38;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1_ignore_call38;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2_ignore_call38;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3_ignore_call38;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4_ignore_call38;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5_ignore_call38;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6_ignore_call38;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7_ignore_call38;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8_ignore_call38;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9_ignore_call38;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10_ignore_call38;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11_ignore_call38;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp64;
    sc_signal< sc_lv<64> > zext_ln157_fu_331_p1;
    sc_signal< sc_lv<200> > window_1_fu_132;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<10> > add_ln149_1_fu_285_p2;
    sc_signal< sc_lv<8> > tmp_fu_291_p4;
    sc_signal< sc_lv<8> > tmp_18_fu_307_p4;
    sc_signal< sc_lv<11> > select_ln172_fu_277_p3;
    sc_signal< sc_lv<9> > tmp_20_fu_339_p4;
    sc_signal< sc_lv<32> > tmp_27_fu_364_p4;
    sc_signal< sc_lv<32> > tmp_28_fu_374_p4;
    sc_signal< sc_lv<32> > tmp_29_fu_384_p4;
    sc_signal< sc_lv<32> > tmp_30_fu_394_p4;
    sc_signal< sc_lv<32> > tmp_31_fu_404_p4;
    sc_signal< sc_lv<1> > select_ln172_1_fu_439_p3;
    sc_signal< sc_lv<1> > and_ln172_fu_444_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state14;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<20> ap_const_lv20_E1000;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_A8;
    static const sc_lv<32> ap_const_lv32_C7;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_58;
    static const sc_lv<32> ap_const_lv32_77;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_27;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln149_1_fu_285_p2();
    void thread_add_ln149_fu_265_p2();
    void thread_and_ln172_fu_444_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp64();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state10_pp0_stage0_iter8_ignore_call38();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state11_pp0_stage0_iter9_ignore_call38();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state12_pp0_stage0_iter10_ignore_call38();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state13_pp0_stage0_iter11_ignore_call38();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter0_ignore_call38();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter1_ignore_call38();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter2_ignore_call38();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter3_ignore_call38();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter4_ignore_call38();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter5_ignore_call38();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state8_pp0_stage0_iter6_ignore_call38();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_block_state9_pp0_stage0_iter7_ignore_call38();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_c_fu_355_p2();
    void thread_dst_data_stream_V_blk_n();
    void thread_dst_data_stream_V_din();
    void thread_dst_data_stream_V_write();
    void thread_grp_median_5_fu_254_ap_ce();
    void thread_grp_median_5_fu_254_window_read();
    void thread_icmp_ln149_fu_259_p2();
    void thread_icmp_ln151_fu_271_p2();
    void thread_icmp_ln172_1_fu_317_p2();
    void thread_icmp_ln172_2_fu_349_p2();
    void thread_icmp_ln172_fu_301_p2();
    void thread_internal_ap_ready();
    void thread_line_buffer_1_address0();
    void thread_line_buffer_1_ce0();
    void thread_line_buffer_1_ce1();
    void thread_line_buffer_1_we1();
    void thread_line_buffer_2_address0();
    void thread_line_buffer_2_ce0();
    void thread_line_buffer_2_ce1();
    void thread_line_buffer_2_we1();
    void thread_line_buffer_3_address0();
    void thread_line_buffer_3_ce0();
    void thread_line_buffer_3_ce1();
    void thread_line_buffer_3_we1();
    void thread_line_buffer_4_address0();
    void thread_line_buffer_4_ce0();
    void thread_line_buffer_4_ce1();
    void thread_line_buffer_4_we1();
    void thread_real_start();
    void thread_select_ln149_fu_323_p3();
    void thread_select_ln172_1_fu_439_p3();
    void thread_select_ln172_fu_277_p3();
    void thread_src_data_stream_V_blk_n();
    void thread_src_data_stream_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_18_fu_307_p4();
    void thread_tmp_20_fu_339_p4();
    void thread_tmp_27_fu_364_p4();
    void thread_tmp_28_fu_374_p4();
    void thread_tmp_29_fu_384_p4();
    void thread_tmp_30_fu_394_p4();
    void thread_tmp_31_fu_404_p4();
    void thread_tmp_fu_291_p4();
    void thread_window_fu_414_p11();
    void thread_zext_ln157_fu_331_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
