-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Dilate207 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Dilate207 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal and_ln118_3_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1131 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal and_ln512_reg_1207 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1207_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_7_reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1087 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_reg_1092 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_332_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln458_reg_1102 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln507_fu_342_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln507_reg_1107 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_1_fu_348_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_1_reg_1117 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln443_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1145 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_1149 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_2_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_2_reg_1153 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_fu_551_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_reg_1160 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_1_fu_577_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_1_reg_1165 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_fu_603_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_reg_1170 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1175 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op128_read_state4 : BOOLEAN;
    signal ap_predicate_op134_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1175_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1175_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1175_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_3_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_3_reg_1184_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_695_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1188 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln457_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1193 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1193_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_3_fu_712_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_3_reg_1200 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_3_reg_1200_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln512_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1207_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1207_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1207_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_4_addr_reg_1216 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1222 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_24_fu_821_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1228 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1228_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_839_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1235 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_26_fu_857_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_26_reg_1242 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_fu_876_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_reg_1248 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_1_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_1_reg_1253 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_4_fu_934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_4_reg_1258 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_1002_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_reg_1264 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln835_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_752_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_770_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal stop_row_fu_292_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln113_fu_296_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal cols_fu_300_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1174_fu_304_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1174_fu_304_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln443_fu_308_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln113_fu_296_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln443_1_fu_318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln458_fu_328_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln506_fu_338_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln506_fu_338_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln458_fu_328_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_376_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln506_fu_413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_419_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_1_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln506_1_fu_452_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln506_2_fu_491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln506_1_fu_409_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_444_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_530_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_536_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_1_fu_543_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_483_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_fu_556_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_2_fu_562_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_3_fu_569_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_2_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_1_fu_582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_4_fu_588_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_5_fu_595_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_619_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln451_fu_635_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_651_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_3_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_4_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln121_fu_684_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln451_1_fu_645_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln121_fu_691_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln458_1_fu_703_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln891_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln118_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_741_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_759_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_777_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_810_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_828_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_846_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_1_fu_896_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_2_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_2_fu_907_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_3_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_3_fu_921_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_4_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_5_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_5_fu_976_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_6_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_6_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_7_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op129_store_state4 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_enable_operation_145 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op148_store_state5 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op130_store_state4 : BOOLEAN;
    signal ap_enable_operation_130 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_enable_operation_142 : BOOLEAN;
    signal ap_predicate_op149_store_state5 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_predicate_op132_store_state4 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_enable_operation_123 : BOOLEAN;
    signal ap_enable_operation_139 : BOOLEAN;
    signal ap_predicate_op135_store_state4 : BOOLEAN;
    signal ap_enable_operation_135 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component top_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Dilate203_k_buf_0hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    top_mux_32_8_1_1_U132 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_166,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_3_reg_1200_pp0_iter1_reg,
        dout => tmp_12_fu_741_p5);

    top_mux_32_8_1_1_U133 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_174,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_3_reg_1200_pp0_iter1_reg,
        dout => tmp_13_fu_759_p5);

    top_mux_32_8_1_1_U134 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_4_fu_170,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_3_reg_1200_pp0_iter1_reg,
        dout => tmp_14_fu_777_p5);

    top_mux_32_8_1_1_U135 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_752_p3,
        din1 => col_buf_0_val_1_0_fu_770_p3,
        din2 => col_buf_0_val_2_0_fu_788_p3,
        din3 => sub_ln493_reg_1160,
        dout => tmp_15_fu_810_p5);

    top_mux_32_8_1_1_U136 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_752_p3,
        din1 => col_buf_0_val_1_0_fu_770_p3,
        din2 => col_buf_0_val_2_0_fu_788_p3,
        din3 => sub_ln493_1_reg_1165,
        dout => tmp_16_fu_828_p5);

    top_mux_32_8_1_1_U137 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_752_p3,
        din1 => col_buf_0_val_1_0_fu_770_p3,
        din2 => col_buf_0_val_2_0_fu_788_p3,
        din3 => sub_ln493_2_reg_1170,
        dout => tmp_17_fu_846_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln443_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_7_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_608_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_7_reg_281 <= j_V_fu_613_p2;
            elsif (((icmp_ln443_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_7_reg_281 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_270 <= i_V_reg_1126;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_270 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln458_1_reg_1117 <= add_ln458_1_fu_348_p2;
                add_ln458_reg_1102 <= add_ln458_fu_332_p2;
                add_ln507_reg_1107 <= add_ln507_fu_342_p2;
                cols_reg_1087 <= cols_fu_300_p1;
                sext_ln443_1_reg_1097 <= sext_ln443_1_fu_324_p1;
                sext_ln443_reg_1092 <= sext_ln443_fu_314_p1;
                stop_row_reg_1078 <= stop_row_fu_292_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_608_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_3_reg_1184 <= and_ln118_3_fu_670_p2;
                and_ln512_reg_1207 <= and_ln512_fu_717_p2;
                or_ln457_reg_1193 <= or_ln457_fu_707_p2;
                sub_ln493_3_reg_1200 <= sub_ln493_3_fu_712_p2;
                x_reg_1188 <= x_fu_695_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_3_reg_1184_pp0_iter1_reg <= and_ln118_3_reg_1184;
                and_ln512_reg_1207_pp0_iter1_reg <= and_ln512_reg_1207;
                icmp_ln444_reg_1175 <= icmp_ln444_fu_608_p2;
                icmp_ln444_reg_1175_pp0_iter1_reg <= icmp_ln444_reg_1175;
                k_buf_0_val_4_addr_reg_1216 <= zext_ln835_fu_725_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1222 <= zext_ln835_fu_725_p1(11 - 1 downto 0);
                or_ln457_reg_1193_pp0_iter1_reg <= or_ln457_reg_1193;
                sub_ln493_3_reg_1200_pp0_iter1_reg <= sub_ln493_3_reg_1200;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1207_pp0_iter2_reg <= and_ln512_reg_1207_pp0_iter1_reg;
                and_ln512_reg_1207_pp0_iter3_reg <= and_ln512_reg_1207_pp0_iter2_reg;
                and_ln512_reg_1207_pp0_iter4_reg <= and_ln512_reg_1207_pp0_iter3_reg;
                icmp_ln444_reg_1175_pp0_iter2_reg <= icmp_ln444_reg_1175_pp0_iter1_reg;
                icmp_ln444_reg_1175_pp0_iter3_reg <= icmp_ln444_reg_1175_pp0_iter2_reg;
                src_kernel_win_0_va_24_reg_1228 <= src_kernel_win_0_va_24_fu_821_p3;
                src_kernel_win_0_va_24_reg_1228_pp0_iter3_reg <= src_kernel_win_0_va_24_reg_1228;
                src_kernel_win_0_va_25_reg_1235 <= src_kernel_win_0_va_25_fu_839_p3;
                src_kernel_win_0_va_26_reg_1242 <= src_kernel_win_0_va_26_fu_857_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1126 <= i_V_fu_359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln188_1_reg_1253 <= icmp_ln188_1_fu_884_p2;
                select_ln188_reg_1248 <= select_ln188_fu_876_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_2_reg_1149 <= icmp_ln879_2_fu_398_p2;
                icmp_ln879_reg_1145 <= icmp_ln879_fu_392_p2;
                icmp_ln887_reg_1131 <= icmp_ln887_fu_365_p2;
                icmp_ln899_2_reg_1153 <= icmp_ln899_2_fu_404_p2;
                icmp_ln899_reg_1140 <= icmp_ln899_fu_386_p2;
                sub_ln493_1_reg_1165 <= sub_ln493_1_fu_577_p2;
                sub_ln493_2_reg_1170 <= sub_ln493_2_fu_603_p2;
                sub_ln493_reg_1160 <= sub_ln493_fu_551_p2;
                xor_ln457_reg_1135 <= xor_ln457_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_4_fu_170 <= col_buf_0_val_2_0_fu_788_p3;
                right_border_buf_0_5_fu_174 <= col_buf_0_val_1_0_fu_770_p3;
                right_border_buf_0_s_fu_166 <= col_buf_0_val_0_0_fu_752_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln188_4_reg_1258 <= select_ln188_4_fu_934_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1175_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_19_fu_146 <= src_kernel_win_0_va_fu_142;
                src_kernel_win_0_va_fu_142 <= src_kernel_win_0_va_24_reg_1228_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1175_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_20_fu_150 <= src_kernel_win_0_va_25_reg_1235;
                src_kernel_win_0_va_21_fu_154 <= src_kernel_win_0_va_20_fu_150;
                src_kernel_win_0_va_22_fu_158 <= src_kernel_win_0_va_26_reg_1242;
                src_kernel_win_0_va_23_fu_162 <= src_kernel_win_0_va_22_fu_158;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_47_reg_1264 <= tmp_47_fu_1002_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln443_fu_354_p2, ap_CS_fsm_state2, icmp_ln444_fu_608_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln444_fu_608_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((icmp_ln444_fu_608_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_639_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_7_reg_281));
    add_ln118_1_fu_582_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_1_fu_409_p1));
    add_ln118_fu_530_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_1_fu_409_p1));
    add_ln443_1_fu_318_p2 <= std_logic_vector(unsigned(ap_const_lv10_2) + unsigned(sext_ln113_fu_296_p1));
    add_ln443_fu_308_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(sext_ln1174_fu_304_p1));
    add_ln451_1_fu_645_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(trunc_ln451_fu_635_p1));
    add_ln458_1_fu_348_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln458_fu_328_p1));
    add_ln458_fu_332_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(sext_ln1174_fu_304_p1));
    add_ln506_1_fu_452_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_270));
    add_ln506_2_fu_491_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_270));
    add_ln506_fu_413_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_270));
    add_ln507_fu_342_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_338_p1));
    and_ln118_1_fu_477_p2 <= (xor_ln118_2_fu_466_p2 and icmp_ln118_1_fu_472_p2);
    and_ln118_2_fu_516_p2 <= (xor_ln118_3_fu_505_p2 and icmp_ln118_2_fu_511_p2);
    and_ln118_3_fu_670_p2 <= (xor_ln118_4_fu_659_p2 and icmp_ln118_3_fu_665_p2);
    and_ln118_fu_438_p2 <= (xor_ln118_1_fu_427_p2 and icmp_ln118_fu_433_p2);
    and_ln512_fu_717_p2 <= (icmp_ln899_reg_1140 and icmp_ln891_fu_629_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1207_pp0_iter4_reg, ap_predicate_op128_read_state4, ap_predicate_op134_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op134_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op128_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1207_pp0_iter4_reg, ap_predicate_op128_read_state4, ap_predicate_op134_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op134_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op128_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1207_pp0_iter4_reg, ap_predicate_op128_read_state4, ap_predicate_op134_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op134_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op128_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op128_read_state4, ap_predicate_op134_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op134_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op128_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1207_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln444_fu_608_p2)
    begin
        if ((icmp_ln444_fu_608_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln443_fu_354_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

        ap_enable_operation_123 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_125 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_127_assign_proc : process(or_ln457_reg_1193)
    begin
                ap_enable_operation_127 <= (or_ln457_reg_1193 = ap_const_lv1_1);
    end process;


    ap_enable_operation_129_assign_proc : process(ap_predicate_op129_store_state4)
    begin
                ap_enable_operation_129 <= (ap_predicate_op129_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_130_assign_proc : process(ap_predicate_op130_store_state4)
    begin
                ap_enable_operation_130 <= (ap_predicate_op130_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_132_assign_proc : process(ap_predicate_op132_store_state4)
    begin
                ap_enable_operation_132 <= (ap_predicate_op132_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_135_assign_proc : process(ap_predicate_op135_store_state4)
    begin
                ap_enable_operation_135 <= (ap_predicate_op135_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_139 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_142 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_145_assign_proc : process(or_ln457_reg_1193_pp0_iter1_reg)
    begin
                ap_enable_operation_145 <= (or_ln457_reg_1193_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state5)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_149_assign_proc : process(ap_predicate_op149_store_state5)
    begin
                ap_enable_operation_149 <= (ap_predicate_op149_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op128_read_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140)
    begin
                ap_predicate_op128_read_state4 <= ((icmp_ln899_reg_1140 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op129_store_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_reg_1145)
    begin
                ap_predicate_op129_store_state4 <= ((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_reg_1145 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op130_store_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_reg_1145)
    begin
                ap_predicate_op130_store_state4 <= ((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_reg_1145 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op132_store_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_2_reg_1149)
    begin
                ap_predicate_op132_store_state4 <= ((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_2_reg_1149 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op134_read_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln887_reg_1131)
    begin
                ap_predicate_op134_read_state4 <= ((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op135_store_state4_assign_proc : process(and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln887_reg_1131)
    begin
                ap_predicate_op135_store_state4 <= ((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184));
    end process;


    ap_predicate_op148_store_state5_assign_proc : process(icmp_ln899_reg_1140, icmp_ln887_reg_1131, and_ln118_3_reg_1184_pp0_iter1_reg)
    begin
                ap_predicate_op148_store_state5 <= ((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184_pp0_iter1_reg));
    end process;


    ap_predicate_op149_store_state5_assign_proc : process(icmp_ln899_reg_1140, icmp_ln887_reg_1131, and_ln118_3_reg_1184_pp0_iter1_reg)
    begin
                ap_predicate_op149_store_state5 <= ((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_354_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_31_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1175_pp0_iter2_reg, src_kernel_win_0_va_26_reg_1242, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_22_fu_158)
    begin
        if (((icmp_ln444_reg_1175_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_26_reg_1242;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_22_fu_158;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_32_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1175_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_22_fu_158, src_kernel_win_0_va_23_fu_162)
    begin
        if (((icmp_ln444_reg_1175_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_22_fu_158;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_23_fu_162;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_752_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1193_pp0_iter1_reg(0) = '1') else 
        tmp_12_fu_741_p5;
    col_buf_0_val_1_0_fu_770_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1193_pp0_iter1_reg(0) = '1') else 
        tmp_13_fu_759_p5;
    col_buf_0_val_2_0_fu_788_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1193_pp0_iter1_reg(0) = '1') else 
        tmp_14_fu_777_p5;
    cols_fu_300_p0 <= p_src_cols_V_dout;
        cols_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_fu_300_p0),32));

    i_V_fu_359_p2 <= std_logic_vector(unsigned(t_V_reg_270) + unsigned(ap_const_lv32_1));
    icmp_ln118_1_fu_472_p2 <= "1" when (signed(add_ln506_1_fu_452_p2) < signed(stop_row_reg_1078)) else "0";
    icmp_ln118_2_fu_511_p2 <= "1" when (signed(add_ln506_2_fu_491_p2) < signed(stop_row_reg_1078)) else "0";
    icmp_ln118_3_fu_665_p2 <= "1" when (signed(ImagLoc_x_fu_639_p2) < signed(cols_reg_1087)) else "0";
    icmp_ln118_fu_433_p2 <= "1" when (signed(add_ln506_fu_413_p2) < signed(stop_row_reg_1078)) else "0";
    icmp_ln188_1_fu_884_p2 <= "1" when (unsigned(src_kernel_win_0_va_26_fu_857_p3) > unsigned(select_ln188_fu_876_p3)) else "0";
    icmp_ln188_2_fu_901_p2 <= "1" when (unsigned(src_kernel_win_0_va_21_fu_154) > unsigned(select_ln188_1_fu_896_p3)) else "0";
    icmp_ln188_3_fu_915_p2 <= "1" when (unsigned(src_kernel_win_0_va_20_fu_150) > unsigned(select_ln188_2_fu_907_p3)) else "0";
    icmp_ln188_4_fu_929_p2 <= "1" when (unsigned(src_kernel_win_0_va_25_reg_1235) > unsigned(select_ln188_3_fu_921_p3)) else "0";
    icmp_ln188_5_fu_971_p2 <= "1" when (unsigned(src_kernel_win_0_va_19_fu_146) > unsigned(select_ln188_4_reg_1258)) else "0";
    icmp_ln188_6_fu_983_p2 <= "1" when (unsigned(src_kernel_win_0_va_fu_142) > unsigned(select_ln188_5_fu_976_p3)) else "0";
    icmp_ln188_7_fu_997_p2 <= "1" when (unsigned(src_kernel_win_0_va_24_reg_1228_pp0_iter3_reg) > unsigned(select_ln188_6_fu_989_p3)) else "0";
    icmp_ln188_fu_870_p2 <= "1" when (unsigned(ap_sig_allocacmp_src_kernel_win_0_va_31) > unsigned(ap_sig_allocacmp_src_kernel_win_0_va_32)) else "0";
    icmp_ln443_fu_354_p2 <= "1" when (t_V_reg_270 = sext_ln443_1_reg_1097) else "0";
    icmp_ln444_fu_608_p2 <= "1" when (t_V_7_reg_281 = sext_ln443_reg_1092) else "0";
    icmp_ln879_2_fu_398_p2 <= "1" when (t_V_reg_270 = ap_const_lv32_1) else "0";
    icmp_ln879_fu_392_p2 <= "1" when (t_V_reg_270 = ap_const_lv32_0) else "0";
    icmp_ln887_fu_365_p2 <= "1" when (unsigned(t_V_reg_270) < unsigned(stop_row_reg_1078)) else "0";
    icmp_ln891_fu_629_p2 <= "0" when (tmp_42_fu_619_p4 = ap_const_lv31_0) else "1";
    icmp_ln899_2_fu_404_p2 <= "1" when (unsigned(t_V_reg_270) > unsigned(stop_row_reg_1078)) else "0";
    icmp_ln899_fu_386_p2 <= "0" when (tmp_fu_376_p4 = ap_const_lv31_0) else "1";
    j_V_fu_613_p2 <= std_logic_vector(unsigned(t_V_7_reg_281) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_725_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_725_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_2_reg_1149, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_2_reg_1149 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln887_reg_1131, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_725_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1216;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_reg_1145, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_reg_1145 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1140, icmp_ln887_reg_1131, ap_block_pp0_stage0_11001, and_ln118_3_reg_1184_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_725_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1222;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_reg_1145, ap_block_pp0_stage0_11001, or_ln457_reg_1193)
    begin
        if ((((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_reg_1145 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1193 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln879_reg_1145, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1140 = ap_const_lv1_0) and (icmp_ln879_reg_1145 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1140, icmp_ln887_reg_1131, ap_block_pp0_stage0_11001, and_ln118_3_reg_1184_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln457_fu_707_p2 <= (xor_ln457_reg_1135 or icmp_ln118_3_fu_665_p2);

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln512_reg_1207_pp0_iter4_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= tmp_47_reg_1264;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln512_reg_1207_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1207_pp0_iter4_reg) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, and_ln118_3_reg_1184, icmp_ln899_reg_1140, icmp_ln887_reg_1131)
    begin
        if ((((icmp_ln887_reg_1131 = ap_const_lv1_1) and (icmp_ln899_reg_1140 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln899_reg_1140 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_3_reg_1184) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op128_read_state4, ap_predicate_op134_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op134_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op128_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_543_p3 <= 
        add_ln118_fu_530_p2 when (and_ln118_fu_438_p2(0) = '1') else 
        select_ln118_fu_536_p3;
    select_ln118_2_fu_562_p3 <= 
        ap_const_lv2_0 when (tmp_39_fu_483_p3(0) = '1') else 
        add_ln507_reg_1107;
    select_ln118_3_fu_569_p3 <= 
        xor_ln118_fu_556_p2 when (and_ln118_1_fu_477_p2(0) = '1') else 
        select_ln118_2_fu_562_p3;
    select_ln118_4_fu_588_p3 <= 
        ap_const_lv2_0 when (tmp_41_fu_522_p3(0) = '1') else 
        add_ln507_reg_1107;
    select_ln118_5_fu_595_p3 <= 
        add_ln118_1_fu_582_p2 when (and_ln118_2_fu_516_p2(0) = '1') else 
        select_ln118_4_fu_588_p3;
    select_ln118_fu_536_p3 <= 
        ap_const_lv2_0 when (tmp_37_fu_444_p3(0) = '1') else 
        add_ln507_reg_1107;
    select_ln121_fu_684_p3 <= 
        ap_const_lv11_0 when (tmp_44_fu_676_p3(0) = '1') else 
        add_ln458_reg_1102;
    select_ln188_1_fu_896_p3 <= 
        src_kernel_win_0_va_26_reg_1242 when (icmp_ln188_1_reg_1253(0) = '1') else 
        select_ln188_reg_1248;
    select_ln188_2_fu_907_p3 <= 
        src_kernel_win_0_va_21_fu_154 when (icmp_ln188_2_fu_901_p2(0) = '1') else 
        select_ln188_1_fu_896_p3;
    select_ln188_3_fu_921_p3 <= 
        src_kernel_win_0_va_20_fu_150 when (icmp_ln188_3_fu_915_p2(0) = '1') else 
        select_ln188_2_fu_907_p3;
    select_ln188_4_fu_934_p3 <= 
        src_kernel_win_0_va_25_reg_1235 when (icmp_ln188_4_fu_929_p2(0) = '1') else 
        select_ln188_3_fu_921_p3;
    select_ln188_5_fu_976_p3 <= 
        src_kernel_win_0_va_19_fu_146 when (icmp_ln188_5_fu_971_p2(0) = '1') else 
        select_ln188_4_reg_1258;
    select_ln188_6_fu_989_p3 <= 
        src_kernel_win_0_va_fu_142 when (icmp_ln188_6_fu_983_p2(0) = '1') else 
        select_ln188_5_fu_976_p3;
    select_ln188_fu_876_p3 <= 
        ap_sig_allocacmp_src_kernel_win_0_va_31 when (icmp_ln188_fu_870_p2(0) = '1') else 
        ap_sig_allocacmp_src_kernel_win_0_va_32;
    sext_ln113_fu_296_p0 <= p_src_rows_V_dout;
        sext_ln113_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln113_fu_296_p0),10));

    sext_ln1174_fu_304_p0 <= p_src_cols_V_dout;
        sext_ln1174_fu_304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1174_fu_304_p0),11));

        sext_ln118_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1188),32));

        sext_ln121_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln121_fu_684_p3),13));

        sext_ln443_1_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_1_fu_318_p2),32));

        sext_ln443_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_fu_308_p2),32));

    src_kernel_win_0_va_24_fu_821_p3 <= 
        tmp_15_fu_810_p5 when (icmp_ln899_2_reg_1153(0) = '1') else 
        col_buf_0_val_0_0_fu_752_p3;
    src_kernel_win_0_va_25_fu_839_p3 <= 
        tmp_16_fu_828_p5 when (icmp_ln899_2_reg_1153(0) = '1') else 
        col_buf_0_val_1_0_fu_770_p3;
    src_kernel_win_0_va_26_fu_857_p3 <= 
        tmp_17_fu_846_p5 when (icmp_ln899_2_reg_1153(0) = '1') else 
        col_buf_0_val_2_0_fu_788_p3;
    stop_row_fu_292_p0 <= p_src_rows_V_dout;
        stop_row_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(stop_row_fu_292_p0),32));

    sub_ln493_1_fu_577_p2 <= std_logic_vector(unsigned(add_ln507_reg_1107) - unsigned(select_ln118_3_fu_569_p3));
    sub_ln493_2_fu_603_p2 <= std_logic_vector(unsigned(add_ln507_reg_1107) - unsigned(select_ln118_5_fu_595_p3));
    sub_ln493_3_fu_712_p2 <= std_logic_vector(unsigned(add_ln458_1_reg_1117) - unsigned(trunc_ln458_1_fu_703_p1));
    sub_ln493_fu_551_p2 <= std_logic_vector(unsigned(add_ln507_reg_1107) - unsigned(select_ln118_1_fu_543_p3));
    tmp_36_fu_419_p3 <= add_ln506_fu_413_p2(31 downto 31);
    tmp_37_fu_444_p3 <= add_ln506_fu_413_p2(31 downto 31);
    tmp_38_fu_458_p3 <= add_ln506_1_fu_452_p2(31 downto 31);
    tmp_39_fu_483_p3 <= add_ln506_1_fu_452_p2(31 downto 31);
    tmp_40_fu_497_p3 <= add_ln506_2_fu_491_p2(31 downto 31);
    tmp_41_fu_522_p3 <= add_ln506_2_fu_491_p2(31 downto 31);
    tmp_42_fu_619_p4 <= t_V_7_reg_281(31 downto 1);
    tmp_43_fu_651_p3 <= ImagLoc_x_fu_639_p2(31 downto 31);
    tmp_44_fu_676_p3 <= ImagLoc_x_fu_639_p2(31 downto 31);
    tmp_47_fu_1002_p3 <= 
        src_kernel_win_0_va_24_reg_1228_pp0_iter3_reg when (icmp_ln188_7_fu_997_p2(0) = '1') else 
        select_ln188_6_fu_989_p3;
    tmp_fu_376_p4 <= t_V_reg_270(31 downto 1);
    trunc_ln451_fu_635_p1 <= t_V_7_reg_281(13 - 1 downto 0);
    trunc_ln458_1_fu_703_p1 <= x_fu_695_p3(2 - 1 downto 0);
    trunc_ln458_fu_328_p0 <= p_src_cols_V_dout;
    trunc_ln458_fu_328_p1 <= trunc_ln458_fu_328_p0(2 - 1 downto 0);
    trunc_ln506_1_fu_409_p1 <= t_V_reg_270(2 - 1 downto 0);
    trunc_ln506_fu_338_p0 <= p_src_rows_V_dout;
    trunc_ln506_fu_338_p1 <= trunc_ln506_fu_338_p0(2 - 1 downto 0);
    x_fu_695_p3 <= 
        add_ln451_1_fu_645_p2 when (and_ln118_3_fu_670_p2(0) = '1') else 
        sext_ln121_fu_691_p1;
    xor_ln118_1_fu_427_p2 <= (tmp_36_fu_419_p3 xor ap_const_lv1_1);
    xor_ln118_2_fu_466_p2 <= (tmp_38_fu_458_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_505_p2 <= (tmp_40_fu_497_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_659_p2 <= (tmp_43_fu_651_p3 xor ap_const_lv1_1);
    xor_ln118_fu_556_p2 <= (trunc_ln506_1_fu_409_p1 xor ap_const_lv2_2);
    xor_ln457_fu_370_p2 <= (icmp_ln887_fu_365_p2 xor ap_const_lv1_1);
    zext_ln835_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln118_fu_722_p1),64));
end behav;
