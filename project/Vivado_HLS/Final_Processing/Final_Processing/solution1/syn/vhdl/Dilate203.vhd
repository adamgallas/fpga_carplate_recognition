-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Dilate203 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Dilate203 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal and_ln118_12_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1125 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal and_ln512_reg_1201 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1201_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_10_reg_279 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_fu_312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_4_fu_322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_4_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_330_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln458_reg_1096 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln507_fu_340_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln507_reg_1101 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_4_fu_346_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_4_reg_1111 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln443_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_5_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_5_reg_1147 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_fu_549_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_reg_1154 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_7_fu_575_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_7_reg_1159 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_8_fu_601_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_8_reg_1164 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1169 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op127_read_state4 : BOOLEAN;
    signal ap_predicate_op133_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1169_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1169_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1169_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_12_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_12_reg_1178_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_689_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1182 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln457_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1187 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1187_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_9_fu_706_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_9_reg_1194 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_9_reg_1194_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln512_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1201_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1201_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1201_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_4_addr_reg_1210 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1216 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_75_fu_815_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_75_reg_1222 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_75_reg_1222_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_76_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_76_reg_1229 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_77_fu_851_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_77_reg_1236 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_fu_870_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_reg_1242 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_22_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_22_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_25_fu_928_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln188_25_reg_1252 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_fu_996_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_reg_1258 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln835_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_70_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_71_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_72_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_73_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_82 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_74_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_83 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_746_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_19_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_20_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal stop_row_fu_290_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln113_fu_294_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal cols_fu_298_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1174_fu_302_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1174_fu_302_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln443_fu_306_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln113_fu_294_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln443_4_fu_316_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln458_fu_326_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln506_fu_336_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln506_fu_336_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln458_fu_326_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_374_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln506_fu_411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_417_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_13_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln506_7_fu_450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_10_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_14_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln506_8_fu_489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_11_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_15_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln506_4_fu_407_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_fu_442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_528_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_534_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_16_fu_541_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_78_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_10_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_fu_554_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_17_fu_560_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_18_fu_567_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_11_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_4_fu_580_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_19_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_20_fu_593_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_81_fu_617_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln451_fu_633_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_649_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_12_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_16_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln451_4_fu_643_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln121_fu_682_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln458_4_fu_697_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln891_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln118_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_735_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_753_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_771_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_804_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_822_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_840_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_22_fu_890_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_23_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_23_fu_901_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_24_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_24_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_25_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_26_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_26_fu_970_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_27_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln188_27_fu_983_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln188_28_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op128_store_state4 : BOOLEAN;
    signal ap_enable_operation_128 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_126 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op147_store_state5 : BOOLEAN;
    signal ap_enable_operation_147 : BOOLEAN;
    signal ap_predicate_op129_store_state4 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_enable_operation_124 : BOOLEAN;
    signal ap_enable_operation_141 : BOOLEAN;
    signal ap_predicate_op148_store_state5 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op131_store_state4 : BOOLEAN;
    signal ap_enable_operation_131 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_predicate_op134_store_state4 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component top_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Dilate203_k_buf_0hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Dilate203_k_buf_0hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    top_mux_32_8_1_1_U72 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_164,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_9_reg_1194_pp0_iter1_reg,
        dout => tmp_33_fu_735_p5);

    top_mux_32_8_1_1_U73 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_20_fu_172,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_9_reg_1194_pp0_iter1_reg,
        dout => tmp_34_fu_753_p5);

    top_mux_32_8_1_1_U74 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_19_fu_168,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_9_reg_1194_pp0_iter1_reg,
        dout => tmp_35_fu_771_p5);

    top_mux_32_8_1_1_U75 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_746_p3,
        din1 => col_buf_0_val_1_0_fu_764_p3,
        din2 => col_buf_0_val_2_0_fu_782_p3,
        din3 => sub_ln493_reg_1154,
        dout => tmp_s_fu_804_p5);

    top_mux_32_8_1_1_U76 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_746_p3,
        din1 => col_buf_0_val_1_0_fu_764_p3,
        din2 => col_buf_0_val_2_0_fu_782_p3,
        din3 => sub_ln493_7_reg_1159,
        dout => tmp_36_fu_822_p5);

    top_mux_32_8_1_1_U77 : component top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_746_p3,
        din1 => col_buf_0_val_1_0_fu_764_p3,
        din2 => col_buf_0_val_2_0_fu_782_p3,
        din3 => sub_ln493_8_reg_1164,
        dout => tmp_37_fu_840_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_352_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln443_fu_352_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_10_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_10_reg_279 <= j_V_fu_611_p2;
            elsif (((icmp_ln443_fu_352_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_10_reg_279 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_268 <= i_V_reg_1120;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_268 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln458_4_reg_1111 <= add_ln458_4_fu_346_p2;
                add_ln458_reg_1096 <= add_ln458_fu_330_p2;
                add_ln507_reg_1101 <= add_ln507_fu_340_p2;
                cols_reg_1081 <= cols_fu_298_p1;
                sext_ln443_4_reg_1091 <= sext_ln443_4_fu_322_p1;
                sext_ln443_reg_1086 <= sext_ln443_fu_312_p1;
                stop_row_reg_1072 <= stop_row_fu_290_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_12_reg_1178 <= and_ln118_12_fu_668_p2;
                and_ln512_reg_1201 <= and_ln512_fu_711_p2;
                or_ln457_reg_1187 <= or_ln457_fu_701_p2;
                sub_ln493_9_reg_1194 <= sub_ln493_9_fu_706_p2;
                x_reg_1182 <= x_fu_689_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_12_reg_1178_pp0_iter1_reg <= and_ln118_12_reg_1178;
                and_ln512_reg_1201_pp0_iter1_reg <= and_ln512_reg_1201;
                icmp_ln444_reg_1169 <= icmp_ln444_fu_606_p2;
                icmp_ln444_reg_1169_pp0_iter1_reg <= icmp_ln444_reg_1169;
                k_buf_0_val_4_addr_reg_1210 <= zext_ln835_fu_719_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1216 <= zext_ln835_fu_719_p1(11 - 1 downto 0);
                or_ln457_reg_1187_pp0_iter1_reg <= or_ln457_reg_1187;
                sub_ln493_9_reg_1194_pp0_iter1_reg <= sub_ln493_9_reg_1194;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1201_pp0_iter2_reg <= and_ln512_reg_1201_pp0_iter1_reg;
                and_ln512_reg_1201_pp0_iter3_reg <= and_ln512_reg_1201_pp0_iter2_reg;
                and_ln512_reg_1201_pp0_iter4_reg <= and_ln512_reg_1201_pp0_iter3_reg;
                icmp_ln444_reg_1169_pp0_iter2_reg <= icmp_ln444_reg_1169_pp0_iter1_reg;
                icmp_ln444_reg_1169_pp0_iter3_reg <= icmp_ln444_reg_1169_pp0_iter2_reg;
                src_kernel_win_0_va_75_reg_1222 <= src_kernel_win_0_va_75_fu_815_p3;
                src_kernel_win_0_va_75_reg_1222_pp0_iter3_reg <= src_kernel_win_0_va_75_reg_1222;
                src_kernel_win_0_va_76_reg_1229 <= src_kernel_win_0_va_76_fu_833_p3;
                src_kernel_win_0_va_77_reg_1236 <= src_kernel_win_0_va_77_fu_851_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1120 <= i_V_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln188_22_reg_1247 <= icmp_ln188_22_fu_878_p2;
                select_ln188_reg_1242 <= select_ln188_fu_870_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_352_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_5_reg_1143 <= icmp_ln879_5_fu_396_p2;
                icmp_ln879_reg_1139 <= icmp_ln879_fu_390_p2;
                icmp_ln887_reg_1125 <= icmp_ln887_fu_363_p2;
                icmp_ln899_5_reg_1147 <= icmp_ln899_5_fu_402_p2;
                icmp_ln899_reg_1134 <= icmp_ln899_fu_384_p2;
                sub_ln493_7_reg_1159 <= sub_ln493_7_fu_575_p2;
                sub_ln493_8_reg_1164 <= sub_ln493_8_fu_601_p2;
                sub_ln493_reg_1154 <= sub_ln493_fu_549_p2;
                xor_ln457_reg_1129 <= xor_ln457_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_19_fu_168 <= col_buf_0_val_2_0_fu_782_p3;
                right_border_buf_0_20_fu_172 <= col_buf_0_val_1_0_fu_764_p3;
                right_border_buf_0_s_fu_164 <= col_buf_0_val_0_0_fu_746_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln188_25_reg_1252 <= select_ln188_25_fu_928_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1169_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_70_fu_144 <= src_kernel_win_0_va_fu_140;
                src_kernel_win_0_va_fu_140 <= src_kernel_win_0_va_75_reg_1222_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1169_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_71_fu_148 <= src_kernel_win_0_va_76_reg_1229;
                src_kernel_win_0_va_72_fu_152 <= src_kernel_win_0_va_71_fu_148;
                src_kernel_win_0_va_73_fu_156 <= src_kernel_win_0_va_77_reg_1236;
                src_kernel_win_0_va_74_fu_160 <= src_kernel_win_0_va_73_fu_156;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_86_reg_1258 <= tmp_86_fu_996_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln443_fu_352_p2, ap_CS_fsm_state2, icmp_ln444_fu_606_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln444_fu_606_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((icmp_ln444_fu_606_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_637_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_10_reg_279));
    add_ln118_4_fu_580_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_4_fu_407_p1));
    add_ln118_fu_528_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_4_fu_407_p1));
    add_ln443_4_fu_316_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(sext_ln113_fu_294_p1));
    add_ln443_fu_306_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(sext_ln1174_fu_302_p1));
    add_ln451_4_fu_643_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(trunc_ln451_fu_633_p1));
    add_ln458_4_fu_346_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln458_fu_326_p1));
    add_ln458_fu_330_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(sext_ln1174_fu_302_p1));
    add_ln506_7_fu_450_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_268));
    add_ln506_8_fu_489_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_268));
    add_ln506_fu_411_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_268));
    add_ln507_fu_340_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_336_p1));
    and_ln118_10_fu_475_p2 <= (xor_ln118_14_fu_464_p2 and icmp_ln118_10_fu_470_p2);
    and_ln118_11_fu_514_p2 <= (xor_ln118_15_fu_503_p2 and icmp_ln118_11_fu_509_p2);
    and_ln118_12_fu_668_p2 <= (xor_ln118_16_fu_657_p2 and icmp_ln118_12_fu_663_p2);
    and_ln118_fu_436_p2 <= (xor_ln118_13_fu_425_p2 and icmp_ln118_fu_431_p2);
    and_ln512_fu_711_p2 <= (icmp_ln899_reg_1134 and icmp_ln891_fu_627_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1201_pp0_iter4_reg, ap_predicate_op127_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op127_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1201_pp0_iter4_reg, ap_predicate_op127_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op127_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, and_ln512_reg_1201_pp0_iter4_reg, ap_predicate_op127_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op127_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op127_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op127_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1201_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln444_fu_606_p2)
    begin
        if ((icmp_ln444_fu_606_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln443_fu_352_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

        ap_enable_operation_122 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_124 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_126_assign_proc : process(or_ln457_reg_1187)
    begin
                ap_enable_operation_126 <= (or_ln457_reg_1187 = ap_const_lv1_1);
    end process;


    ap_enable_operation_128_assign_proc : process(ap_predicate_op128_store_state4)
    begin
                ap_enable_operation_128 <= (ap_predicate_op128_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_129_assign_proc : process(ap_predicate_op129_store_state4)
    begin
                ap_enable_operation_129 <= (ap_predicate_op129_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_131_assign_proc : process(ap_predicate_op131_store_state4)
    begin
                ap_enable_operation_131 <= (ap_predicate_op131_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_134_assign_proc : process(ap_predicate_op134_store_state4)
    begin
                ap_enable_operation_134 <= (ap_predicate_op134_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_138 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_141 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_144_assign_proc : process(or_ln457_reg_1187_pp0_iter1_reg)
    begin
                ap_enable_operation_144 <= (or_ln457_reg_1187_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_147_assign_proc : process(ap_predicate_op147_store_state5)
    begin
                ap_enable_operation_147 <= (ap_predicate_op147_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state5)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op127_read_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134)
    begin
                ap_predicate_op127_read_state4 <= ((icmp_ln899_reg_1134 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op128_store_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_reg_1139)
    begin
                ap_predicate_op128_store_state4 <= ((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_reg_1139 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op129_store_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_reg_1139)
    begin
                ap_predicate_op129_store_state4 <= ((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_reg_1139 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op131_store_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_5_reg_1143)
    begin
                ap_predicate_op131_store_state4 <= ((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_5_reg_1143 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op133_read_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln887_reg_1125)
    begin
                ap_predicate_op133_read_state4 <= ((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op134_store_state4_assign_proc : process(and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln887_reg_1125)
    begin
                ap_predicate_op134_store_state4 <= ((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178));
    end process;


    ap_predicate_op147_store_state5_assign_proc : process(icmp_ln899_reg_1134, icmp_ln887_reg_1125, and_ln118_12_reg_1178_pp0_iter1_reg)
    begin
                ap_predicate_op147_store_state5 <= ((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178_pp0_iter1_reg));
    end process;


    ap_predicate_op148_store_state5_assign_proc : process(icmp_ln899_reg_1134, icmp_ln887_reg_1125, and_ln118_12_reg_1178_pp0_iter1_reg)
    begin
                ap_predicate_op148_store_state5 <= ((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_352_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_82_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1169_pp0_iter2_reg, src_kernel_win_0_va_77_reg_1236, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_73_fu_156)
    begin
        if (((icmp_ln444_reg_1169_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_82 <= src_kernel_win_0_va_77_reg_1236;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_82 <= src_kernel_win_0_va_73_fu_156;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_83_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_1169_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_73_fu_156, src_kernel_win_0_va_74_fu_160)
    begin
        if (((icmp_ln444_reg_1169_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_83 <= src_kernel_win_0_va_73_fu_156;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_83 <= src_kernel_win_0_va_74_fu_160;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_746_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1187_pp0_iter1_reg(0) = '1') else 
        tmp_33_fu_735_p5;
    col_buf_0_val_1_0_fu_764_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1187_pp0_iter1_reg(0) = '1') else 
        tmp_34_fu_753_p5;
    col_buf_0_val_2_0_fu_782_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1187_pp0_iter1_reg(0) = '1') else 
        tmp_35_fu_771_p5;
    cols_fu_298_p0 <= p_src_cols_V_dout;
        cols_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_fu_298_p0),32));

    i_V_fu_357_p2 <= std_logic_vector(unsigned(t_V_reg_268) + unsigned(ap_const_lv32_1));
    icmp_ln118_10_fu_470_p2 <= "1" when (signed(add_ln506_7_fu_450_p2) < signed(stop_row_reg_1072)) else "0";
    icmp_ln118_11_fu_509_p2 <= "1" when (signed(add_ln506_8_fu_489_p2) < signed(stop_row_reg_1072)) else "0";
    icmp_ln118_12_fu_663_p2 <= "1" when (signed(ImagLoc_x_fu_637_p2) < signed(cols_reg_1081)) else "0";
    icmp_ln118_fu_431_p2 <= "1" when (signed(add_ln506_fu_411_p2) < signed(stop_row_reg_1072)) else "0";
    icmp_ln188_22_fu_878_p2 <= "1" when (unsigned(src_kernel_win_0_va_77_fu_851_p3) > unsigned(select_ln188_fu_870_p3)) else "0";
    icmp_ln188_23_fu_895_p2 <= "1" when (unsigned(src_kernel_win_0_va_72_fu_152) > unsigned(select_ln188_22_fu_890_p3)) else "0";
    icmp_ln188_24_fu_909_p2 <= "1" when (unsigned(src_kernel_win_0_va_71_fu_148) > unsigned(select_ln188_23_fu_901_p3)) else "0";
    icmp_ln188_25_fu_923_p2 <= "1" when (unsigned(src_kernel_win_0_va_76_reg_1229) > unsigned(select_ln188_24_fu_915_p3)) else "0";
    icmp_ln188_26_fu_965_p2 <= "1" when (unsigned(src_kernel_win_0_va_70_fu_144) > unsigned(select_ln188_25_reg_1252)) else "0";
    icmp_ln188_27_fu_977_p2 <= "1" when (unsigned(src_kernel_win_0_va_fu_140) > unsigned(select_ln188_26_fu_970_p3)) else "0";
    icmp_ln188_28_fu_991_p2 <= "1" when (unsigned(src_kernel_win_0_va_75_reg_1222_pp0_iter3_reg) > unsigned(select_ln188_27_fu_983_p3)) else "0";
    icmp_ln188_fu_864_p2 <= "1" when (unsigned(ap_sig_allocacmp_src_kernel_win_0_va_82) > unsigned(ap_sig_allocacmp_src_kernel_win_0_va_83)) else "0";
    icmp_ln443_fu_352_p2 <= "1" when (t_V_reg_268 = sext_ln443_4_reg_1091) else "0";
    icmp_ln444_fu_606_p2 <= "1" when (t_V_10_reg_279 = sext_ln443_reg_1086) else "0";
    icmp_ln879_5_fu_396_p2 <= "1" when (t_V_reg_268 = ap_const_lv32_1) else "0";
    icmp_ln879_fu_390_p2 <= "1" when (t_V_reg_268 = ap_const_lv32_0) else "0";
    icmp_ln887_fu_363_p2 <= "1" when (unsigned(t_V_reg_268) < unsigned(stop_row_reg_1072)) else "0";
    icmp_ln891_fu_627_p2 <= "0" when (tmp_81_fu_617_p4 = ap_const_lv31_0) else "1";
    icmp_ln899_5_fu_402_p2 <= "1" when (unsigned(t_V_reg_268) > unsigned(stop_row_reg_1072)) else "0";
    icmp_ln899_fu_384_p2 <= "0" when (tmp_fu_374_p4 = ap_const_lv31_0) else "1";
    j_V_fu_611_p2 <= std_logic_vector(unsigned(t_V_10_reg_279) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_719_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_719_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_5_reg_1143, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_5_reg_1143 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln887_reg_1125, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_719_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1210;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_reg_1139, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_reg_1139 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1134, icmp_ln887_reg_1125, ap_block_pp0_stage0_11001, and_ln118_12_reg_1178_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_719_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1216;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_reg_1139, ap_block_pp0_stage0_11001, or_ln457_reg_1187)
    begin
        if ((((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_reg_1139 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1187 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln879_reg_1139, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln899_reg_1134 = ap_const_lv1_0) and (icmp_ln879_reg_1139 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1134, icmp_ln887_reg_1125, ap_block_pp0_stage0_11001, and_ln118_12_reg_1178_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln457_fu_701_p2 <= (xor_ln457_reg_1129 or icmp_ln118_12_fu_663_p2);

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln512_reg_1201_pp0_iter4_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= tmp_86_reg_1258;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln512_reg_1201_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1201_pp0_iter4_reg) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, and_ln118_12_reg_1178, icmp_ln899_reg_1134, icmp_ln887_reg_1125)
    begin
        if ((((icmp_ln887_reg_1125 = ap_const_lv1_1) and (icmp_ln899_reg_1134 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln899_reg_1134 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_12_reg_1178) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op127_read_state4, ap_predicate_op133_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op133_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op127_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_16_fu_541_p3 <= 
        add_ln118_fu_528_p2 when (and_ln118_fu_436_p2(0) = '1') else 
        select_ln118_fu_534_p3;
    select_ln118_17_fu_560_p3 <= 
        ap_const_lv2_0 when (tmp_78_fu_481_p3(0) = '1') else 
        add_ln507_reg_1101;
    select_ln118_18_fu_567_p3 <= 
        xor_ln118_fu_554_p2 when (and_ln118_10_fu_475_p2(0) = '1') else 
        select_ln118_17_fu_560_p3;
    select_ln118_19_fu_586_p3 <= 
        ap_const_lv2_0 when (tmp_80_fu_520_p3(0) = '1') else 
        add_ln507_reg_1101;
    select_ln118_20_fu_593_p3 <= 
        add_ln118_4_fu_580_p2 when (and_ln118_11_fu_514_p2(0) = '1') else 
        select_ln118_19_fu_586_p3;
    select_ln118_fu_534_p3 <= 
        ap_const_lv2_0 when (tmp_76_fu_442_p3(0) = '1') else 
        add_ln507_reg_1101;
    select_ln121_fu_682_p3 <= 
        ap_const_lv13_0 when (tmp_83_fu_674_p3(0) = '1') else 
        add_ln458_reg_1096;
    select_ln188_22_fu_890_p3 <= 
        src_kernel_win_0_va_77_reg_1236 when (icmp_ln188_22_reg_1247(0) = '1') else 
        select_ln188_reg_1242;
    select_ln188_23_fu_901_p3 <= 
        src_kernel_win_0_va_72_fu_152 when (icmp_ln188_23_fu_895_p2(0) = '1') else 
        select_ln188_22_fu_890_p3;
    select_ln188_24_fu_915_p3 <= 
        src_kernel_win_0_va_71_fu_148 when (icmp_ln188_24_fu_909_p2(0) = '1') else 
        select_ln188_23_fu_901_p3;
    select_ln188_25_fu_928_p3 <= 
        src_kernel_win_0_va_76_reg_1229 when (icmp_ln188_25_fu_923_p2(0) = '1') else 
        select_ln188_24_fu_915_p3;
    select_ln188_26_fu_970_p3 <= 
        src_kernel_win_0_va_70_fu_144 when (icmp_ln188_26_fu_965_p2(0) = '1') else 
        select_ln188_25_reg_1252;
    select_ln188_27_fu_983_p3 <= 
        src_kernel_win_0_va_fu_140 when (icmp_ln188_27_fu_977_p2(0) = '1') else 
        select_ln188_26_fu_970_p3;
    select_ln188_fu_870_p3 <= 
        ap_sig_allocacmp_src_kernel_win_0_va_82 when (icmp_ln188_fu_864_p2(0) = '1') else 
        ap_sig_allocacmp_src_kernel_win_0_va_83;
    sext_ln113_fu_294_p0 <= p_src_rows_V_dout;
        sext_ln113_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln113_fu_294_p0),12));

    sext_ln1174_fu_302_p0 <= p_src_cols_V_dout;
        sext_ln1174_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1174_fu_302_p0),13));

        sext_ln118_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1182),32));

        sext_ln443_4_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_4_fu_316_p2),32));

        sext_ln443_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_fu_306_p2),32));

    src_kernel_win_0_va_75_fu_815_p3 <= 
        tmp_s_fu_804_p5 when (icmp_ln899_5_reg_1147(0) = '1') else 
        col_buf_0_val_0_0_fu_746_p3;
    src_kernel_win_0_va_76_fu_833_p3 <= 
        tmp_36_fu_822_p5 when (icmp_ln899_5_reg_1147(0) = '1') else 
        col_buf_0_val_1_0_fu_764_p3;
    src_kernel_win_0_va_77_fu_851_p3 <= 
        tmp_37_fu_840_p5 when (icmp_ln899_5_reg_1147(0) = '1') else 
        col_buf_0_val_2_0_fu_782_p3;
    stop_row_fu_290_p0 <= p_src_rows_V_dout;
        stop_row_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(stop_row_fu_290_p0),32));

    sub_ln493_7_fu_575_p2 <= std_logic_vector(unsigned(add_ln507_reg_1101) - unsigned(select_ln118_18_fu_567_p3));
    sub_ln493_8_fu_601_p2 <= std_logic_vector(unsigned(add_ln507_reg_1101) - unsigned(select_ln118_20_fu_593_p3));
    sub_ln493_9_fu_706_p2 <= std_logic_vector(unsigned(add_ln458_4_reg_1111) - unsigned(trunc_ln458_4_fu_697_p1));
    sub_ln493_fu_549_p2 <= std_logic_vector(unsigned(add_ln507_reg_1101) - unsigned(select_ln118_16_fu_541_p3));
    tmp_75_fu_417_p3 <= add_ln506_fu_411_p2(31 downto 31);
    tmp_76_fu_442_p3 <= add_ln506_fu_411_p2(31 downto 31);
    tmp_77_fu_456_p3 <= add_ln506_7_fu_450_p2(31 downto 31);
    tmp_78_fu_481_p3 <= add_ln506_7_fu_450_p2(31 downto 31);
    tmp_79_fu_495_p3 <= add_ln506_8_fu_489_p2(31 downto 31);
    tmp_80_fu_520_p3 <= add_ln506_8_fu_489_p2(31 downto 31);
    tmp_81_fu_617_p4 <= t_V_10_reg_279(31 downto 1);
    tmp_82_fu_649_p3 <= ImagLoc_x_fu_637_p2(31 downto 31);
    tmp_83_fu_674_p3 <= ImagLoc_x_fu_637_p2(31 downto 31);
    tmp_86_fu_996_p3 <= 
        src_kernel_win_0_va_75_reg_1222_pp0_iter3_reg when (icmp_ln188_28_fu_991_p2(0) = '1') else 
        select_ln188_27_fu_983_p3;
    tmp_fu_374_p4 <= t_V_reg_268(31 downto 1);
    trunc_ln451_fu_633_p1 <= t_V_10_reg_279(13 - 1 downto 0);
    trunc_ln458_4_fu_697_p1 <= x_fu_689_p3(2 - 1 downto 0);
    trunc_ln458_fu_326_p0 <= p_src_cols_V_dout;
    trunc_ln458_fu_326_p1 <= trunc_ln458_fu_326_p0(2 - 1 downto 0);
    trunc_ln506_4_fu_407_p1 <= t_V_reg_268(2 - 1 downto 0);
    trunc_ln506_fu_336_p0 <= p_src_rows_V_dout;
    trunc_ln506_fu_336_p1 <= trunc_ln506_fu_336_p0(2 - 1 downto 0);
    x_fu_689_p3 <= 
        add_ln451_4_fu_643_p2 when (and_ln118_12_fu_668_p2(0) = '1') else 
        select_ln121_fu_682_p3;
    xor_ln118_13_fu_425_p2 <= (tmp_75_fu_417_p3 xor ap_const_lv1_1);
    xor_ln118_14_fu_464_p2 <= (tmp_77_fu_456_p3 xor ap_const_lv1_1);
    xor_ln118_15_fu_503_p2 <= (tmp_79_fu_495_p3 xor ap_const_lv1_1);
    xor_ln118_16_fu_657_p2 <= (tmp_82_fu_649_p3 xor ap_const_lv1_1);
    xor_ln118_fu_554_p2 <= (trunc_ln506_4_fu_407_p1 xor ap_const_lv2_2);
    xor_ln457_fu_368_p2 <= (icmp_ln887_fu_363_p2 xor ap_const_lv1_1);
    zext_ln835_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln118_fu_716_p1),64));
end behav;
