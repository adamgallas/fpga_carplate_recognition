// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CvtColor (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state33 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [10:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [11:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1968_reg_1105;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter29;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter28_reg;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] j_0_i_reg_294;
reg   [11:0] p_src_cols_V_read_reg_1086;
reg    ap_block_state1;
reg   [10:0] p_src_rows_V_read_reg_1091;
wire   [0:0] icmp_ln1967_fu_331_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_fu_336_p2;
reg   [9:0] i_reg_1100;
wire   [0:0] icmp_ln1968_fu_346_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
reg    ap_block_state32_pp0_stage0_iter29;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter1_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter2_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter3_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter4_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter5_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter6_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter7_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter8_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter9_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter10_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter11_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter12_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter13_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter14_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter15_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter16_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter17_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter18_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter19_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter20_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter21_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter22_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter23_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter24_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter25_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter26_reg;
reg   [0:0] icmp_ln1968_reg_1105_pp0_iter27_reg;
wire   [10:0] j_fu_351_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_113_reg_1114;
reg   [7:0] tmp_114_reg_1121;
reg   [7:0] tmp_115_reg_1129;
wire   [7:0] G_1_fu_377_p3;
reg   [7:0] G_1_reg_1138;
wire   [7:0] G_2_fu_405_p3;
reg   [7:0] G_2_reg_1144;
wire   [7:0] tmp_112_fu_417_p3;
reg   [7:0] tmp_112_reg_1150;
reg   [7:0] tmp_112_reg_1150_pp0_iter3_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter4_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter5_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter6_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter7_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter8_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter9_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter10_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter11_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter12_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter13_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter14_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter15_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter16_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter17_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter18_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter19_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter20_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter21_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter22_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter23_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter24_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter25_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter26_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter27_reg;
reg   [7:0] tmp_112_reg_1150_pp0_iter28_reg;
wire   [7:0] diff_fu_433_p2;
reg   [7:0] diff_reg_1157;
reg   [7:0] diff_reg_1157_pp0_iter3_reg;
reg   [7:0] diff_reg_1157_pp0_iter4_reg;
reg   [7:0] diff_reg_1157_pp0_iter5_reg;
reg   [7:0] diff_reg_1157_pp0_iter6_reg;
reg   [7:0] diff_reg_1157_pp0_iter7_reg;
reg   [7:0] diff_reg_1157_pp0_iter8_reg;
reg   [7:0] diff_reg_1157_pp0_iter9_reg;
reg   [7:0] diff_reg_1157_pp0_iter10_reg;
reg   [7:0] diff_reg_1157_pp0_iter11_reg;
reg   [7:0] diff_reg_1157_pp0_iter12_reg;
reg   [7:0] diff_reg_1157_pp0_iter13_reg;
reg   [7:0] diff_reg_1157_pp0_iter14_reg;
reg   [7:0] diff_reg_1157_pp0_iter15_reg;
reg   [7:0] diff_reg_1157_pp0_iter16_reg;
reg   [7:0] diff_reg_1157_pp0_iter17_reg;
reg   [7:0] diff_reg_1157_pp0_iter18_reg;
reg   [7:0] diff_reg_1157_pp0_iter19_reg;
reg   [7:0] diff_reg_1157_pp0_iter20_reg;
reg   [7:0] diff_reg_1157_pp0_iter21_reg;
reg   [7:0] diff_reg_1157_pp0_iter22_reg;
reg   [7:0] diff_reg_1157_pp0_iter23_reg;
reg   [7:0] diff_reg_1157_pp0_iter24_reg;
reg   [7:0] diff_reg_1157_pp0_iter25_reg;
reg   [7:0] diff_reg_1157_pp0_iter26_reg;
wire   [0:0] icmp_ln1729_fu_439_p2;
reg   [0:0] icmp_ln1729_reg_1162;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter3_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter4_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter5_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter6_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter7_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter8_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter9_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter10_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter11_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter12_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter13_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter14_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter15_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter16_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter17_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter18_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter19_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter20_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter21_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter22_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter23_reg;
reg   [0:0] icmp_ln1729_reg_1162_pp0_iter24_reg;
wire   [8:0] sub_V_fu_519_p3;
reg   [8:0] sub_V_reg_1171;
reg   [8:0] sub_V_reg_1171_pp0_iter3_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter4_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter5_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter6_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter7_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter8_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter9_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter10_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter11_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter12_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter13_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter14_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter15_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter16_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter17_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter18_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter19_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter20_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter21_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter22_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter23_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter24_reg;
reg   [8:0] sub_V_reg_1171_pp0_iter25_reg;
wire   [0:0] icmp_ln1735_fu_527_p2;
reg   [0:0] icmp_ln1735_reg_1176;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter3_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter4_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter5_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter6_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter7_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter8_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter9_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter10_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter11_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter12_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter13_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter14_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter15_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter16_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter17_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter18_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter19_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter20_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter21_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter22_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter23_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter24_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter25_reg;
reg   [0:0] icmp_ln1735_reg_1176_pp0_iter26_reg;
wire   [0:0] icmp_ln1735_1_fu_532_p2;
reg   [0:0] icmp_ln1735_1_reg_1182;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter3_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter4_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter5_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter6_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter7_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter8_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter9_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter10_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter11_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter12_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter13_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter14_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter15_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter16_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter17_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter18_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter19_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter20_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter21_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter22_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter23_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter24_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter25_reg;
reg   [0:0] icmp_ln1735_1_reg_1182_pp0_iter26_reg;
wire   [0:0] icmp_ln1722_fu_537_p2;
reg   [0:0] icmp_ln1722_reg_1187;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter4_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter5_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter6_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter7_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter8_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter9_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter10_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter11_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter12_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter13_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter14_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter15_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter16_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter17_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter18_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter19_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter20_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter21_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter22_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter23_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter24_reg;
reg   [0:0] icmp_ln1722_reg_1187_pp0_iter25_reg;
wire   [19:0] grp_fu_449_p2;
wire   [19:0] grp_fu_545_p2;
wire   [35:0] mul_ln703_fu_588_p2;
reg   [35:0] mul_ln703_reg_1206;
wire   [27:0] r_V_6_fu_1080_p2;
reg   [27:0] r_V_6_reg_1211;
wire  signed [35:0] select_ln1148_fu_685_p3;
reg  signed [35:0] select_ln1148_reg_1217;
reg   [0:0] tmp_104_reg_1222;
wire   [0:0] p_Result_s_fu_732_p3;
reg   [0:0] p_Result_s_reg_1227;
wire   [7:0] p_Val2_28_fu_761_p2;
reg   [7:0] p_Val2_28_reg_1233;
wire   [0:0] and_ln781_fu_817_p2;
reg   [0:0] and_ln781_reg_1239;
wire   [0:0] or_ln785_fu_823_p2;
reg   [0:0] or_ln785_reg_1245;
wire   [7:0] p_Val2_s_fu_1013_p3;
reg   [7:0] p_Val2_s_reg_1251;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg   [9:0] i_0_i_reg_283;
wire    ap_CS_fsm_state33;
wire   [19:0] ap_phi_reg_pp0_iter0_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter1_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter2_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter3_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter4_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter5_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter6_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter7_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter8_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter9_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter10_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter11_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter12_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter13_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter14_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter15_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter16_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter17_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter18_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter19_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter20_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter21_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter22_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter23_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter24_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter25_p_0608_0_i_i_reg_305;
reg   [19:0] ap_phi_reg_pp0_iter26_p_0608_0_i_i_reg_305;
wire   [19:0] ap_phi_reg_pp0_iter0_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter1_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter2_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter3_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter4_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter5_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter6_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter7_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter8_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter9_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter10_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter11_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter12_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter13_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter14_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter15_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter16_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter17_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter18_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter19_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter20_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter21_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter22_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter23_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter24_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter25_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter26_p_0598_0_i_i_reg_316;
reg   [19:0] ap_phi_reg_pp0_iter27_p_0598_0_i_i_reg_316;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] zext_ln1967_fu_327_p1;
wire   [11:0] zext_ln1968_fu_342_p1;
wire   [0:0] icmp_ln1510_fu_357_p2;
wire   [7:0] select_ln1510_fu_363_p3;
wire   [0:0] icmp_ln1510_1_fu_371_p2;
wire   [0:0] icmp_ln1519_fu_385_p2;
wire   [7:0] select_ln1519_fu_391_p3;
wire   [0:0] icmp_ln1519_1_fu_399_p2;
wire   [0:0] icmp_ln1510_2_fu_413_p2;
wire   [0:0] icmp_ln1519_2_fu_423_p2;
wire   [7:0] select_ln1519_2_fu_427_p3;
wire   [7:0] grp_fu_449_p1;
wire   [8:0] zext_ln703_fu_460_p1;
wire   [8:0] zext_ln703_1_fu_463_p1;
wire   [8:0] zext_ln703_2_fu_477_p1;
wire   [0:0] icmp_ln1734_fu_455_p2;
wire   [0:0] icmp_ln1734_1_fu_472_p2;
wire   [0:0] xor_ln1734_fu_492_p2;
wire   [0:0] and_ln1734_fu_498_p2;
wire   [8:0] sub_ln703_fu_466_p2;
wire   [8:0] sub_ln703_2_fu_486_p2;
wire   [8:0] sub_ln703_1_fu_480_p2;
wire   [8:0] select_ln1734_1_fu_511_p3;
wire   [7:0] select_ln1734_fu_504_p3;
wire   [7:0] grp_fu_545_p1;
wire   [25:0] shl_ln_fu_554_p3;
wire   [21:0] shl_ln703_2_fu_566_p3;
wire   [26:0] zext_ln703_3_fu_562_p1;
wire   [26:0] zext_ln703_4_fu_574_p1;
wire   [26:0] sub_ln703_3_fu_578_p2;
wire  signed [8:0] mul_ln703_fu_588_p0;
wire  signed [26:0] mul_ln703_fu_588_p1;
wire   [0:0] or_ln1735_fu_601_p2;
wire   [7:0] select_ln1735_fu_605_p3;
wire   [7:0] select_ln1735_1_fu_612_p3;
wire   [26:0] H_V_fu_620_p3;
wire   [35:0] zext_ln728_fu_628_p1;
wire   [35:0] H_V_1_fu_632_p2;
wire   [35:0] sub_ln1148_fu_645_p2;
wire   [34:0] lshr_ln1148_6_fu_651_p4;
wire   [35:0] zext_ln1148_4_fu_661_p1;
wire   [34:0] lshr_ln1148_7_fu_671_p4;
wire   [0:0] tmp_fu_637_p3;
wire   [35:0] sub_ln1148_4_fu_665_p2;
wire   [35:0] zext_ln1148_5_fu_681_p1;
wire  signed [36:0] H_V_2_fu_701_p1;
wire   [36:0] ret_V_fu_704_p2;
wire   [0:0] tmp_101_fu_710_p3;
wire   [36:0] select_ln703_fu_718_p3;
wire   [36:0] H_V_3_fu_726_p2;
wire   [7:0] zext_ln415_fu_758_p1;
wire   [7:0] p_Val2_27_fu_740_p4;
wire   [0:0] tmp_105_fu_767_p3;
wire   [0:0] p_Result_7_fu_750_p3;
wire   [0:0] xor_ln416_fu_775_p2;
wire   [9:0] p_Result_5_i_i_i_fu_787_p4;
wire   [0:0] carry_2_fu_781_p2;
wire   [0:0] Range1_all_ones_fu_797_p2;
wire   [0:0] Range1_all_zeros_fu_803_p2;
wire   [0:0] deleted_zeros_fu_809_p3;
wire   [35:0] shl_ln2_fu_832_p3;
wire   [36:0] zext_ln1118_2_fu_839_p1;
wire   [36:0] zext_ln1118_1_fu_829_p1;
wire   [36:0] r_V_8_fu_843_p2;
wire   [0:0] tmp_108_fu_875_p3;
wire   [7:0] zext_ln415_3_fu_883_p1;
wire   [7:0] p_Val2_29_fu_857_p4;
wire   [7:0] p_Val2_30_fu_887_p2;
wire   [0:0] tmp_109_fu_893_p3;
wire   [0:0] p_Result_9_fu_867_p3;
wire   [0:0] xor_ln416_1_fu_901_p2;
wire   [9:0] tmp_s_fu_913_p4;
wire   [0:0] carry_4_fu_907_p2;
wire   [0:0] Range1_all_ones_1_fu_923_p2;
wire   [0:0] Range1_all_zeros_1_fu_929_p2;
wire   [0:0] and_ln781_1_fu_943_p2;
wire   [0:0] p_Result_8_fu_849_p3;
wire   [0:0] xor_ln781_1_fu_949_p2;
wire   [0:0] deleted_zeros_1_fu_935_p3;
wire   [0:0] or_ln785_1_fu_961_p2;
wire   [0:0] xor_ln340_fu_973_p2;
wire   [0:0] or_ln340_3_fu_979_p2;
wire   [0:0] overflow_1_fu_967_p2;
wire   [0:0] and_ln340_1_fu_985_p2;
wire   [0:0] neg_src_fu_955_p2;
wire   [0:0] or_ln340_1_fu_991_p2;
wire   [7:0] select_ln340_1_fu_997_p3;
wire   [7:0] select_ln396_1_fu_1005_p3;
wire   [0:0] xor_ln781_fu_1021_p2;
wire   [0:0] xor_ln340_1_fu_1036_p2;
wire   [0:0] or_ln340_2_fu_1041_p2;
wire   [0:0] overflow_fu_1031_p2;
wire   [0:0] and_ln340_fu_1046_p2;
wire   [0:0] neg_src_4_fu_1026_p2;
wire   [0:0] or_ln340_fu_1051_p2;
wire   [7:0] select_ln340_fu_1057_p3;
wire   [7:0] select_ln396_fu_1064_p3;
wire   [19:0] r_V_6_fu_1080_p0;
wire   [7:0] r_V_6_fu_1080_p1;
reg    grp_fu_449_ce;
reg    grp_fu_545_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [19:0] grp_fu_449_p10;
wire   [19:0] grp_fu_545_p10;
wire   [27:0] r_V_6_fu_1080_p00;
wire   [27:0] r_V_6_fu_1080_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
end

top_udiv_20s_8ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 20 ))
top_udiv_20s_8ns_bkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(20'd524288),
    .din1(grp_fu_449_p1),
    .ce(grp_fu_449_ce),
    .dout(grp_fu_449_p2)
);

top_udiv_20s_8ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 20 ))
top_udiv_20s_8ns_bkb_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(20'd524288),
    .din1(grp_fu_545_p1),
    .ce(grp_fu_545_ce),
    .dout(grp_fu_545_p2)
);

top_mul_mul_20ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 28 ))
top_mul_mul_20ns_cud_U44(
    .din0(r_V_6_fu_1080_p0),
    .din1(r_V_6_fu_1080_p1),
    .dout(r_V_6_fu_1080_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1967_fu_331_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1967_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if (((icmp_ln1967_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1968_reg_1105_pp0_iter24_reg == 1'd1) & (icmp_ln1729_reg_1162_pp0_iter24_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter26_p_0608_0_i_i_reg_305 <= grp_fu_449_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter26_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter25_p_0608_0_i_i_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1968_reg_1105_pp0_iter25_reg == 1'd1) & (icmp_ln1722_reg_1187_pp0_iter25_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter27_p_0598_0_i_i_reg_316 <= grp_fu_545_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter27_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter26_p_0598_0_i_i_reg_316;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1729_fu_439_p2 == 1'd1) & (icmp_ln1968_reg_1105_pp0_iter1_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter3_p_0608_0_i_i_reg_305 <= 20'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter2_p_0608_0_i_i_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1722_fu_537_p2 == 1'd1) & (icmp_ln1968_reg_1105_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_p_0598_0_i_i_reg_316 <= 20'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter3_p_0598_0_i_i_reg_316;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_0_i_reg_283 <= i_reg_1100;
    end else if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_283 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_0_i_reg_294 <= j_fu_351_p2;
    end else if (((icmp_ln1967_fu_331_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_i_reg_294 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_1_reg_1138 <= G_1_fu_377_p3;
        G_2_reg_1144 <= G_2_fu_405_p3;
        tmp_113_reg_1114 <= p_src_data_stream_0_V_dout;
        tmp_114_reg_1121 <= p_src_data_stream_1_V_dout;
        tmp_115_reg_1129 <= p_src_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105_pp0_iter27_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln781_reg_1239 <= and_ln781_fu_817_p2;
        or_ln785_reg_1245 <= or_ln785_fu_823_p2;
        p_Result_s_reg_1227 <= H_V_3_fu_726_p2[32'd36];
        p_Val2_28_reg_1233 <= p_Val2_28_fu_761_p2;
        p_Val2_s_reg_1251 <= p_Val2_s_fu_1013_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter9_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter10_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter9_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter10_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter11_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter10_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter11_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter12_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter11_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter12_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter13_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter12_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter13_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter14_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter13_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter14_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter15_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter14_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter15_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter16_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter15_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter16_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter17_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter16_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter17_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter18_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter17_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter18_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter19_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter18_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter0_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter1_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter0_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter19_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter20_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter19_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter20_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter21_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter20_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter21_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter22_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter21_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter22_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter23_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter22_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter23_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter24_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter23_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter24_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter25_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter24_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter25_p_0598_0_i_i_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter1_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter2_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter1_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter2_p_0598_0_i_i_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter3_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter4_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter5_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter4_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter5_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter6_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter5_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter6_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter7_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter6_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter7_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter8_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter7_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_p_0598_0_i_i_reg_316 <= ap_phi_reg_pp0_iter8_p_0598_0_i_i_reg_316;
        ap_phi_reg_pp0_iter9_p_0608_0_i_i_reg_305 <= ap_phi_reg_pp0_iter8_p_0608_0_i_i_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        diff_reg_1157 <= diff_fu_433_p2;
        icmp_ln1729_reg_1162 <= icmp_ln1729_fu_439_p2;
        icmp_ln1735_1_reg_1182 <= icmp_ln1735_1_fu_532_p2;
        icmp_ln1735_reg_1176 <= icmp_ln1735_fu_527_p2;
        sub_V_reg_1171 <= sub_V_fu_519_p3;
        tmp_112_reg_1150 <= tmp_112_fu_417_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        diff_reg_1157_pp0_iter10_reg <= diff_reg_1157_pp0_iter9_reg;
        diff_reg_1157_pp0_iter11_reg <= diff_reg_1157_pp0_iter10_reg;
        diff_reg_1157_pp0_iter12_reg <= diff_reg_1157_pp0_iter11_reg;
        diff_reg_1157_pp0_iter13_reg <= diff_reg_1157_pp0_iter12_reg;
        diff_reg_1157_pp0_iter14_reg <= diff_reg_1157_pp0_iter13_reg;
        diff_reg_1157_pp0_iter15_reg <= diff_reg_1157_pp0_iter14_reg;
        diff_reg_1157_pp0_iter16_reg <= diff_reg_1157_pp0_iter15_reg;
        diff_reg_1157_pp0_iter17_reg <= diff_reg_1157_pp0_iter16_reg;
        diff_reg_1157_pp0_iter18_reg <= diff_reg_1157_pp0_iter17_reg;
        diff_reg_1157_pp0_iter19_reg <= diff_reg_1157_pp0_iter18_reg;
        diff_reg_1157_pp0_iter20_reg <= diff_reg_1157_pp0_iter19_reg;
        diff_reg_1157_pp0_iter21_reg <= diff_reg_1157_pp0_iter20_reg;
        diff_reg_1157_pp0_iter22_reg <= diff_reg_1157_pp0_iter21_reg;
        diff_reg_1157_pp0_iter23_reg <= diff_reg_1157_pp0_iter22_reg;
        diff_reg_1157_pp0_iter24_reg <= diff_reg_1157_pp0_iter23_reg;
        diff_reg_1157_pp0_iter25_reg <= diff_reg_1157_pp0_iter24_reg;
        diff_reg_1157_pp0_iter26_reg <= diff_reg_1157_pp0_iter25_reg;
        diff_reg_1157_pp0_iter3_reg <= diff_reg_1157;
        diff_reg_1157_pp0_iter4_reg <= diff_reg_1157_pp0_iter3_reg;
        diff_reg_1157_pp0_iter5_reg <= diff_reg_1157_pp0_iter4_reg;
        diff_reg_1157_pp0_iter6_reg <= diff_reg_1157_pp0_iter5_reg;
        diff_reg_1157_pp0_iter7_reg <= diff_reg_1157_pp0_iter6_reg;
        diff_reg_1157_pp0_iter8_reg <= diff_reg_1157_pp0_iter7_reg;
        diff_reg_1157_pp0_iter9_reg <= diff_reg_1157_pp0_iter8_reg;
        icmp_ln1722_reg_1187_pp0_iter10_reg <= icmp_ln1722_reg_1187_pp0_iter9_reg;
        icmp_ln1722_reg_1187_pp0_iter11_reg <= icmp_ln1722_reg_1187_pp0_iter10_reg;
        icmp_ln1722_reg_1187_pp0_iter12_reg <= icmp_ln1722_reg_1187_pp0_iter11_reg;
        icmp_ln1722_reg_1187_pp0_iter13_reg <= icmp_ln1722_reg_1187_pp0_iter12_reg;
        icmp_ln1722_reg_1187_pp0_iter14_reg <= icmp_ln1722_reg_1187_pp0_iter13_reg;
        icmp_ln1722_reg_1187_pp0_iter15_reg <= icmp_ln1722_reg_1187_pp0_iter14_reg;
        icmp_ln1722_reg_1187_pp0_iter16_reg <= icmp_ln1722_reg_1187_pp0_iter15_reg;
        icmp_ln1722_reg_1187_pp0_iter17_reg <= icmp_ln1722_reg_1187_pp0_iter16_reg;
        icmp_ln1722_reg_1187_pp0_iter18_reg <= icmp_ln1722_reg_1187_pp0_iter17_reg;
        icmp_ln1722_reg_1187_pp0_iter19_reg <= icmp_ln1722_reg_1187_pp0_iter18_reg;
        icmp_ln1722_reg_1187_pp0_iter20_reg <= icmp_ln1722_reg_1187_pp0_iter19_reg;
        icmp_ln1722_reg_1187_pp0_iter21_reg <= icmp_ln1722_reg_1187_pp0_iter20_reg;
        icmp_ln1722_reg_1187_pp0_iter22_reg <= icmp_ln1722_reg_1187_pp0_iter21_reg;
        icmp_ln1722_reg_1187_pp0_iter23_reg <= icmp_ln1722_reg_1187_pp0_iter22_reg;
        icmp_ln1722_reg_1187_pp0_iter24_reg <= icmp_ln1722_reg_1187_pp0_iter23_reg;
        icmp_ln1722_reg_1187_pp0_iter25_reg <= icmp_ln1722_reg_1187_pp0_iter24_reg;
        icmp_ln1722_reg_1187_pp0_iter4_reg <= icmp_ln1722_reg_1187;
        icmp_ln1722_reg_1187_pp0_iter5_reg <= icmp_ln1722_reg_1187_pp0_iter4_reg;
        icmp_ln1722_reg_1187_pp0_iter6_reg <= icmp_ln1722_reg_1187_pp0_iter5_reg;
        icmp_ln1722_reg_1187_pp0_iter7_reg <= icmp_ln1722_reg_1187_pp0_iter6_reg;
        icmp_ln1722_reg_1187_pp0_iter8_reg <= icmp_ln1722_reg_1187_pp0_iter7_reg;
        icmp_ln1722_reg_1187_pp0_iter9_reg <= icmp_ln1722_reg_1187_pp0_iter8_reg;
        icmp_ln1729_reg_1162_pp0_iter10_reg <= icmp_ln1729_reg_1162_pp0_iter9_reg;
        icmp_ln1729_reg_1162_pp0_iter11_reg <= icmp_ln1729_reg_1162_pp0_iter10_reg;
        icmp_ln1729_reg_1162_pp0_iter12_reg <= icmp_ln1729_reg_1162_pp0_iter11_reg;
        icmp_ln1729_reg_1162_pp0_iter13_reg <= icmp_ln1729_reg_1162_pp0_iter12_reg;
        icmp_ln1729_reg_1162_pp0_iter14_reg <= icmp_ln1729_reg_1162_pp0_iter13_reg;
        icmp_ln1729_reg_1162_pp0_iter15_reg <= icmp_ln1729_reg_1162_pp0_iter14_reg;
        icmp_ln1729_reg_1162_pp0_iter16_reg <= icmp_ln1729_reg_1162_pp0_iter15_reg;
        icmp_ln1729_reg_1162_pp0_iter17_reg <= icmp_ln1729_reg_1162_pp0_iter16_reg;
        icmp_ln1729_reg_1162_pp0_iter18_reg <= icmp_ln1729_reg_1162_pp0_iter17_reg;
        icmp_ln1729_reg_1162_pp0_iter19_reg <= icmp_ln1729_reg_1162_pp0_iter18_reg;
        icmp_ln1729_reg_1162_pp0_iter20_reg <= icmp_ln1729_reg_1162_pp0_iter19_reg;
        icmp_ln1729_reg_1162_pp0_iter21_reg <= icmp_ln1729_reg_1162_pp0_iter20_reg;
        icmp_ln1729_reg_1162_pp0_iter22_reg <= icmp_ln1729_reg_1162_pp0_iter21_reg;
        icmp_ln1729_reg_1162_pp0_iter23_reg <= icmp_ln1729_reg_1162_pp0_iter22_reg;
        icmp_ln1729_reg_1162_pp0_iter24_reg <= icmp_ln1729_reg_1162_pp0_iter23_reg;
        icmp_ln1729_reg_1162_pp0_iter3_reg <= icmp_ln1729_reg_1162;
        icmp_ln1729_reg_1162_pp0_iter4_reg <= icmp_ln1729_reg_1162_pp0_iter3_reg;
        icmp_ln1729_reg_1162_pp0_iter5_reg <= icmp_ln1729_reg_1162_pp0_iter4_reg;
        icmp_ln1729_reg_1162_pp0_iter6_reg <= icmp_ln1729_reg_1162_pp0_iter5_reg;
        icmp_ln1729_reg_1162_pp0_iter7_reg <= icmp_ln1729_reg_1162_pp0_iter6_reg;
        icmp_ln1729_reg_1162_pp0_iter8_reg <= icmp_ln1729_reg_1162_pp0_iter7_reg;
        icmp_ln1729_reg_1162_pp0_iter9_reg <= icmp_ln1729_reg_1162_pp0_iter8_reg;
        icmp_ln1735_1_reg_1182_pp0_iter10_reg <= icmp_ln1735_1_reg_1182_pp0_iter9_reg;
        icmp_ln1735_1_reg_1182_pp0_iter11_reg <= icmp_ln1735_1_reg_1182_pp0_iter10_reg;
        icmp_ln1735_1_reg_1182_pp0_iter12_reg <= icmp_ln1735_1_reg_1182_pp0_iter11_reg;
        icmp_ln1735_1_reg_1182_pp0_iter13_reg <= icmp_ln1735_1_reg_1182_pp0_iter12_reg;
        icmp_ln1735_1_reg_1182_pp0_iter14_reg <= icmp_ln1735_1_reg_1182_pp0_iter13_reg;
        icmp_ln1735_1_reg_1182_pp0_iter15_reg <= icmp_ln1735_1_reg_1182_pp0_iter14_reg;
        icmp_ln1735_1_reg_1182_pp0_iter16_reg <= icmp_ln1735_1_reg_1182_pp0_iter15_reg;
        icmp_ln1735_1_reg_1182_pp0_iter17_reg <= icmp_ln1735_1_reg_1182_pp0_iter16_reg;
        icmp_ln1735_1_reg_1182_pp0_iter18_reg <= icmp_ln1735_1_reg_1182_pp0_iter17_reg;
        icmp_ln1735_1_reg_1182_pp0_iter19_reg <= icmp_ln1735_1_reg_1182_pp0_iter18_reg;
        icmp_ln1735_1_reg_1182_pp0_iter20_reg <= icmp_ln1735_1_reg_1182_pp0_iter19_reg;
        icmp_ln1735_1_reg_1182_pp0_iter21_reg <= icmp_ln1735_1_reg_1182_pp0_iter20_reg;
        icmp_ln1735_1_reg_1182_pp0_iter22_reg <= icmp_ln1735_1_reg_1182_pp0_iter21_reg;
        icmp_ln1735_1_reg_1182_pp0_iter23_reg <= icmp_ln1735_1_reg_1182_pp0_iter22_reg;
        icmp_ln1735_1_reg_1182_pp0_iter24_reg <= icmp_ln1735_1_reg_1182_pp0_iter23_reg;
        icmp_ln1735_1_reg_1182_pp0_iter25_reg <= icmp_ln1735_1_reg_1182_pp0_iter24_reg;
        icmp_ln1735_1_reg_1182_pp0_iter26_reg <= icmp_ln1735_1_reg_1182_pp0_iter25_reg;
        icmp_ln1735_1_reg_1182_pp0_iter3_reg <= icmp_ln1735_1_reg_1182;
        icmp_ln1735_1_reg_1182_pp0_iter4_reg <= icmp_ln1735_1_reg_1182_pp0_iter3_reg;
        icmp_ln1735_1_reg_1182_pp0_iter5_reg <= icmp_ln1735_1_reg_1182_pp0_iter4_reg;
        icmp_ln1735_1_reg_1182_pp0_iter6_reg <= icmp_ln1735_1_reg_1182_pp0_iter5_reg;
        icmp_ln1735_1_reg_1182_pp0_iter7_reg <= icmp_ln1735_1_reg_1182_pp0_iter6_reg;
        icmp_ln1735_1_reg_1182_pp0_iter8_reg <= icmp_ln1735_1_reg_1182_pp0_iter7_reg;
        icmp_ln1735_1_reg_1182_pp0_iter9_reg <= icmp_ln1735_1_reg_1182_pp0_iter8_reg;
        icmp_ln1735_reg_1176_pp0_iter10_reg <= icmp_ln1735_reg_1176_pp0_iter9_reg;
        icmp_ln1735_reg_1176_pp0_iter11_reg <= icmp_ln1735_reg_1176_pp0_iter10_reg;
        icmp_ln1735_reg_1176_pp0_iter12_reg <= icmp_ln1735_reg_1176_pp0_iter11_reg;
        icmp_ln1735_reg_1176_pp0_iter13_reg <= icmp_ln1735_reg_1176_pp0_iter12_reg;
        icmp_ln1735_reg_1176_pp0_iter14_reg <= icmp_ln1735_reg_1176_pp0_iter13_reg;
        icmp_ln1735_reg_1176_pp0_iter15_reg <= icmp_ln1735_reg_1176_pp0_iter14_reg;
        icmp_ln1735_reg_1176_pp0_iter16_reg <= icmp_ln1735_reg_1176_pp0_iter15_reg;
        icmp_ln1735_reg_1176_pp0_iter17_reg <= icmp_ln1735_reg_1176_pp0_iter16_reg;
        icmp_ln1735_reg_1176_pp0_iter18_reg <= icmp_ln1735_reg_1176_pp0_iter17_reg;
        icmp_ln1735_reg_1176_pp0_iter19_reg <= icmp_ln1735_reg_1176_pp0_iter18_reg;
        icmp_ln1735_reg_1176_pp0_iter20_reg <= icmp_ln1735_reg_1176_pp0_iter19_reg;
        icmp_ln1735_reg_1176_pp0_iter21_reg <= icmp_ln1735_reg_1176_pp0_iter20_reg;
        icmp_ln1735_reg_1176_pp0_iter22_reg <= icmp_ln1735_reg_1176_pp0_iter21_reg;
        icmp_ln1735_reg_1176_pp0_iter23_reg <= icmp_ln1735_reg_1176_pp0_iter22_reg;
        icmp_ln1735_reg_1176_pp0_iter24_reg <= icmp_ln1735_reg_1176_pp0_iter23_reg;
        icmp_ln1735_reg_1176_pp0_iter25_reg <= icmp_ln1735_reg_1176_pp0_iter24_reg;
        icmp_ln1735_reg_1176_pp0_iter26_reg <= icmp_ln1735_reg_1176_pp0_iter25_reg;
        icmp_ln1735_reg_1176_pp0_iter3_reg <= icmp_ln1735_reg_1176;
        icmp_ln1735_reg_1176_pp0_iter4_reg <= icmp_ln1735_reg_1176_pp0_iter3_reg;
        icmp_ln1735_reg_1176_pp0_iter5_reg <= icmp_ln1735_reg_1176_pp0_iter4_reg;
        icmp_ln1735_reg_1176_pp0_iter6_reg <= icmp_ln1735_reg_1176_pp0_iter5_reg;
        icmp_ln1735_reg_1176_pp0_iter7_reg <= icmp_ln1735_reg_1176_pp0_iter6_reg;
        icmp_ln1735_reg_1176_pp0_iter8_reg <= icmp_ln1735_reg_1176_pp0_iter7_reg;
        icmp_ln1735_reg_1176_pp0_iter9_reg <= icmp_ln1735_reg_1176_pp0_iter8_reg;
        icmp_ln1968_reg_1105_pp0_iter10_reg <= icmp_ln1968_reg_1105_pp0_iter9_reg;
        icmp_ln1968_reg_1105_pp0_iter11_reg <= icmp_ln1968_reg_1105_pp0_iter10_reg;
        icmp_ln1968_reg_1105_pp0_iter12_reg <= icmp_ln1968_reg_1105_pp0_iter11_reg;
        icmp_ln1968_reg_1105_pp0_iter13_reg <= icmp_ln1968_reg_1105_pp0_iter12_reg;
        icmp_ln1968_reg_1105_pp0_iter14_reg <= icmp_ln1968_reg_1105_pp0_iter13_reg;
        icmp_ln1968_reg_1105_pp0_iter15_reg <= icmp_ln1968_reg_1105_pp0_iter14_reg;
        icmp_ln1968_reg_1105_pp0_iter16_reg <= icmp_ln1968_reg_1105_pp0_iter15_reg;
        icmp_ln1968_reg_1105_pp0_iter17_reg <= icmp_ln1968_reg_1105_pp0_iter16_reg;
        icmp_ln1968_reg_1105_pp0_iter18_reg <= icmp_ln1968_reg_1105_pp0_iter17_reg;
        icmp_ln1968_reg_1105_pp0_iter19_reg <= icmp_ln1968_reg_1105_pp0_iter18_reg;
        icmp_ln1968_reg_1105_pp0_iter20_reg <= icmp_ln1968_reg_1105_pp0_iter19_reg;
        icmp_ln1968_reg_1105_pp0_iter21_reg <= icmp_ln1968_reg_1105_pp0_iter20_reg;
        icmp_ln1968_reg_1105_pp0_iter22_reg <= icmp_ln1968_reg_1105_pp0_iter21_reg;
        icmp_ln1968_reg_1105_pp0_iter23_reg <= icmp_ln1968_reg_1105_pp0_iter22_reg;
        icmp_ln1968_reg_1105_pp0_iter24_reg <= icmp_ln1968_reg_1105_pp0_iter23_reg;
        icmp_ln1968_reg_1105_pp0_iter25_reg <= icmp_ln1968_reg_1105_pp0_iter24_reg;
        icmp_ln1968_reg_1105_pp0_iter26_reg <= icmp_ln1968_reg_1105_pp0_iter25_reg;
        icmp_ln1968_reg_1105_pp0_iter27_reg <= icmp_ln1968_reg_1105_pp0_iter26_reg;
        icmp_ln1968_reg_1105_pp0_iter28_reg <= icmp_ln1968_reg_1105_pp0_iter27_reg;
        icmp_ln1968_reg_1105_pp0_iter2_reg <= icmp_ln1968_reg_1105_pp0_iter1_reg;
        icmp_ln1968_reg_1105_pp0_iter3_reg <= icmp_ln1968_reg_1105_pp0_iter2_reg;
        icmp_ln1968_reg_1105_pp0_iter4_reg <= icmp_ln1968_reg_1105_pp0_iter3_reg;
        icmp_ln1968_reg_1105_pp0_iter5_reg <= icmp_ln1968_reg_1105_pp0_iter4_reg;
        icmp_ln1968_reg_1105_pp0_iter6_reg <= icmp_ln1968_reg_1105_pp0_iter5_reg;
        icmp_ln1968_reg_1105_pp0_iter7_reg <= icmp_ln1968_reg_1105_pp0_iter6_reg;
        icmp_ln1968_reg_1105_pp0_iter8_reg <= icmp_ln1968_reg_1105_pp0_iter7_reg;
        icmp_ln1968_reg_1105_pp0_iter9_reg <= icmp_ln1968_reg_1105_pp0_iter8_reg;
        sub_V_reg_1171_pp0_iter10_reg <= sub_V_reg_1171_pp0_iter9_reg;
        sub_V_reg_1171_pp0_iter11_reg <= sub_V_reg_1171_pp0_iter10_reg;
        sub_V_reg_1171_pp0_iter12_reg <= sub_V_reg_1171_pp0_iter11_reg;
        sub_V_reg_1171_pp0_iter13_reg <= sub_V_reg_1171_pp0_iter12_reg;
        sub_V_reg_1171_pp0_iter14_reg <= sub_V_reg_1171_pp0_iter13_reg;
        sub_V_reg_1171_pp0_iter15_reg <= sub_V_reg_1171_pp0_iter14_reg;
        sub_V_reg_1171_pp0_iter16_reg <= sub_V_reg_1171_pp0_iter15_reg;
        sub_V_reg_1171_pp0_iter17_reg <= sub_V_reg_1171_pp0_iter16_reg;
        sub_V_reg_1171_pp0_iter18_reg <= sub_V_reg_1171_pp0_iter17_reg;
        sub_V_reg_1171_pp0_iter19_reg <= sub_V_reg_1171_pp0_iter18_reg;
        sub_V_reg_1171_pp0_iter20_reg <= sub_V_reg_1171_pp0_iter19_reg;
        sub_V_reg_1171_pp0_iter21_reg <= sub_V_reg_1171_pp0_iter20_reg;
        sub_V_reg_1171_pp0_iter22_reg <= sub_V_reg_1171_pp0_iter21_reg;
        sub_V_reg_1171_pp0_iter23_reg <= sub_V_reg_1171_pp0_iter22_reg;
        sub_V_reg_1171_pp0_iter24_reg <= sub_V_reg_1171_pp0_iter23_reg;
        sub_V_reg_1171_pp0_iter25_reg <= sub_V_reg_1171_pp0_iter24_reg;
        sub_V_reg_1171_pp0_iter3_reg <= sub_V_reg_1171;
        sub_V_reg_1171_pp0_iter4_reg <= sub_V_reg_1171_pp0_iter3_reg;
        sub_V_reg_1171_pp0_iter5_reg <= sub_V_reg_1171_pp0_iter4_reg;
        sub_V_reg_1171_pp0_iter6_reg <= sub_V_reg_1171_pp0_iter5_reg;
        sub_V_reg_1171_pp0_iter7_reg <= sub_V_reg_1171_pp0_iter6_reg;
        sub_V_reg_1171_pp0_iter8_reg <= sub_V_reg_1171_pp0_iter7_reg;
        sub_V_reg_1171_pp0_iter9_reg <= sub_V_reg_1171_pp0_iter8_reg;
        tmp_112_reg_1150_pp0_iter10_reg <= tmp_112_reg_1150_pp0_iter9_reg;
        tmp_112_reg_1150_pp0_iter11_reg <= tmp_112_reg_1150_pp0_iter10_reg;
        tmp_112_reg_1150_pp0_iter12_reg <= tmp_112_reg_1150_pp0_iter11_reg;
        tmp_112_reg_1150_pp0_iter13_reg <= tmp_112_reg_1150_pp0_iter12_reg;
        tmp_112_reg_1150_pp0_iter14_reg <= tmp_112_reg_1150_pp0_iter13_reg;
        tmp_112_reg_1150_pp0_iter15_reg <= tmp_112_reg_1150_pp0_iter14_reg;
        tmp_112_reg_1150_pp0_iter16_reg <= tmp_112_reg_1150_pp0_iter15_reg;
        tmp_112_reg_1150_pp0_iter17_reg <= tmp_112_reg_1150_pp0_iter16_reg;
        tmp_112_reg_1150_pp0_iter18_reg <= tmp_112_reg_1150_pp0_iter17_reg;
        tmp_112_reg_1150_pp0_iter19_reg <= tmp_112_reg_1150_pp0_iter18_reg;
        tmp_112_reg_1150_pp0_iter20_reg <= tmp_112_reg_1150_pp0_iter19_reg;
        tmp_112_reg_1150_pp0_iter21_reg <= tmp_112_reg_1150_pp0_iter20_reg;
        tmp_112_reg_1150_pp0_iter22_reg <= tmp_112_reg_1150_pp0_iter21_reg;
        tmp_112_reg_1150_pp0_iter23_reg <= tmp_112_reg_1150_pp0_iter22_reg;
        tmp_112_reg_1150_pp0_iter24_reg <= tmp_112_reg_1150_pp0_iter23_reg;
        tmp_112_reg_1150_pp0_iter25_reg <= tmp_112_reg_1150_pp0_iter24_reg;
        tmp_112_reg_1150_pp0_iter26_reg <= tmp_112_reg_1150_pp0_iter25_reg;
        tmp_112_reg_1150_pp0_iter27_reg <= tmp_112_reg_1150_pp0_iter26_reg;
        tmp_112_reg_1150_pp0_iter28_reg <= tmp_112_reg_1150_pp0_iter27_reg;
        tmp_112_reg_1150_pp0_iter3_reg <= tmp_112_reg_1150;
        tmp_112_reg_1150_pp0_iter4_reg <= tmp_112_reg_1150_pp0_iter3_reg;
        tmp_112_reg_1150_pp0_iter5_reg <= tmp_112_reg_1150_pp0_iter4_reg;
        tmp_112_reg_1150_pp0_iter6_reg <= tmp_112_reg_1150_pp0_iter5_reg;
        tmp_112_reg_1150_pp0_iter7_reg <= tmp_112_reg_1150_pp0_iter6_reg;
        tmp_112_reg_1150_pp0_iter8_reg <= tmp_112_reg_1150_pp0_iter7_reg;
        tmp_112_reg_1150_pp0_iter9_reg <= tmp_112_reg_1150_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1100 <= i_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1722_reg_1187 <= icmp_ln1722_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1968_reg_1105 <= icmp_ln1968_fu_346_p2;
        icmp_ln1968_reg_1105_pp0_iter1_reg <= icmp_ln1968_reg_1105;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105_pp0_iter25_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln703_reg_1206[35 : 2] <= mul_ln703_fu_588_p2[35 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read_reg_1086 <= p_src_cols_V_dout;
        p_src_rows_V_read_reg_1091 <= p_src_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1968_reg_1105_pp0_iter26_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_6_reg_1211 <= r_V_6_fu_1080_p2;
        select_ln1148_reg_1217[35 : 1] <= select_ln1148_fu_685_p3[35 : 1];
        tmp_104_reg_1222 <= select_ln1148_fu_685_p3[32'd18];
    end
end

always @ (*) begin
    if ((icmp_ln1968_fu_346_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1967_fu_331_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_449_ce = 1'b1;
    end else begin
        grp_fu_449_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_545_ce = 1'b1;
    end else begin
        grp_fu_545_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1967_fu_331_p2 == 1'd0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1968_reg_1105 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1967_fu_331_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1968_fu_346_p2 == 1'd0)) & ~((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1968_fu_346_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G_1_fu_377_p3 = ((icmp_ln1510_1_fu_371_p2[0:0] === 1'b1) ? p_src_data_stream_1_V_dout : select_ln1510_fu_363_p3);

assign G_2_fu_405_p3 = ((icmp_ln1519_1_fu_399_p2[0:0] === 1'b1) ? p_src_data_stream_1_V_dout : select_ln1519_fu_391_p3);

assign H_V_1_fu_632_p2 = (zext_ln728_fu_628_p1 + mul_ln703_reg_1206);

assign H_V_2_fu_701_p1 = select_ln1148_reg_1217;

assign H_V_3_fu_726_p2 = ($signed(H_V_2_fu_701_p1) + $signed(select_ln703_fu_718_p3));

assign H_V_fu_620_p3 = {{select_ln1735_1_fu_612_p3}, {19'd0}};

assign Range1_all_ones_1_fu_923_p2 = ((tmp_s_fu_913_p4 == 10'd1023) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_797_p2 = ((p_Result_5_i_i_i_fu_787_p4 == 10'd1023) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_929_p2 = ((tmp_s_fu_913_p4 == 10'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_803_p2 = ((p_Result_5_i_i_i_fu_787_p4 == 10'd0) ? 1'b1 : 1'b0);

assign and_ln1734_fu_498_p2 = (xor_ln1734_fu_492_p2 & icmp_ln1734_1_fu_472_p2);

assign and_ln340_1_fu_985_p2 = (or_ln785_1_fu_961_p2 & or_ln340_3_fu_979_p2);

assign and_ln340_fu_1046_p2 = (or_ln785_reg_1245 & or_ln340_2_fu_1041_p2);

assign and_ln781_1_fu_943_p2 = (carry_4_fu_907_p2 & Range1_all_ones_1_fu_923_p2);

assign and_ln781_fu_817_p2 = (carry_2_fu_781_p2 & Range1_all_ones_fu_797_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter29 == 1'b1) & (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter29 == 1'b1) & (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter29 == 1'b1) & (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter29 = (((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((icmp_ln1968_reg_1105_pp0_iter28_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((icmp_ln1968_reg_1105 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_0598_0_i_i_reg_316 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0608_0_i_i_reg_305 = 'bx;

assign ap_ready = internal_ap_ready;

assign carry_2_fu_781_p2 = (xor_ln416_fu_775_p2 & p_Result_7_fu_750_p3);

assign carry_4_fu_907_p2 = (xor_ln416_1_fu_901_p2 & p_Result_9_fu_867_p3);

assign deleted_zeros_1_fu_935_p3 = ((carry_4_fu_907_p2[0:0] === 1'b1) ? Range1_all_ones_1_fu_923_p2 : Range1_all_zeros_1_fu_929_p2);

assign deleted_zeros_fu_809_p3 = ((carry_2_fu_781_p2[0:0] === 1'b1) ? Range1_all_ones_fu_797_p2 : Range1_all_zeros_fu_803_p2);

assign diff_fu_433_p2 = (tmp_112_fu_417_p3 - select_ln1519_2_fu_427_p3);

assign grp_fu_449_p1 = grp_fu_449_p10;

assign grp_fu_449_p10 = diff_fu_433_p2;

assign grp_fu_545_p1 = grp_fu_545_p10;

assign grp_fu_545_p10 = tmp_112_reg_1150;

assign i_fu_336_p2 = (i_0_i_reg_283 + 10'd1);

assign icmp_ln1510_1_fu_371_p2 = ((p_src_data_stream_1_V_dout > select_ln1510_fu_363_p3) ? 1'b1 : 1'b0);

assign icmp_ln1510_2_fu_413_p2 = ((tmp_115_reg_1129 > G_1_reg_1138) ? 1'b1 : 1'b0);

assign icmp_ln1510_fu_357_p2 = ((p_src_data_stream_0_V_dout > p_src_data_stream_2_V_dout) ? 1'b1 : 1'b0);

assign icmp_ln1519_1_fu_399_p2 = ((p_src_data_stream_1_V_dout < select_ln1519_fu_391_p3) ? 1'b1 : 1'b0);

assign icmp_ln1519_2_fu_423_p2 = ((tmp_115_reg_1129 < G_2_reg_1144) ? 1'b1 : 1'b0);

assign icmp_ln1519_fu_385_p2 = ((p_src_data_stream_0_V_dout < p_src_data_stream_2_V_dout) ? 1'b1 : 1'b0);

assign icmp_ln1722_fu_537_p2 = ((tmp_112_reg_1150 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1729_fu_439_p2 = ((tmp_112_fu_417_p3 == select_ln1519_2_fu_427_p3) ? 1'b1 : 1'b0);

assign icmp_ln1734_1_fu_472_p2 = ((tmp_112_fu_417_p3 == tmp_114_reg_1121) ? 1'b1 : 1'b0);

assign icmp_ln1734_fu_455_p2 = ((tmp_112_fu_417_p3 == tmp_113_reg_1114) ? 1'b1 : 1'b0);

assign icmp_ln1735_1_fu_532_p2 = ((select_ln1734_fu_504_p3 == tmp_114_reg_1121) ? 1'b1 : 1'b0);

assign icmp_ln1735_fu_527_p2 = ((select_ln1734_fu_504_p3 == tmp_113_reg_1114) ? 1'b1 : 1'b0);

assign icmp_ln1967_fu_331_p2 = (($signed(zext_ln1967_fu_327_p1) < $signed(p_src_rows_V_read_reg_1091)) ? 1'b1 : 1'b0);

assign icmp_ln1968_fu_346_p2 = (($signed(zext_ln1968_fu_342_p1) < $signed(p_src_cols_V_read_reg_1086)) ? 1'b1 : 1'b0);

assign j_fu_351_p2 = (j_0_i_reg_294 + 11'd1);

assign lshr_ln1148_6_fu_651_p4 = {{sub_ln1148_fu_645_p2[35:1]}};

assign lshr_ln1148_7_fu_671_p4 = {{H_V_1_fu_632_p2[35:1]}};

assign mul_ln703_fu_588_p0 = sub_V_reg_1171_pp0_iter25_reg;

assign mul_ln703_fu_588_p1 = sub_ln703_3_fu_578_p2;

assign mul_ln703_fu_588_p2 = ($signed(mul_ln703_fu_588_p0) * $signed(mul_ln703_fu_588_p1));

assign neg_src_4_fu_1026_p2 = (xor_ln781_fu_1021_p2 & p_Result_s_reg_1227);

assign neg_src_fu_955_p2 = (xor_ln781_1_fu_949_p2 & p_Result_8_fu_849_p3);

assign or_ln1735_fu_601_p2 = (icmp_ln1735_reg_1176_pp0_iter26_reg | icmp_ln1735_1_reg_1182_pp0_iter26_reg);

assign or_ln340_1_fu_991_p2 = (overflow_1_fu_967_p2 | or_ln340_3_fu_979_p2);

assign or_ln340_2_fu_1041_p2 = (xor_ln340_1_fu_1036_p2 | and_ln781_reg_1239);

assign or_ln340_3_fu_979_p2 = (xor_ln340_fu_973_p2 | and_ln781_1_fu_943_p2);

assign or_ln340_fu_1051_p2 = (overflow_fu_1031_p2 | or_ln340_2_fu_1041_p2);

assign or_ln785_1_fu_961_p2 = (p_Result_8_fu_849_p3 | deleted_zeros_1_fu_935_p3);

assign or_ln785_fu_823_p2 = (p_Result_s_fu_732_p3 | deleted_zeros_fu_809_p3);

assign overflow_1_fu_967_p2 = (or_ln785_1_fu_961_p2 ^ 1'd1);

assign overflow_fu_1031_p2 = (or_ln785_reg_1245 ^ 1'd1);

assign p_Result_5_i_i_i_fu_787_p4 = {{H_V_3_fu_726_p2[36:27]}};

assign p_Result_7_fu_750_p3 = H_V_3_fu_726_p2[32'd26];

assign p_Result_8_fu_849_p3 = r_V_8_fu_843_p2[32'd36];

assign p_Result_9_fu_867_p3 = r_V_8_fu_843_p2[32'd26];

assign p_Result_s_fu_732_p3 = H_V_3_fu_726_p2[32'd36];

assign p_Val2_27_fu_740_p4 = {{H_V_3_fu_726_p2[26:19]}};

assign p_Val2_28_fu_761_p2 = (zext_ln415_fu_758_p1 + p_Val2_27_fu_740_p4);

assign p_Val2_29_fu_857_p4 = {{r_V_8_fu_843_p2[26:19]}};

assign p_Val2_30_fu_887_p2 = (zext_ln415_3_fu_883_p1 + p_Val2_29_fu_857_p4);

assign p_Val2_s_fu_1013_p3 = ((or_ln340_1_fu_991_p2[0:0] === 1'b1) ? select_ln340_1_fu_997_p3 : select_ln396_1_fu_1005_p3);

assign p_dst_data_stream_0_V_din = ((or_ln340_fu_1051_p2[0:0] === 1'b1) ? select_ln340_fu_1057_p3 : select_ln396_fu_1064_p3);

assign p_dst_data_stream_1_V_din = p_Val2_s_reg_1251;

assign p_dst_data_stream_2_V_din = tmp_112_reg_1150_pp0_iter28_reg;

assign r_V_6_fu_1080_p0 = r_V_6_fu_1080_p00;

assign r_V_6_fu_1080_p00 = ap_phi_reg_pp0_iter27_p_0598_0_i_i_reg_316;

assign r_V_6_fu_1080_p1 = r_V_6_fu_1080_p10;

assign r_V_6_fu_1080_p10 = diff_reg_1157_pp0_iter26_reg;

assign r_V_8_fu_843_p2 = (zext_ln1118_2_fu_839_p1 - zext_ln1118_1_fu_829_p1);

assign ret_V_fu_704_p2 = ($signed(37'd262144) + $signed(H_V_2_fu_701_p1));

assign select_ln1148_fu_685_p3 = ((tmp_fu_637_p3[0:0] === 1'b1) ? sub_ln1148_4_fu_665_p2 : zext_ln1148_5_fu_681_p1);

assign select_ln1510_fu_363_p3 = ((icmp_ln1510_fu_357_p2[0:0] === 1'b1) ? p_src_data_stream_0_V_dout : p_src_data_stream_2_V_dout);

assign select_ln1519_2_fu_427_p3 = ((icmp_ln1519_2_fu_423_p2[0:0] === 1'b1) ? tmp_115_reg_1129 : G_2_reg_1144);

assign select_ln1519_fu_391_p3 = ((icmp_ln1519_fu_385_p2[0:0] === 1'b1) ? p_src_data_stream_0_V_dout : p_src_data_stream_2_V_dout);

assign select_ln1734_1_fu_511_p3 = ((icmp_ln1734_fu_455_p2[0:0] === 1'b1) ? sub_ln703_fu_466_p2 : sub_ln703_2_fu_486_p2);

assign select_ln1734_fu_504_p3 = ((and_ln1734_fu_498_p2[0:0] === 1'b1) ? tmp_114_reg_1121 : tmp_112_fu_417_p3);

assign select_ln1735_1_fu_612_p3 = ((or_ln1735_fu_601_p2[0:0] === 1'b1) ? select_ln1735_fu_605_p3 : 8'd240);

assign select_ln1735_fu_605_p3 = ((icmp_ln1735_reg_1176_pp0_iter26_reg[0:0] === 1'b1) ? 8'd0 : 8'd120);

assign select_ln340_1_fu_997_p3 = ((and_ln340_1_fu_985_p2[0:0] === 1'b1) ? p_Val2_30_fu_887_p2 : 8'd255);

assign select_ln340_fu_1057_p3 = ((and_ln340_fu_1046_p2[0:0] === 1'b1) ? p_Val2_28_reg_1233 : 8'd255);

assign select_ln396_1_fu_1005_p3 = ((neg_src_fu_955_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_30_fu_887_p2);

assign select_ln396_fu_1064_p3 = ((neg_src_4_fu_1026_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_28_reg_1233);

assign select_ln703_fu_718_p3 = ((tmp_101_fu_710_p3[0:0] === 1'b1) ? 37'd94371840 : 37'd0);

assign shl_ln2_fu_832_p3 = {{r_V_6_reg_1211}, {8'd0}};

assign shl_ln703_2_fu_566_p3 = {{ap_phi_reg_pp0_iter26_p_0608_0_i_i_reg_305}, {2'd0}};

assign shl_ln_fu_554_p3 = {{ap_phi_reg_pp0_iter26_p_0608_0_i_i_reg_305}, {6'd0}};

assign start_out = real_start;

assign sub_V_fu_519_p3 = ((and_ln1734_fu_498_p2[0:0] === 1'b1) ? sub_ln703_1_fu_480_p2 : select_ln1734_1_fu_511_p3);

assign sub_ln1148_4_fu_665_p2 = (36'd0 - zext_ln1148_4_fu_661_p1);

assign sub_ln1148_fu_645_p2 = (36'd0 - H_V_1_fu_632_p2);

assign sub_ln703_1_fu_480_p2 = (zext_ln703_1_fu_463_p1 - zext_ln703_2_fu_477_p1);

assign sub_ln703_2_fu_486_p2 = (zext_ln703_2_fu_477_p1 - zext_ln703_fu_460_p1);

assign sub_ln703_3_fu_578_p2 = (zext_ln703_3_fu_562_p1 - zext_ln703_4_fu_574_p1);

assign sub_ln703_fu_466_p2 = (zext_ln703_fu_460_p1 - zext_ln703_1_fu_463_p1);

assign tmp_101_fu_710_p3 = ret_V_fu_704_p2[32'd36];

assign tmp_105_fu_767_p3 = p_Val2_28_fu_761_p2[32'd7];

assign tmp_108_fu_875_p3 = r_V_8_fu_843_p2[32'd18];

assign tmp_109_fu_893_p3 = p_Val2_30_fu_887_p2[32'd7];

assign tmp_112_fu_417_p3 = ((icmp_ln1510_2_fu_413_p2[0:0] === 1'b1) ? tmp_115_reg_1129 : G_1_reg_1138);

assign tmp_fu_637_p3 = H_V_1_fu_632_p2[32'd35];

assign tmp_s_fu_913_p4 = {{r_V_8_fu_843_p2[36:27]}};

assign xor_ln1734_fu_492_p2 = (icmp_ln1734_fu_455_p2 ^ 1'd1);

assign xor_ln340_1_fu_1036_p2 = (p_Result_s_reg_1227 ^ 1'd1);

assign xor_ln340_fu_973_p2 = (p_Result_8_fu_849_p3 ^ 1'd1);

assign xor_ln416_1_fu_901_p2 = (tmp_109_fu_893_p3 ^ 1'd1);

assign xor_ln416_fu_775_p2 = (tmp_105_fu_767_p3 ^ 1'd1);

assign xor_ln781_1_fu_949_p2 = (1'd1 ^ and_ln781_1_fu_943_p2);

assign xor_ln781_fu_1021_p2 = (1'd1 ^ and_ln781_reg_1239);

assign zext_ln1118_1_fu_829_p1 = r_V_6_reg_1211;

assign zext_ln1118_2_fu_839_p1 = shl_ln2_fu_832_p3;

assign zext_ln1148_4_fu_661_p1 = lshr_ln1148_6_fu_651_p4;

assign zext_ln1148_5_fu_681_p1 = lshr_ln1148_7_fu_671_p4;

assign zext_ln1967_fu_327_p1 = i_0_i_reg_283;

assign zext_ln1968_fu_342_p1 = j_0_i_reg_294;

assign zext_ln415_3_fu_883_p1 = tmp_108_fu_875_p3;

assign zext_ln415_fu_758_p1 = tmp_104_reg_1222;

assign zext_ln703_1_fu_463_p1 = tmp_115_reg_1129;

assign zext_ln703_2_fu_477_p1 = tmp_113_reg_1114;

assign zext_ln703_3_fu_562_p1 = shl_ln_fu_554_p3;

assign zext_ln703_4_fu_574_p1 = shl_ln703_2_fu_566_p3;

assign zext_ln703_fu_460_p1 = tmp_114_reg_1121;

assign zext_ln728_fu_628_p1 = H_V_fu_620_p3;

always @ (posedge ap_clk) begin
    mul_ln703_reg_1206[1:0] <= 2'b00;
    select_ln1148_reg_1217[0] <= 1'b0;
end

endmodule //CvtColor
